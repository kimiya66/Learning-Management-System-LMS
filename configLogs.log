Feb 22, 2025 3:09:09 PM com.lms.UserManager addUser
INFO: New User registered: k, w
Feb 22, 2025 3:10:00 PM com.lms.CourseManager addCourse
INFO: Course 32 added successfully!
Feb 22, 2025 8:15:05 PM com.lms.CourseManager addCourse
INFO: Course 567_LHM added successfully!
Feb 22, 2025 8:16:00 PM com.lms.CourseManager addCourse
INFO: Course 89_lkj added successfully!
Feb 22, 2025 8:16:40 PM com.lms.CourseManager addCourse
INFO: Course Basic Java and Backend added successfully!
Feb 22, 2025 8:16:48 PM com.lms.CourseManager searchByTitleOrDescription
INFO: 2 courses found matching the search criteria
Feb 22, 2025 9:19:28 PM com.lms.CourseManager addCourse
INFO: Course 78 added successfully!
Feb 22, 2025 9:20:38 PM com.lms.CourseManager addCourse
INFO: Course Java advanced level added successfully!
Feb 24, 2025 2:18:22 PM com.lms.db.DatabaseConnection getConnection
FINE: Connection to database established successfully!
Feb 24, 2025 2:19:41 PM com.lms.db.DatabaseConnection getConnection
FINE: Connection to database established successfully!
Feb 24, 2025 2:19:41 PM com.lms.db.TableCreator createTables
FINE: tables created succeessfully!
Feb 26, 2025 1:00:52 AM com.lms.managers.EnrollmentManager enrollStudentInCourse
INFO: Student Bob, gh enrolled to the course java successfully!
Mar 01, 2025 11:34:28 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] pragma busy_timeout=3000
Mar 01, 2025 11:34:28 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] pragma busy_timeout=3000
Mar 01, 2025 11:34:28 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS User(user_id INTEGER PRIMARY KEY AUTOINCREMENT, first_name VARCHAR(100) NOT NULL, last_name VARCHAR(100) NOT NULL, user_email VARCHAR(200) UNIQUE NOT NULL)
Mar 01, 2025 11:34:28 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] begin;
Mar 01, 2025 11:34:28 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] commit;
Mar 01, 2025 11:34:28 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS Student(student_id INTEGER PRIMARY KEY AUTOINCREMENT, user_id INTEGER NOT NULL, study_subject TEXT NOT NULL, FOREIGN KEY (user_id) REFERENCES User(user_id) ON DELETE CASCADE)
Mar 01, 2025 11:34:28 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS Course(course_id INTEGER PRIMARY KEY AUTOINCREMENT, serial_number TEXT UNIQUE NOT NULL, course_title VARCHAR(100) NOT NULL, course_description TEXT, category VARCHAR(100), difficulty_level VARCHAR(100), price REAL NOT NULL, 
Mar 04, 2025 9:20:33 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] pragma busy_timeout=3000
Mar 04, 2025 9:20:33 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS User(user_id INTEGER PRIMARY KEY AUTOINCREMENT, first_name VARCHAR(100) NOT NULL, last_name VARCHAR(100) NOT NULL, user_email VARCHAR(200) UNIQUE NOT NULL)
Mar 04, 2025 9:20:33 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] begin;
Mar 04, 2025 9:20:33 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] commit;
Mar 04, 2025 9:20:33 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS Student(student_id INTEGER PRIMARY KEY AUTOINCREMENT, user_id INTEGER NOT NULL, study_subject TEXT NOT NULL, FOREIGN KEY (user_id) REFERENCES User(user_id) ON DELETE CASCADE)
Mar 04, 2025 9:20:33 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS Course(course_id INTEGER PRIMARY KEY AUTOINCREMENT, serial_number TEXT UNIQUE NOT NULL, course_title VARCHAR(100) NOT NULL, course_description TEXT, category VARCHAR(100), difficulty_level VARCHAR(100), price REAL NOT NULL, 
Mar 04, 2025 9:22:03 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] pragma busy_timeout=3000
Mar 04, 2025 9:22:03 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] pragma busy_timeout=3000
Mar 04, 2025 9:22:03 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS User(user_id INTEGER PRIMARY KEY AUTOINCREMENT, first_name VARCHAR(100) NOT NULL, last_name VARCHAR(100) NOT NULL, user_email VARCHAR(200) UNIQUE NOT NULL)
Mar 04, 2025 9:22:03 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] begin;
Mar 04, 2025 9:22:03 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] commit;
Mar 04, 2025 9:22:03 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS Student(student_id INTEGER PRIMARY KEY AUTOINCREMENT, user_id INTEGER NOT NULL, study_subject TEXT NOT NULL, FOREIGN KEY (user_id) REFERENCES User(user_id) ON DELETE CASCADE)
Mar 04, 2025 9:22:03 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS Course(course_id INTEGER PRIMARY KEY AUTOINCREMENT, serial_number TEXT UNIQUE NOT NULL, course_title VARCHAR(100) NOT NULL, course_description TEXT, category VARCHAR(100), difficulty_level VARCHAR(100), price REAL NOT NULL, 
Mar 04, 2025 9:24:44 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] pragma busy_timeout=3000
Mar 04, 2025 9:24:44 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] pragma busy_timeout=3000
Mar 04, 2025 9:24:44 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS User(user_id INTEGER PRIMARY KEY AUTOINCREMENT, first_name VARCHAR(100) NOT NULL, last_name VARCHAR(100) NOT NULL, user_email VARCHAR(200) UNIQUE NOT NULL)
Mar 04, 2025 9:24:44 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] begin;
Mar 04, 2025 9:24:44 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] commit;
Mar 04, 2025 9:24:44 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS Student(student_id INTEGER PRIMARY KEY AUTOINCREMENT, user_id INTEGER NOT NULL, study_subject TEXT NOT NULL, FOREIGN KEY (user_id) REFERENCES User(user_id) ON DELETE CASCADE)
Mar 04, 2025 9:24:44 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS Course(course_id INTEGER PRIMARY KEY AUTOINCREMENT, serial_number TEXT UNIQUE NOT NULL, course_title VARCHAR(100) NOT NULL, course_description TEXT, category VARCHAR(100), difficulty_level VARCHAR(100), price REAL NOT NULL, 
Mar 04, 2025 9:25:42 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] pragma busy_timeout=3000
Mar 04, 2025 9:25:42 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] pragma busy_timeout=3000
Mar 04, 2025 9:25:42 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS User(user_id INTEGER PRIMARY KEY AUTOINCREMENT, first_name VARCHAR(100) NOT NULL, last_name VARCHAR(100) NOT NULL, user_email VARCHAR(200) UNIQUE NOT NULL)
Mar 04, 2025 9:25:42 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] begin;
Mar 04, 2025 9:25:42 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] commit;
Mar 04, 2025 9:25:42 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS Student(student_id INTEGER PRIMARY KEY AUTOINCREMENT, user_id INTEGER NOT NULL, study_subject TEXT NOT NULL, FOREIGN KEY (user_id) REFERENCES User(user_id) ON DELETE CASCADE)
Mar 04, 2025 9:25:42 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS Course(course_id INTEGER PRIMARY KEY AUTOINCREMENT, serial_number TEXT UNIQUE NOT NULL, course_title VARCHAR(100) NOT NULL, course_description TEXT, category VARCHAR(100), difficulty_level VARCHAR(100), price REAL NOT NULL, 
Mar 04, 2025 9:25:42 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] pragma busy_timeout=3000
Mar 04, 2025 9:25:42 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] pragma busy_timeout=3000
Mar 04, 2025 9:25:42 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] pragma busy_timeout=3000
Mar 04, 2025 9:25:42 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] begin;
Mar 04, 2025 9:25:42 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] INSERT INTO User(first_name, last_name, user_email) VALUES(?, ?, ?)
Mar 04, 2025 9:25:42 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] rollback;
Mar 04, 2025 9:25:42 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] begin;
Mar 04, 2025 9:25:42 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] commit;
Mar 04, 2025 9:25:42 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] begin;
Mar 04, 2025 9:25:42 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] commit;
Mar 04, 2025 9:26:16 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] pragma busy_timeout=3000
Mar 04, 2025 9:26:17 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] pragma busy_timeout=3000
Mar 04, 2025 9:26:17 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS User(user_id INTEGER PRIMARY KEY AUTOINCREMENT, first_name VARCHAR(100) NOT NULL, last_name VARCHAR(100) NOT NULL, user_email VARCHAR(200) UNIQUE NOT NULL)
Mar 04, 2025 9:26:17 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] begin;
Mar 04, 2025 9:26:17 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] commit;
Mar 04, 2025 9:26:17 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS Student(student_id INTEGER PRIMARY KEY AUTOINCREMENT, user_id INTEGER NOT NULL, study_subject TEXT NOT NULL, FOREIGN KEY (user_id) REFERENCES User(user_id) ON DELETE CASCADE)
Mar 04, 2025 9:26:17 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS Course(course_id INTEGER PRIMARY KEY AUTOINCREMENT, serial_number TEXT UNIQUE NOT NULL, course_title VARCHAR(100) NOT NULL, course_description TEXT, category VARCHAR(100), difficulty_level VARCHAR(100), price REAL NOT NULL, 
Mar 04, 2025 9:26:17 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] pragma busy_timeout=3000
Mar 04, 2025 9:26:17 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] pragma busy_timeout=3000
Mar 04, 2025 9:26:17 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] pragma busy_timeout=3000
Mar 04, 2025 9:30:56 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] pragma busy_timeout=3000
Mar 04, 2025 9:30:56 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] pragma busy_timeout=3000
Mar 04, 2025 9:30:56 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS User(user_id INTEGER PRIMARY KEY AUTOINCREMENT, first_name VARCHAR(100) NOT NULL, last_name VARCHAR(100) NOT NULL, user_email VARCHAR(200) UNIQUE NOT NULL)
Mar 04, 2025 9:30:56 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] begin;
Mar 04, 2025 9:30:56 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] commit;
Mar 04, 2025 9:30:56 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS Student(student_id INTEGER PRIMARY KEY AUTOINCREMENT, user_id INTEGER NOT NULL, study_subject TEXT NOT NULL, FOREIGN KEY (user_id) REFERENCES User(user_id) ON DELETE CASCADE)
Mar 04, 2025 9:30:56 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS Course(course_id INTEGER PRIMARY KEY AUTOINCREMENT, serial_number TEXT UNIQUE NOT NULL, course_title VARCHAR(100) NOT NULL, course_description TEXT, category VARCHAR(100), difficulty_level VARCHAR(100), price REAL NOT NULL)
Mar 04, 2025 9:30:56 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS Lesson(lesson_id INTEGER PRIMARY KEY AUTOINCREMENT, course_id INTEGER NOT NULL, lesson_title TEXT NOT NULL, lesson_content TEXT, FOREIGN KEY (course_id) REFERENCES Course(course_id) ON DELETE CASCADE)
Mar 04, 2025 9:30:56 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS Enrollment(enrollment_id INTEGER PRIMARY KEY AUTOINCREMENT, enrollment_dateTime TEXT NOT NULL, student_id INTEGER NOT NULL, course_id INTEGER NOT NULL, rating INTEGER CHECK (rating BETWEEN 1 AND 5), FOREIGN KEY (student_id) REFERENCES Student(student_id) ON DELETE CASCADE, FOREIGN KEY (course_id) REFERENCES Course(course_id) ON DELETE CASCADE, UNIQUE(student_id, course_id))
Mar 04, 2025 9:30:56 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE CompletedLessons(enrollment_id INTEGER NOT NULL, lesson_id INTEGER NOT NULL, PRIMARY KEY (enrollment_id, lesson_id), FOREIGN KEY (enrollment_id) REFERENCES Enrollment(enrollment_id) ON DELETE CASCADE, FOREIGN KEY (lesson_id) REFERENCES Lesson(lesson_id) ON DELETE CASCADE)
Mar 04, 2025 9:30:56 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] pragma busy_timeout=3000
Mar 04, 2025 9:30:56 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] pragma busy_timeout=3000
Mar 04, 2025 9:30:56 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] pragma busy_timeout=3000
Mar 04, 2025 9:35:24 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] pragma busy_timeout=3000
Mar 04, 2025 9:35:24 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] pragma busy_timeout=3000
Mar 04, 2025 9:35:24 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS User(user_id INTEGER PRIMARY KEY AUTOINCREMENT, first_name VARCHAR(100) NOT NULL, last_name VARCHAR(100) NOT NULL, user_email VARCHAR(200) UNIQUE NOT NULL)
Mar 04, 2025 9:35:24 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] begin;
Mar 04, 2025 9:35:24 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] commit;
Mar 04, 2025 9:35:24 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS Student(student_id INTEGER PRIMARY KEY AUTOINCREMENT, user_id INTEGER NOT NULL, study_subject TEXT NOT NULL, FOREIGN KEY (user_id) REFERENCES User(user_id) ON DELETE CASCADE)
Mar 04, 2025 9:35:24 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS Course(course_id INTEGER PRIMARY KEY AUTOINCREMENT, serial_number TEXT UNIQUE NOT NULL, course_title VARCHAR(100) NOT NULL, course_description TEXT, category VARCHAR(100), difficulty_level VARCHAR(100), price REAL NOT NULL)
Mar 04, 2025 9:35:24 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS Lesson(lesson_id INTEGER PRIMARY KEY AUTOINCREMENT, course_id INTEGER NOT NULL, lesson_title TEXT NOT NULL, lesson_content TEXT, FOREIGN KEY (course_id) REFERENCES Course(course_id) ON DELETE CASCADE)
Mar 04, 2025 9:35:24 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS Enrollment(enrollment_id INTEGER PRIMARY KEY AUTOINCREMENT, enrollment_dateTime TEXT NOT NULL, student_id INTEGER NOT NULL, course_id INTEGER NOT NULL, rating INTEGER CHECK (rating BETWEEN 1 AND 5), FOREIGN KEY (student_id) REFERENCES Student(student_id) ON DELETE CASCADE, FOREIGN KEY (course_id) REFERENCES Course(course_id) ON DELETE CASCADE, UNIQUE(student_id, course_id))
Mar 04, 2025 9:35:24 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] DROP TABLE IF EXISTS CompletedLessons
Mar 04, 2025 9:35:24 PM com.lms.db.TableCreator createTables
FINE: tables created successfully!
Mar 04, 2025 9:35:24 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] pragma busy_timeout=3000
Mar 04, 2025 9:35:24 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] pragma busy_timeout=3000
Mar 04, 2025 9:35:24 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] pragma busy_timeout=3000
Mar 04, 2025 9:36:14 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] pragma busy_timeout=3000
Mar 04, 2025 9:36:14 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] pragma busy_timeout=3000
Mar 04, 2025 9:36:14 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS User(user_id INTEGER PRIMARY KEY AUTOINCREMENT, first_name VARCHAR(100) NOT NULL, last_name VARCHAR(100) NOT NULL, user_email VARCHAR(200) UNIQUE NOT NULL)
Mar 04, 2025 9:36:14 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] begin;
Mar 04, 2025 9:36:14 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] commit;
Mar 04, 2025 9:36:14 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS Student(student_id INTEGER PRIMARY KEY AUTOINCREMENT, user_id INTEGER NOT NULL, study_subject TEXT NOT NULL, FOREIGN KEY (user_id) REFERENCES User(user_id) ON DELETE CASCADE)
Mar 04, 2025 9:36:14 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS Course(course_id INTEGER PRIMARY KEY AUTOINCREMENT, serial_number TEXT UNIQUE NOT NULL, course_title VARCHAR(100) NOT NULL, course_description TEXT, category VARCHAR(100), difficulty_level VARCHAR(100), price REAL NOT NULL)
Mar 04, 2025 9:36:14 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS Lesson(lesson_id INTEGER PRIMARY KEY AUTOINCREMENT, course_id INTEGER NOT NULL, lesson_title TEXT NOT NULL, lesson_content TEXT, FOREIGN KEY (course_id) REFERENCES Course(course_id) ON DELETE CASCADE)
Mar 04, 2025 9:36:14 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS Enrollment(enrollment_id INTEGER PRIMARY KEY AUTOINCREMENT, enrollment_dateTime TEXT NOT NULL, student_id INTEGER NOT NULL, course_id INTEGER NOT NULL, rating INTEGER CHECK (rating BETWEEN 1 AND 5), FOREIGN KEY (student_id) REFERENCES Student(student_id) ON DELETE CASCADE, FOREIGN KEY (course_id) REFERENCES Course(course_id) ON DELETE CASCADE, UNIQUE(student_id, course_id))
Mar 04, 2025 9:36:14 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE CompletedLessons(enrollment_id INTEGER NOT NULL, lesson_id INTEGER NOT NULL, PRIMARY KEY (enrollment_id, lesson_id), FOREIGN KEY (enrollment_id) REFERENCES Enrollment(enrollment_id) ON DELETE CASCADE, FOREIGN KEY (lesson_id) REFERENCES Lesson(lesson_id) ON DELETE CASCADE)
Mar 04, 2025 9:36:14 PM com.lms.db.TableCreator createTables
FINE: tables created successfully!
Mar 04, 2025 9:36:14 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] pragma busy_timeout=3000
Mar 04, 2025 9:36:14 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] pragma busy_timeout=3000
Mar 04, 2025 9:36:14 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] pragma busy_timeout=3000
Mar 04, 2025 9:36:26 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] pragma busy_timeout=3000
Mar 04, 2025 9:36:26 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] pragma busy_timeout=3000
Mar 04, 2025 9:36:26 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS User(user_id INTEGER PRIMARY KEY AUTOINCREMENT, first_name VARCHAR(100) NOT NULL, last_name VARCHAR(100) NOT NULL, user_email VARCHAR(200) UNIQUE NOT NULL)
Mar 04, 2025 9:36:26 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] begin;
Mar 04, 2025 9:36:26 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] commit;
Mar 04, 2025 9:36:26 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS Student(student_id INTEGER PRIMARY KEY AUTOINCREMENT, user_id INTEGER NOT NULL, study_subject TEXT NOT NULL, FOREIGN KEY (user_id) REFERENCES User(user_id) ON DELETE CASCADE)
Mar 04, 2025 9:36:26 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS Course(course_id INTEGER PRIMARY KEY AUTOINCREMENT, serial_number TEXT UNIQUE NOT NULL, course_title VARCHAR(100) NOT NULL, course_description TEXT, category VARCHAR(100), difficulty_level VARCHAR(100), price REAL NOT NULL)
Mar 04, 2025 9:36:26 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS Lesson(lesson_id INTEGER PRIMARY KEY AUTOINCREMENT, course_id INTEGER NOT NULL, lesson_title TEXT NOT NULL, lesson_content TEXT, FOREIGN KEY (course_id) REFERENCES Course(course_id) ON DELETE CASCADE)
Mar 04, 2025 9:36:26 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS Enrollment(enrollment_id INTEGER PRIMARY KEY AUTOINCREMENT, enrollment_dateTime TEXT NOT NULL, student_id INTEGER NOT NULL, course_id INTEGER NOT NULL, rating INTEGER CHECK (rating BETWEEN 1 AND 5), FOREIGN KEY (student_id) REFERENCES Student(student_id) ON DELETE CASCADE, FOREIGN KEY (course_id) REFERENCES Course(course_id) ON DELETE CASCADE, UNIQUE(student_id, course_id))
Mar 04, 2025 9:36:26 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS CompletedLessons(enrollment_id INTEGER NOT NULL, lesson_id INTEGER NOT NULL, PRIMARY KEY (enrollment_id, lesson_id), FOREIGN KEY (enrollment_id) REFERENCES Enrollment(enrollment_id) ON DELETE CASCADE, FOREIGN KEY (lesson_id) REFERENCES Lesson(lesson_id) ON DELETE CASCADE)
Mar 04, 2025 9:36:26 PM com.lms.db.TableCreator createTables
FINE: tables created successfully!
Mar 04, 2025 9:36:26 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] pragma busy_timeout=3000
Mar 04, 2025 9:36:26 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] pragma busy_timeout=3000
Mar 04, 2025 9:36:27 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] pragma busy_timeout=3000
Mar 04, 2025 9:36:44 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] pragma busy_timeout=3000
Mar 04, 2025 9:36:44 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] pragma busy_timeout=3000
Mar 04, 2025 9:36:44 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS User(user_id INTEGER PRIMARY KEY AUTOINCREMENT, first_name VARCHAR(100) NOT NULL, last_name VARCHAR(100) NOT NULL, user_email VARCHAR(200) UNIQUE NOT NULL)
Mar 04, 2025 9:36:44 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] begin;
Mar 04, 2025 9:36:44 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] commit;
Mar 04, 2025 9:36:44 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS Student(student_id INTEGER PRIMARY KEY AUTOINCREMENT, user_id INTEGER NOT NULL, study_subject TEXT NOT NULL, FOREIGN KEY (user_id) REFERENCES User(user_id) ON DELETE CASCADE)
Mar 04, 2025 9:36:44 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS Course(course_id INTEGER PRIMARY KEY AUTOINCREMENT, serial_number TEXT UNIQUE NOT NULL, course_title VARCHAR(100) NOT NULL, course_description TEXT, category VARCHAR(100), difficulty_level VARCHAR(100), price REAL NOT NULL)
Mar 04, 2025 9:36:44 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS Lesson(lesson_id INTEGER PRIMARY KEY AUTOINCREMENT, course_id INTEGER NOT NULL, lesson_title TEXT NOT NULL, lesson_content TEXT, FOREIGN KEY (course_id) REFERENCES Course(course_id) ON DELETE CASCADE)
Mar 04, 2025 9:36:44 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS Enrollment(enrollment_id INTEGER PRIMARY KEY AUTOINCREMENT, enrollment_dateTime TEXT NOT NULL, student_id INTEGER NOT NULL, course_id INTEGER NOT NULL, rating INTEGER CHECK (rating BETWEEN 1 AND 5), FOREIGN KEY (student_id) REFERENCES Student(student_id) ON DELETE CASCADE, FOREIGN KEY (course_id) REFERENCES Course(course_id) ON DELETE CASCADE, UNIQUE(student_id, course_id))
Mar 04, 2025 9:36:44 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS CompletedLessons(enrollment_id INTEGER NOT NULL, lesson_id INTEGER NOT NULL, PRIMARY KEY (enrollment_id, lesson_id), FOREIGN KEY (enrollment_id) REFERENCES Enrollment(enrollment_id) ON DELETE CASCADE, FOREIGN KEY (lesson_id) REFERENCES Lesson(lesson_id) ON DELETE CASCADE)
Mar 04, 2025 9:36:44 PM com.lms.db.TableCreator createTables
FINE: tables created successfully!
Mar 04, 2025 9:36:44 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] pragma busy_timeout=3000
Mar 04, 2025 9:36:44 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] pragma busy_timeout=3000
Mar 04, 2025 9:36:44 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] pragma busy_timeout=3000
Mar 04, 2025 9:37:06 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] pragma busy_timeout=3000
Mar 04, 2025 9:37:06 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] pragma busy_timeout=3000
Mar 04, 2025 9:37:06 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS User(user_id INTEGER PRIMARY KEY AUTOINCREMENT, first_name VARCHAR(100) NOT NULL, last_name VARCHAR(100) NOT NULL, user_email VARCHAR(200) UNIQUE NOT NULL)
Mar 04, 2025 9:37:06 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] begin;
Mar 04, 2025 9:37:06 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] commit;
Mar 04, 2025 9:37:06 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS Student(student_id INTEGER PRIMARY KEY AUTOINCREMENT, user_id INTEGER NOT NULL, study_subject TEXT NOT NULL, FOREIGN KEY (user_id) REFERENCES User(user_id) ON DELETE CASCADE)
Mar 04, 2025 9:37:06 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS Course(course_id INTEGER PRIMARY KEY AUTOINCREMENT, serial_number TEXT UNIQUE NOT NULL, course_title VARCHAR(100) NOT NULL, course_description TEXT, category VARCHAR(100), difficulty_level VARCHAR(100), price REAL NOT NULL)
Mar 04, 2025 9:37:06 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS Lesson(lesson_id INTEGER PRIMARY KEY AUTOINCREMENT, course_id INTEGER NOT NULL, lesson_title TEXT NOT NULL, lesson_content TEXT, FOREIGN KEY (course_id) REFERENCES Course(course_id) ON DELETE CASCADE)
Mar 04, 2025 9:37:06 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS Enrollment(enrollment_id INTEGER PRIMARY KEY AUTOINCREMENT, enrollment_dateTime TEXT NOT NULL, student_id INTEGER NOT NULL, course_id INTEGER NOT NULL, rating INTEGER CHECK (rating BETWEEN 1 AND 5), FOREIGN KEY (student_id) REFERENCES Student(student_id) ON DELETE CASCADE, FOREIGN KEY (course_id) REFERENCES Course(course_id) ON DELETE CASCADE, UNIQUE(student_id, course_id))
Mar 04, 2025 9:37:06 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS CompletedLessons(enrollment_id INTEGER NOT NULL, lesson_id INTEGER NOT NULL, PRIMARY KEY (enrollment_id, lesson_id), FOREIGN KEY (enrollment_id) REFERENCES Enrollment(enrollment_id) ON DELETE CASCADE, FOREIGN KEY (lesson_id) REFERENCES Lesson(lesson_id) ON DELETE CASCADE)
Mar 04, 2025 9:37:06 PM com.lms.db.TableCreator createTables
FINE: tables created successfully!
Mar 04, 2025 9:37:06 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] pragma busy_timeout=3000
Mar 04, 2025 9:37:06 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] pragma busy_timeout=3000
Mar 04, 2025 9:37:06 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] pragma busy_timeout=3000
Mar 04, 2025 9:37:06 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] begin;
Mar 04, 2025 9:37:06 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] INSERT INTO User(first_name, last_name, user_email) VALUES(?, ?, ?)
Mar 04, 2025 9:37:06 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] rollback;
Mar 04, 2025 9:37:06 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] begin;
Mar 04, 2025 9:37:06 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] commit;
Mar 04, 2025 9:37:06 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] begin;
Mar 04, 2025 9:37:06 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] commit;
Mar 04, 2025 9:58:35 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] pragma busy_timeout=3000
Mar 04, 2025 9:58:35 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] pragma busy_timeout=3000
Mar 04, 2025 9:58:35 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS User(user_id INTEGER PRIMARY KEY AUTOINCREMENT, first_name VARCHAR(100) NOT NULL, last_name VARCHAR(100) NOT NULL, user_email VARCHAR(200) UNIQUE NOT NULL)
Mar 04, 2025 9:58:35 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] begin;
Mar 04, 2025 9:58:35 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] commit;
Mar 04, 2025 9:58:35 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS Student(student_id INTEGER PRIMARY KEY AUTOINCREMENT, user_id INTEGER NOT NULL, study_subject TEXT NOT NULL, FOREIGN KEY (user_id) REFERENCES User(user_id) ON DELETE CASCADE)
Mar 04, 2025 9:58:35 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS Course(course_id INTEGER PRIMARY KEY AUTOINCREMENT, serial_number TEXT UNIQUE NOT NULL, course_title VARCHAR(100) NOT NULL, course_description TEXT, category VARCHAR(100), difficulty_level VARCHAR(100), price REAL NOT NULL)
Mar 04, 2025 9:58:35 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS Lesson(lesson_id INTEGER PRIMARY KEY AUTOINCREMENT, course_id INTEGER NOT NULL, lesson_title TEXT NOT NULL, lesson_content TEXT, FOREIGN KEY (course_id) REFERENCES Course(course_id) ON DELETE CASCADE)
Mar 04, 2025 9:58:35 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS Enrollment(enrollment_id INTEGER PRIMARY KEY AUTOINCREMENT, enrollment_dateTime TEXT NOT NULL, student_id INTEGER NOT NULL, course_id INTEGER NOT NULL, rating INTEGER CHECK (rating BETWEEN 1 AND 5), FOREIGN KEY (student_id) REFERENCES Student(student_id) ON DELETE CASCADE, FOREIGN KEY (course_id) REFERENCES Course(course_id) ON DELETE CASCADE, UNIQUE(student_id, course_id))
Mar 04, 2025 9:58:35 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS CompletedLessons(enrollment_id INTEGER NOT NULL, lesson_id INTEGER NOT NULL, PRIMARY KEY (enrollment_id, lesson_id), FOREIGN KEY (enrollment_id) REFERENCES Enrollment(enrollment_id) ON DELETE CASCADE, FOREIGN KEY (lesson_id) REFERENCES Lesson(lesson_id) ON DELETE CASCADE)
Mar 04, 2025 9:58:35 PM com.lms.db.TableCreator createTables
FINE: tables created successfully!
Mar 04, 2025 9:58:35 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] pragma busy_timeout=3000
Mar 04, 2025 9:58:35 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] pragma busy_timeout=3000
Mar 04, 2025 9:58:35 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] pragma busy_timeout=3000
Mar 04, 2025 9:58:35 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] begin;
Mar 04, 2025 9:58:35 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] INSERT INTO User(first_name, last_name, user_email) VALUES(?, ?, ?)
Mar 04, 2025 9:58:35 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] SELECT user_id FROM User WHERE user_email = ?
Mar 04, 2025 9:58:35 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] INSERT INTO Student(user_id, study_subject) VALUES(?, ?)
Mar 04, 2025 9:58:35 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] commit;
Mar 04, 2025 9:58:35 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] begin;
Mar 04, 2025 9:58:35 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] commit;
Mar 04, 2025 9:58:35 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] begin;
Mar 04, 2025 9:58:35 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] commit;
Mar 04, 2025 9:58:59 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] pragma busy_timeout=3000
Mar 04, 2025 9:58:59 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] pragma busy_timeout=3000
Mar 04, 2025 9:58:59 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS User(user_id INTEGER PRIMARY KEY AUTOINCREMENT, first_name VARCHAR(100) NOT NULL, last_name VARCHAR(100) NOT NULL, user_email VARCHAR(200) UNIQUE NOT NULL)
Mar 04, 2025 9:58:59 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] begin;
Mar 04, 2025 9:58:59 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] commit;
Mar 04, 2025 9:58:59 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS Student(student_id INTEGER PRIMARY KEY AUTOINCREMENT, user_id INTEGER NOT NULL, study_subject TEXT NOT NULL, FOREIGN KEY (user_id) REFERENCES User(user_id) ON DELETE CASCADE)
Mar 04, 2025 9:58:59 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS Course(course_id INTEGER PRIMARY KEY AUTOINCREMENT, serial_number TEXT UNIQUE NOT NULL, course_title VARCHAR(100) NOT NULL, course_description TEXT, category VARCHAR(100), difficulty_level VARCHAR(100), price REAL NOT NULL)
Mar 04, 2025 9:58:59 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS Lesson(lesson_id INTEGER PRIMARY KEY AUTOINCREMENT, course_id INTEGER NOT NULL, lesson_title TEXT NOT NULL, lesson_content TEXT, FOREIGN KEY (course_id) REFERENCES Course(course_id) ON DELETE CASCADE)
Mar 04, 2025 9:58:59 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS Enrollment(enrollment_id INTEGER PRIMARY KEY AUTOINCREMENT, enrollment_dateTime TEXT NOT NULL, student_id INTEGER NOT NULL, course_id INTEGER NOT NULL, rating INTEGER CHECK (rating BETWEEN 1 AND 5), FOREIGN KEY (student_id) REFERENCES Student(student_id) ON DELETE CASCADE, FOREIGN KEY (course_id) REFERENCES Course(course_id) ON DELETE CASCADE, UNIQUE(student_id, course_id))
Mar 04, 2025 9:58:59 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS CompletedLessons(enrollment_id INTEGER NOT NULL, lesson_id INTEGER NOT NULL, PRIMARY KEY (enrollment_id, lesson_id), FOREIGN KEY (enrollment_id) REFERENCES Enrollment(enrollment_id) ON DELETE CASCADE, FOREIGN KEY (lesson_id) REFERENCES Lesson(lesson_id) ON DELETE CASCADE)
Mar 04, 2025 9:58:59 PM com.lms.db.TableCreator createTables
FINE: tables created successfully!
Mar 04, 2025 9:58:59 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] pragma busy_timeout=3000
Mar 04, 2025 9:58:59 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] pragma busy_timeout=3000
Mar 04, 2025 9:58:59 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] pragma busy_timeout=3000
Mar 04, 2025 9:58:59 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] begin;
Mar 04, 2025 9:58:59 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] INSERT INTO User(first_name, last_name, user_email) VALUES(?, ?, ?)
Mar 04, 2025 9:58:59 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] rollback;
Mar 04, 2025 9:58:59 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] begin;
Mar 04, 2025 9:58:59 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] commit;
Mar 04, 2025 9:58:59 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] begin;
Mar 04, 2025 9:58:59 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] commit;
Mar 04, 2025 9:59:14 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] pragma busy_timeout=3000
Mar 04, 2025 9:59:14 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] pragma busy_timeout=3000
Mar 04, 2025 9:59:14 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS User(user_id INTEGER PRIMARY KEY AUTOINCREMENT, first_name VARCHAR(100) NOT NULL, last_name VARCHAR(100) NOT NULL, user_email VARCHAR(200) UNIQUE NOT NULL)
Mar 04, 2025 9:59:14 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] begin;
Mar 04, 2025 9:59:14 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] commit;
Mar 04, 2025 9:59:14 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS Student(student_id INTEGER PRIMARY KEY AUTOINCREMENT, user_id INTEGER NOT NULL, study_subject TEXT NOT NULL, FOREIGN KEY (user_id) REFERENCES User(user_id) ON DELETE CASCADE)
Mar 04, 2025 9:59:14 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS Course(course_id INTEGER PRIMARY KEY AUTOINCREMENT, serial_number TEXT UNIQUE NOT NULL, course_title VARCHAR(100) NOT NULL, course_description TEXT, category VARCHAR(100), difficulty_level VARCHAR(100), price REAL NOT NULL)
Mar 04, 2025 9:59:14 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS Lesson(lesson_id INTEGER PRIMARY KEY AUTOINCREMENT, course_id INTEGER NOT NULL, lesson_title TEXT NOT NULL, lesson_content TEXT, FOREIGN KEY (course_id) REFERENCES Course(course_id) ON DELETE CASCADE)
Mar 04, 2025 9:59:14 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS Enrollment(enrollment_id INTEGER PRIMARY KEY AUTOINCREMENT, enrollment_dateTime TEXT NOT NULL, student_id INTEGER NOT NULL, course_id INTEGER NOT NULL, rating INTEGER CHECK (rating BETWEEN 1 AND 5), FOREIGN KEY (student_id) REFERENCES Student(student_id) ON DELETE CASCADE, FOREIGN KEY (course_id) REFERENCES Course(course_id) ON DELETE CASCADE, UNIQUE(student_id, course_id))
Mar 04, 2025 9:59:14 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS CompletedLessons(enrollment_id INTEGER NOT NULL, lesson_id INTEGER NOT NULL, PRIMARY KEY (enrollment_id, lesson_id), FOREIGN KEY (enrollment_id) REFERENCES Enrollment(enrollment_id) ON DELETE CASCADE, FOREIGN KEY (lesson_id) REFERENCES Lesson(lesson_id) ON DELETE CASCADE)
Mar 04, 2025 9:59:14 PM com.lms.db.TableCreator createTables
FINE: tables created successfully!
Mar 04, 2025 9:59:14 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] pragma busy_timeout=3000
Mar 04, 2025 9:59:14 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] pragma busy_timeout=3000
Mar 04, 2025 9:59:14 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] pragma busy_timeout=3000
Mar 04, 2025 9:59:14 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] begin;
Mar 04, 2025 9:59:14 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] INSERT INTO User(first_name, last_name, user_email) VALUES(?, ?, ?)
Mar 04, 2025 9:59:14 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] SELECT user_id FROM User WHERE user_email = ?
Mar 04, 2025 9:59:14 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] INSERT INTO Student(user_id, study_subject) VALUES(?, ?)
Mar 04, 2025 9:59:14 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] commit;
Mar 04, 2025 9:59:14 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] begin;
Mar 04, 2025 9:59:14 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] commit;
Mar 04, 2025 9:59:14 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] begin;
Mar 04, 2025 9:59:14 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] commit;
Mar 04, 2025 9:59:43 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] pragma busy_timeout=3000
Mar 04, 2025 9:59:43 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] pragma busy_timeout=3000
Mar 04, 2025 9:59:43 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS User(user_id INTEGER PRIMARY KEY AUTOINCREMENT, first_name VARCHAR(100) NOT NULL, last_name VARCHAR(100) NOT NULL, user_email VARCHAR(200) UNIQUE NOT NULL)
Mar 04, 2025 9:59:43 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] begin;
Mar 04, 2025 9:59:43 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] commit;
Mar 04, 2025 9:59:43 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS Student(student_id INTEGER PRIMARY KEY AUTOINCREMENT, user_id INTEGER NOT NULL, study_subject TEXT NOT NULL, FOREIGN KEY (user_id) REFERENCES User(user_id) ON DELETE CASCADE)
Mar 04, 2025 9:59:43 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS Course(course_id INTEGER PRIMARY KEY AUTOINCREMENT, serial_number TEXT UNIQUE NOT NULL, course_title VARCHAR(100) NOT NULL, course_description TEXT, category VARCHAR(100), difficulty_level VARCHAR(100), price REAL NOT NULL)
Mar 04, 2025 9:59:43 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS Lesson(lesson_id INTEGER PRIMARY KEY AUTOINCREMENT, course_id INTEGER NOT NULL, lesson_title TEXT NOT NULL, lesson_content TEXT, FOREIGN KEY (course_id) REFERENCES Course(course_id) ON DELETE CASCADE)
Mar 04, 2025 9:59:43 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS Enrollment(enrollment_id INTEGER PRIMARY KEY AUTOINCREMENT, enrollment_dateTime TEXT NOT NULL, student_id INTEGER NOT NULL, course_id INTEGER NOT NULL, rating INTEGER CHECK (rating BETWEEN 1 AND 5), FOREIGN KEY (student_id) REFERENCES Student(student_id) ON DELETE CASCADE, FOREIGN KEY (course_id) REFERENCES Course(course_id) ON DELETE CASCADE, UNIQUE(student_id, course_id))
Mar 04, 2025 9:59:43 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS CompletedLessons(enrollment_id INTEGER NOT NULL, lesson_id INTEGER NOT NULL, PRIMARY KEY (enrollment_id, lesson_id), FOREIGN KEY (enrollment_id) REFERENCES Enrollment(enrollment_id) ON DELETE CASCADE, FOREIGN KEY (lesson_id) REFERENCES Lesson(lesson_id) ON DELETE CASCADE)
Mar 04, 2025 9:59:43 PM com.lms.db.TableCreator createTables
FINE: tables created successfully!
Mar 04, 2025 9:59:43 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] pragma busy_timeout=3000
Mar 04, 2025 9:59:43 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] pragma busy_timeout=3000
Mar 04, 2025 9:59:43 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] pragma busy_timeout=3000
Mar 04, 2025 9:59:43 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] begin;
Mar 04, 2025 9:59:43 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] INSERT INTO User(first_name, last_name, user_email) VALUES(?, ?, ?)
Mar 04, 2025 9:59:43 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] SELECT user_id FROM User WHERE user_email = ?
Mar 04, 2025 9:59:43 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] INSERT INTO Student(user_id, study_subject) VALUES(?, ?)
Mar 04, 2025 9:59:43 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] commit;
Mar 04, 2025 9:59:43 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] begin;
Mar 04, 2025 9:59:43 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] commit;
Mar 04, 2025 9:59:43 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] begin;
Mar 04, 2025 9:59:43 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] commit;
Mar 04, 2025 9:59:51 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] pragma busy_timeout=3000
Mar 04, 2025 9:59:51 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] pragma busy_timeout=3000
Mar 04, 2025 9:59:51 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS User(user_id INTEGER PRIMARY KEY AUTOINCREMENT, first_name VARCHAR(100) NOT NULL, last_name VARCHAR(100) NOT NULL, user_email VARCHAR(200) UNIQUE NOT NULL)
Mar 04, 2025 9:59:51 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] begin;
Mar 04, 2025 9:59:51 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] commit;
Mar 04, 2025 9:59:51 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS Student(student_id INTEGER PRIMARY KEY AUTOINCREMENT, user_id INTEGER NOT NULL, study_subject TEXT NOT NULL, FOREIGN KEY (user_id) REFERENCES User(user_id) ON DELETE CASCADE)
Mar 04, 2025 9:59:51 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS Course(course_id INTEGER PRIMARY KEY AUTOINCREMENT, serial_number TEXT UNIQUE NOT NULL, course_title VARCHAR(100) NOT NULL, course_description TEXT, category VARCHAR(100), difficulty_level VARCHAR(100), price REAL NOT NULL)
Mar 04, 2025 9:59:51 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS Lesson(lesson_id INTEGER PRIMARY KEY AUTOINCREMENT, course_id INTEGER NOT NULL, lesson_title TEXT NOT NULL, lesson_content TEXT, FOREIGN KEY (course_id) REFERENCES Course(course_id) ON DELETE CASCADE)
Mar 04, 2025 9:59:51 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS Enrollment(enrollment_id INTEGER PRIMARY KEY AUTOINCREMENT, enrollment_dateTime TEXT NOT NULL, student_id INTEGER NOT NULL, course_id INTEGER NOT NULL, rating INTEGER CHECK (rating BETWEEN 1 AND 5), FOREIGN KEY (student_id) REFERENCES Student(student_id) ON DELETE CASCADE, FOREIGN KEY (course_id) REFERENCES Course(course_id) ON DELETE CASCADE, UNIQUE(student_id, course_id))
Mar 04, 2025 9:59:51 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS CompletedLessons(enrollment_id INTEGER NOT NULL, lesson_id INTEGER NOT NULL, PRIMARY KEY (enrollment_id, lesson_id), FOREIGN KEY (enrollment_id) REFERENCES Enrollment(enrollment_id) ON DELETE CASCADE, FOREIGN KEY (lesson_id) REFERENCES Lesson(lesson_id) ON DELETE CASCADE)
Mar 04, 2025 9:59:51 PM com.lms.db.TableCreator createTables
FINE: tables created successfully!
Mar 04, 2025 9:59:51 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] pragma busy_timeout=3000
Mar 04, 2025 9:59:51 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] pragma busy_timeout=3000
Mar 04, 2025 9:59:51 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] pragma busy_timeout=3000
Mar 04, 2025 9:59:51 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] begin;
Mar 04, 2025 9:59:51 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] INSERT INTO User(first_name, last_name, user_email) VALUES(?, ?, ?)
Mar 04, 2025 9:59:51 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] rollback;
Mar 04, 2025 9:59:51 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] begin;
Mar 04, 2025 9:59:51 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] commit;
Mar 04, 2025 9:59:51 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] begin;
Mar 04, 2025 9:59:51 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] commit;
Mar 04, 2025 10:00:04 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] pragma busy_timeout=3000
Mar 04, 2025 10:00:04 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] pragma busy_timeout=3000
Mar 04, 2025 10:00:04 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS User(user_id INTEGER PRIMARY KEY AUTOINCREMENT, first_name VARCHAR(100) NOT NULL, last_name VARCHAR(100) NOT NULL, user_email VARCHAR(200) UNIQUE NOT NULL)
Mar 04, 2025 10:00:04 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] begin;
Mar 04, 2025 10:00:04 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] commit;
Mar 04, 2025 10:00:04 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS Student(student_id INTEGER PRIMARY KEY AUTOINCREMENT, user_id INTEGER NOT NULL, study_subject TEXT NOT NULL, FOREIGN KEY (user_id) REFERENCES User(user_id) ON DELETE CASCADE)
Mar 04, 2025 10:00:04 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS Course(course_id INTEGER PRIMARY KEY AUTOINCREMENT, serial_number TEXT UNIQUE NOT NULL, course_title VARCHAR(100) NOT NULL, course_description TEXT, category VARCHAR(100), difficulty_level VARCHAR(100), price REAL NOT NULL)
Mar 04, 2025 10:00:04 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS Lesson(lesson_id INTEGER PRIMARY KEY AUTOINCREMENT, course_id INTEGER NOT NULL, lesson_title TEXT NOT NULL, lesson_content TEXT, FOREIGN KEY (course_id) REFERENCES Course(course_id) ON DELETE CASCADE)
Mar 04, 2025 10:00:04 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS Enrollment(enrollment_id INTEGER PRIMARY KEY AUTOINCREMENT, enrollment_dateTime TEXT NOT NULL, student_id INTEGER NOT NULL, course_id INTEGER NOT NULL, rating INTEGER CHECK (rating BETWEEN 1 AND 5), FOREIGN KEY (student_id) REFERENCES Student(student_id) ON DELETE CASCADE, FOREIGN KEY (course_id) REFERENCES Course(course_id) ON DELETE CASCADE, UNIQUE(student_id, course_id))
Mar 04, 2025 10:00:04 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS CompletedLessons(enrollment_id INTEGER NOT NULL, lesson_id INTEGER NOT NULL, PRIMARY KEY (enrollment_id, lesson_id), FOREIGN KEY (enrollment_id) REFERENCES Enrollment(enrollment_id) ON DELETE CASCADE, FOREIGN KEY (lesson_id) REFERENCES Lesson(lesson_id) ON DELETE CASCADE)
Mar 04, 2025 10:00:04 PM com.lms.db.TableCreator createTables
FINE: tables created successfully!
Mar 04, 2025 10:00:04 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] pragma busy_timeout=3000
Mar 04, 2025 10:00:04 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] pragma busy_timeout=3000
Mar 04, 2025 10:00:04 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] pragma busy_timeout=3000
Mar 04, 2025 10:00:04 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] begin;
Mar 04, 2025 10:00:04 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] INSERT INTO User(first_name, last_name, user_email) VALUES(?, ?, ?)
Mar 04, 2025 10:00:04 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] rollback;
Mar 04, 2025 10:00:04 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] begin;
Mar 04, 2025 10:00:04 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] commit;
Mar 04, 2025 10:00:04 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] begin;
Mar 04, 2025 10:00:04 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] commit;
Mar 04, 2025 10:00:28 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] pragma busy_timeout=3000
Mar 04, 2025 10:00:28 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] pragma busy_timeout=3000
Mar 04, 2025 10:00:28 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS User(user_id INTEGER PRIMARY KEY AUTOINCREMENT, first_name VARCHAR(100) NOT NULL, last_name VARCHAR(100) NOT NULL, user_email VARCHAR(200) UNIQUE NOT NULL)
Mar 04, 2025 10:00:28 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] begin;
Mar 04, 2025 10:00:28 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] commit;
Mar 04, 2025 10:00:28 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS Student(student_id INTEGER PRIMARY KEY AUTOINCREMENT, user_id INTEGER NOT NULL, study_subject TEXT NOT NULL, FOREIGN KEY (user_id) REFERENCES User(user_id) ON DELETE CASCADE)
Mar 04, 2025 10:00:28 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS Course(course_id INTEGER PRIMARY KEY AUTOINCREMENT, serial_number TEXT UNIQUE NOT NULL, course_title VARCHAR(100) NOT NULL, course_description TEXT, category VARCHAR(100), difficulty_level VARCHAR(100), price REAL NOT NULL)
Mar 04, 2025 10:00:28 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS Lesson(lesson_id INTEGER PRIMARY KEY AUTOINCREMENT, course_id INTEGER NOT NULL, lesson_title TEXT NOT NULL, lesson_content TEXT, FOREIGN KEY (course_id) REFERENCES Course(course_id) ON DELETE CASCADE)
Mar 04, 2025 10:00:28 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS Enrollment(enrollment_id INTEGER PRIMARY KEY AUTOINCREMENT, enrollment_dateTime TEXT NOT NULL, student_id INTEGER NOT NULL, course_id INTEGER NOT NULL, rating INTEGER CHECK (rating BETWEEN 1 AND 5), FOREIGN KEY (student_id) REFERENCES Student(student_id) ON DELETE CASCADE, FOREIGN KEY (course_id) REFERENCES Course(course_id) ON DELETE CASCADE, UNIQUE(student_id, course_id))
Mar 04, 2025 10:00:28 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS CompletedLessons(enrollment_id INTEGER NOT NULL, lesson_id INTEGER NOT NULL, PRIMARY KEY (enrollment_id, lesson_id), FOREIGN KEY (enrollment_id) REFERENCES Enrollment(enrollment_id) ON DELETE CASCADE, FOREIGN KEY (lesson_id) REFERENCES Lesson(lesson_id) ON DELETE CASCADE)
Mar 04, 2025 10:00:28 PM com.lms.db.TableCreator createTables
FINE: tables created successfully!
Mar 04, 2025 10:00:28 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] pragma busy_timeout=3000
Mar 04, 2025 10:00:28 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] pragma busy_timeout=3000
Mar 04, 2025 10:00:28 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] pragma busy_timeout=3000
Mar 04, 2025 10:00:28 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] begin;
Mar 04, 2025 10:00:28 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] INSERT INTO User(first_name, last_name, user_email) VALUES(?, ?, ?)
Mar 04, 2025 10:00:28 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] SELECT user_id FROM User WHERE user_email = ?
Mar 04, 2025 10:00:28 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] INSERT INTO Student(user_id, study_subject) VALUES(?, ?)
Mar 04, 2025 10:00:28 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] commit;
Mar 04, 2025 10:00:28 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] begin;
Mar 04, 2025 10:00:28 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] commit;
Mar 04, 2025 10:00:28 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] begin;
Mar 04, 2025 10:00:28 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] commit;
Mar 04, 2025 10:23:55 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] pragma busy_timeout=3000
Mar 04, 2025 10:23:55 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] pragma busy_timeout=3000
Mar 04, 2025 10:23:55 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS User(user_id INTEGER PRIMARY KEY AUTOINCREMENT, first_name VARCHAR(100) NOT NULL, last_name VARCHAR(100) NOT NULL, user_email VARCHAR(200) UNIQUE NOT NULL)
Mar 04, 2025 10:23:55 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] begin;
Mar 04, 2025 10:23:55 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] commit;
Mar 04, 2025 10:23:55 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS Student(student_id INTEGER PRIMARY KEY AUTOINCREMENT, user_id INTEGER NOT NULL, study_subject TEXT NOT NULL, FOREIGN KEY (user_id) REFERENCES User(user_id) ON DELETE CASCADE)
Mar 04, 2025 10:23:55 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS Course(course_id INTEGER PRIMARY KEY AUTOINCREMENT, serial_number TEXT UNIQUE NOT NULL, course_title VARCHAR(100) NOT NULL, course_description TEXT, category VARCHAR(100), difficulty_level VARCHAR(100), price REAL NOT NULL)
Mar 04, 2025 10:23:55 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS Lesson(lesson_id INTEGER PRIMARY KEY AUTOINCREMENT, course_id INTEGER NOT NULL, lesson_title TEXT NOT NULL, lesson_content TEXT, FOREIGN KEY (course_id) REFERENCES Course(course_id) ON DELETE CASCADE)
Mar 04, 2025 10:23:55 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS Enrollment(enrollment_id INTEGER PRIMARY KEY AUTOINCREMENT, enrollment_dateTime TEXT NOT NULL, student_id INTEGER NOT NULL, course_id INTEGER NOT NULL, rating INTEGER CHECK (rating BETWEEN 1 AND 5), FOREIGN KEY (student_id) REFERENCES Student(student_id) ON DELETE CASCADE, FOREIGN KEY (course_id) REFERENCES Course(course_id) ON DELETE CASCADE, UNIQUE(student_id, course_id))
Mar 04, 2025 10:23:55 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS CompletedLessons(enrollment_id INTEGER NOT NULL, lesson_id INTEGER NOT NULL, PRIMARY KEY (enrollment_id, lesson_id), FOREIGN KEY (enrollment_id) REFERENCES Enrollment(enrollment_id) ON DELETE CASCADE, FOREIGN KEY (lesson_id) REFERENCES Lesson(lesson_id) ON DELETE CASCADE)
Mar 04, 2025 10:23:55 PM com.lms.db.TableCreator createTables
FINE: tables created successfully!
Mar 04, 2025 10:23:55 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] pragma busy_timeout=3000
Mar 04, 2025 10:23:55 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] pragma busy_timeout=3000
Mar 04, 2025 10:23:55 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] pragma busy_timeout=3000
Mar 04, 2025 10:23:55 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] begin;
Mar 04, 2025 10:23:55 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] INSERT INTO User(first_name, last_name, user_email) VALUES(?, ?, ?)
Mar 04, 2025 10:23:55 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] SELECT user_id FROM User WHERE user_email = ?
Mar 04, 2025 10:23:55 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] INSERT INTO Student(user_id, study_subject) VALUES(?, ?)
Mar 04, 2025 10:23:55 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] commit;
Mar 04, 2025 10:23:55 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] begin;
Mar 04, 2025 10:23:55 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] commit;
Mar 04, 2025 10:23:55 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] begin;
Mar 04, 2025 10:23:55 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] commit;
Mar 04, 2025 10:23:55 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] SELECT User.user_id, User.first_name, User.last_name, User.user_email, Student.student_id, Student.study_subjectFrom StudentWHERE Student.user_id = User.user_id
Mar 04, 2025 10:26:18 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] pragma busy_timeout=3000
Mar 04, 2025 10:26:18 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] pragma busy_timeout=3000
Mar 04, 2025 10:26:18 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS User(user_id INTEGER PRIMARY KEY AUTOINCREMENT, first_name VARCHAR(100) NOT NULL, last_name VARCHAR(100) NOT NULL, user_email VARCHAR(200) UNIQUE NOT NULL)
Mar 04, 2025 10:26:18 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] begin;
Mar 04, 2025 10:26:18 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] commit;
Mar 04, 2025 10:26:18 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS Student(student_id INTEGER PRIMARY KEY AUTOINCREMENT, user_id INTEGER NOT NULL, study_subject TEXT NOT NULL, FOREIGN KEY (user_id) REFERENCES User(user_id) ON DELETE CASCADE)
Mar 04, 2025 10:26:18 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS Course(course_id INTEGER PRIMARY KEY AUTOINCREMENT, serial_number TEXT UNIQUE NOT NULL, course_title VARCHAR(100) NOT NULL, course_description TEXT, category VARCHAR(100), difficulty_level VARCHAR(100), price REAL NOT NULL)
Mar 04, 2025 10:26:18 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS Lesson(lesson_id INTEGER PRIMARY KEY AUTOINCREMENT, course_id INTEGER NOT NULL, lesson_title TEXT NOT NULL, lesson_content TEXT, FOREIGN KEY (course_id) REFERENCES Course(course_id) ON DELETE CASCADE)
Mar 04, 2025 10:26:18 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS Enrollment(enrollment_id INTEGER PRIMARY KEY AUTOINCREMENT, enrollment_dateTime TEXT NOT NULL, student_id INTEGER NOT NULL, course_id INTEGER NOT NULL, rating INTEGER CHECK (rating BETWEEN 1 AND 5), FOREIGN KEY (student_id) REFERENCES Student(student_id) ON DELETE CASCADE, FOREIGN KEY (course_id) REFERENCES Course(course_id) ON DELETE CASCADE, UNIQUE(student_id, course_id))
Mar 04, 2025 10:26:18 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS CompletedLessons(enrollment_id INTEGER NOT NULL, lesson_id INTEGER NOT NULL, PRIMARY KEY (enrollment_id, lesson_id), FOREIGN KEY (enrollment_id) REFERENCES Enrollment(enrollment_id) ON DELETE CASCADE, FOREIGN KEY (lesson_id) REFERENCES Lesson(lesson_id) ON DELETE CASCADE)
Mar 04, 2025 10:26:18 PM com.lms.db.TableCreator createTables
FINE: tables created successfully!
Mar 04, 2025 10:26:18 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] pragma busy_timeout=3000
Mar 04, 2025 10:26:18 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] pragma busy_timeout=3000
Mar 04, 2025 10:26:18 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] pragma busy_timeout=3000
Mar 04, 2025 10:26:18 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] begin;
Mar 04, 2025 10:26:18 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] INSERT INTO User(first_name, last_name, user_email) VALUES(?, ?, ?)
Mar 04, 2025 10:26:18 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] SELECT user_id FROM User WHERE user_email = ?
Mar 04, 2025 10:26:18 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] INSERT INTO Student(user_id, study_subject) VALUES(?, ?)
Mar 04, 2025 10:26:18 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] commit;
Mar 04, 2025 10:26:18 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] begin;
Mar 04, 2025 10:26:18 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] commit;
Mar 04, 2025 10:26:18 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] begin;
Mar 04, 2025 10:26:18 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] commit;
Mar 04, 2025 10:26:18 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] SELECT User.user_id, User.first_name, User.last_name, User.user_email, Student.student_id, Student.study_subject From Student WHERE Student.user_id = User.user_id
Mar 04, 2025 10:29:19 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] pragma busy_timeout=3000
Mar 04, 2025 10:29:19 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] pragma busy_timeout=3000
Mar 04, 2025 10:29:19 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS User(user_id INTEGER PRIMARY KEY AUTOINCREMENT, first_name VARCHAR(100) NOT NULL, last_name VARCHAR(100) NOT NULL, user_email VARCHAR(200) UNIQUE NOT NULL)
Mar 04, 2025 10:29:19 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] begin;
Mar 04, 2025 10:29:19 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] commit;
Mar 04, 2025 10:29:19 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS Student(student_id INTEGER PRIMARY KEY AUTOINCREMENT, user_id INTEGER NOT NULL, study_subject TEXT NOT NULL, FOREIGN KEY (user_id) REFERENCES User(user_id) ON DELETE CASCADE)
Mar 04, 2025 10:29:19 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS Course(course_id INTEGER PRIMARY KEY AUTOINCREMENT, serial_number TEXT UNIQUE NOT NULL, course_title VARCHAR(100) NOT NULL, course_description TEXT, category VARCHAR(100), difficulty_level VARCHAR(100), price REAL NOT NULL)
Mar 04, 2025 10:29:19 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS Lesson(lesson_id INTEGER PRIMARY KEY AUTOINCREMENT, course_id INTEGER NOT NULL, lesson_title TEXT NOT NULL, lesson_content TEXT, FOREIGN KEY (course_id) REFERENCES Course(course_id) ON DELETE CASCADE)
Mar 04, 2025 10:29:19 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS Enrollment(enrollment_id INTEGER PRIMARY KEY AUTOINCREMENT, enrollment_dateTime TEXT NOT NULL, student_id INTEGER NOT NULL, course_id INTEGER NOT NULL, rating INTEGER CHECK (rating BETWEEN 1 AND 5), FOREIGN KEY (student_id) REFERENCES Student(student_id) ON DELETE CASCADE, FOREIGN KEY (course_id) REFERENCES Course(course_id) ON DELETE CASCADE, UNIQUE(student_id, course_id))
Mar 04, 2025 10:29:19 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS CompletedLessons(enrollment_id INTEGER NOT NULL, lesson_id INTEGER NOT NULL, PRIMARY KEY (enrollment_id, lesson_id), FOREIGN KEY (enrollment_id) REFERENCES Enrollment(enrollment_id) ON DELETE CASCADE, FOREIGN KEY (lesson_id) REFERENCES Lesson(lesson_id) ON DELETE CASCADE)
Mar 04, 2025 10:29:19 PM com.lms.db.TableCreator createTables
FINE: tables created successfully!
Mar 04, 2025 10:29:19 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] pragma busy_timeout=3000
Mar 04, 2025 10:29:19 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] pragma busy_timeout=3000
Mar 04, 2025 10:29:19 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] pragma busy_timeout=3000
Mar 04, 2025 10:29:19 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] begin;
Mar 04, 2025 10:29:19 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] INSERT INTO User(first_name, last_name, user_email) VALUES(?, ?, ?)
Mar 04, 2025 10:29:19 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] rollback;
Mar 04, 2025 10:29:19 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] begin;
Mar 04, 2025 10:29:19 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] commit;
Mar 04, 2025 10:29:19 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] begin;
Mar 04, 2025 10:29:19 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] commit;
Mar 04, 2025 10:29:19 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] SELECT User.user_id, User.first_name, User.last_name, User.user_email, Student.student_id, Student.study_subject From Student JOIN User ON Student.user_id = User.user_id
Mar 04, 2025 10:52:36 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] pragma busy_timeout=3000
Mar 04, 2025 10:52:36 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] pragma busy_timeout=3000
Mar 04, 2025 10:52:36 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS User(user_id INTEGER PRIMARY KEY AUTOINCREMENT, first_name VARCHAR(100) NOT NULL, last_name VARCHAR(100) NOT NULL, user_email VARCHAR(200) UNIQUE NOT NULL)
Mar 04, 2025 10:52:36 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] begin;
Mar 04, 2025 10:52:36 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] commit;
Mar 04, 2025 10:52:36 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS Student(student_id INTEGER PRIMARY KEY AUTOINCREMENT, user_id INTEGER NOT NULL, study_subject TEXT NOT NULL, FOREIGN KEY (user_id) REFERENCES User(user_id) ON DELETE CASCADE)
Mar 04, 2025 10:52:36 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS Course(course_id INTEGER PRIMARY KEY AUTOINCREMENT, serial_number TEXT UNIQUE NOT NULL, course_title VARCHAR(100) NOT NULL, course_description TEXT, category VARCHAR(100), difficulty_level VARCHAR(100), price REAL NOT NULL)
Mar 04, 2025 10:52:36 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS Lesson(lesson_id INTEGER PRIMARY KEY AUTOINCREMENT, course_id INTEGER NOT NULL, lesson_title TEXT NOT NULL, lesson_content TEXT, FOREIGN KEY (course_id) REFERENCES Course(course_id) ON DELETE CASCADE)
Mar 04, 2025 10:52:36 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS Enrollment(enrollment_id INTEGER PRIMARY KEY AUTOINCREMENT, enrollment_dateTime TEXT NOT NULL, student_id INTEGER NOT NULL, course_id INTEGER NOT NULL, rating INTEGER CHECK (rating BETWEEN 1 AND 5), FOREIGN KEY (student_id) REFERENCES Student(student_id) ON DELETE CASCADE, FOREIGN KEY (course_id) REFERENCES Course(course_id) ON DELETE CASCADE, UNIQUE(student_id, course_id))
Mar 04, 2025 10:52:36 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS CompletedLessons(enrollment_id INTEGER NOT NULL, lesson_id INTEGER NOT NULL, PRIMARY KEY (enrollment_id, lesson_id), FOREIGN KEY (enrollment_id) REFERENCES Enrollment(enrollment_id) ON DELETE CASCADE, FOREIGN KEY (lesson_id) REFERENCES Lesson(lesson_id) ON DELETE CASCADE)
Mar 04, 2025 10:52:36 PM com.lms.db.TableCreator createTables
FINE: tables created successfully!
Mar 04, 2025 10:52:36 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] pragma busy_timeout=3000
Mar 04, 2025 10:52:36 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] pragma busy_timeout=3000
Mar 04, 2025 10:52:36 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] pragma busy_timeout=3000
Mar 04, 2025 10:52:36 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] begin;
Mar 04, 2025 10:52:36 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] INSERT INTO User(first_name, last_name, user_email) VALUES(?, ?, ?)
Mar 04, 2025 10:52:36 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] SELECT user_id FROM User WHERE user_email = ?
Mar 04, 2025 10:52:36 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] INSERT INTO Student(user_id, study_subject) VALUES(?, ?)
Mar 04, 2025 10:52:36 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] commit;
Mar 04, 2025 10:52:36 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] begin;
Mar 04, 2025 10:52:36 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] commit;
Mar 04, 2025 10:52:36 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] begin;
Mar 04, 2025 10:52:36 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] commit;
Mar 04, 2025 10:52:36 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] SELECT User.user_id, User.first_name, User.last_name, User.user_email, Student.student_id, Student.study_subject From Student JOIN User ON Student.user_id = User.user_id
Mar 04, 2025 10:53:14 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] DELETE FROM Student WHERE user_id = (SELECT user_id 	FROM User where user_email = ?)
Mar 04, 2025 10:53:14 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] SELECT User.user_id, User.first_name, User.last_name, User.user_email, Student.student_id, Student.study_subject From Student JOIN User ON Student.user_id = User.user_id
Mar 05, 2025 12:37:16 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] pragma busy_timeout=3000
Mar 05, 2025 12:37:16 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] pragma busy_timeout=3000
Mar 05, 2025 12:37:16 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS User(user_id INTEGER PRIMARY KEY AUTOINCREMENT, first_name VARCHAR(100) NOT NULL, last_name VARCHAR(100) NOT NULL, user_email VARCHAR(200) UNIQUE NOT NULL)
Mar 05, 2025 12:37:16 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] begin;
Mar 05, 2025 12:37:16 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] commit;
Mar 05, 2025 12:37:16 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS Student(student_id INTEGER PRIMARY KEY AUTOINCREMENT, user_id INTEGER NOT NULL, study_subject TEXT NOT NULL, FOREIGN KEY (user_id) REFERENCES User(user_id) ON DELETE CASCADE)
Mar 05, 2025 12:37:16 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS Course(course_id INTEGER PRIMARY KEY AUTOINCREMENT, serial_number TEXT UNIQUE NOT NULL, course_title VARCHAR(100) NOT NULL, course_description TEXT, category VARCHAR(100), difficulty_level VARCHAR(100), price REAL NOT NULL)
Mar 05, 2025 12:37:16 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS Lesson(lesson_id INTEGER PRIMARY KEY AUTOINCREMENT, course_id INTEGER NOT NULL, lesson_title TEXT NOT NULL, lesson_content TEXT, FOREIGN KEY (course_id) REFERENCES Course(course_id) ON DELETE CASCADE)
Mar 05, 2025 12:37:16 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS Enrollment(enrollment_id INTEGER PRIMARY KEY AUTOINCREMENT, enrollment_dateTime TEXT NOT NULL, student_id INTEGER NOT NULL, course_id INTEGER NOT NULL, rating INTEGER CHECK (rating BETWEEN 1 AND 5), FOREIGN KEY (student_id) REFERENCES Student(student_id) ON DELETE CASCADE, FOREIGN KEY (course_id) REFERENCES Course(course_id) ON DELETE CASCADE, UNIQUE(student_id, course_id))
Mar 05, 2025 12:37:16 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS CompletedLessons(enrollment_id INTEGER NOT NULL, lesson_id INTEGER NOT NULL, PRIMARY KEY (enrollment_id, lesson_id), FOREIGN KEY (enrollment_id) REFERENCES Enrollment(enrollment_id) ON DELETE CASCADE, FOREIGN KEY (lesson_id) REFERENCES Lesson(lesson_id) ON DELETE CASCADE)
Mar 05, 2025 12:37:16 AM com.lms.db.TableCreator createTables
FINE: tables created successfully!
Mar 05, 2025 12:37:16 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] pragma busy_timeout=3000
Mar 05, 2025 12:37:16 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] pragma busy_timeout=3000
Mar 05, 2025 12:37:16 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] pragma busy_timeout=3000
Mar 05, 2025 12:37:16 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] begin;
Mar 05, 2025 12:37:16 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] INSERT INTO User(first_name, last_name, user_email) VALUES(?, ?, ?)
Mar 05, 2025 12:37:16 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] SELECT * FROM User WHERE user_email = ?
Mar 05, 2025 12:37:16 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] INSERT INTO Student(user_id, study_subject) VALUES(?, ?)
Mar 05, 2025 12:37:16 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] commit;
Mar 05, 2025 12:37:16 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] begin;
Mar 05, 2025 12:37:16 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] commit;
Mar 05, 2025 12:37:16 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] begin;
Mar 05, 2025 12:37:16 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] commit;
Mar 05, 2025 12:37:38 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] SELECT * FROM User WHERE user_email = ?
Mar 05, 2025 12:37:38 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] DELETE FROM Student WHERE user_id = ? 
Mar 05, 2025 12:37:38 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] SELECT * FROM User WHERE user_email = ?
Mar 05, 2025 12:37:38 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] SELECT User.user_id, User.first_name, User.last_name, User.user_email, Student.student_id, Student.study_subject From Student JOIN User ON Student.user_id = User.user_id
Mar 05, 2025 12:38:10 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] pragma busy_timeout=3000
Mar 05, 2025 12:38:10 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] pragma busy_timeout=3000
Mar 05, 2025 12:38:10 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS User(user_id INTEGER PRIMARY KEY AUTOINCREMENT, first_name VARCHAR(100) NOT NULL, last_name VARCHAR(100) NOT NULL, user_email VARCHAR(200) UNIQUE NOT NULL)
Mar 05, 2025 12:38:10 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] begin;
Mar 05, 2025 12:38:10 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] commit;
Mar 05, 2025 12:38:10 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS Student(student_id INTEGER PRIMARY KEY AUTOINCREMENT, user_id INTEGER NOT NULL, study_subject TEXT NOT NULL, FOREIGN KEY (user_id) REFERENCES User(user_id) ON DELETE CASCADE)
Mar 05, 2025 12:38:10 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS Course(course_id INTEGER PRIMARY KEY AUTOINCREMENT, serial_number TEXT UNIQUE NOT NULL, course_title VARCHAR(100) NOT NULL, course_description TEXT, category VARCHAR(100), difficulty_level VARCHAR(100), price REAL NOT NULL)
Mar 05, 2025 12:38:10 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS Lesson(lesson_id INTEGER PRIMARY KEY AUTOINCREMENT, course_id INTEGER NOT NULL, lesson_title TEXT NOT NULL, lesson_content TEXT, FOREIGN KEY (course_id) REFERENCES Course(course_id) ON DELETE CASCADE)
Mar 05, 2025 12:38:10 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS Enrollment(enrollment_id INTEGER PRIMARY KEY AUTOINCREMENT, enrollment_dateTime TEXT NOT NULL, student_id INTEGER NOT NULL, course_id INTEGER NOT NULL, rating INTEGER CHECK (rating BETWEEN 1 AND 5), FOREIGN KEY (student_id) REFERENCES Student(student_id) ON DELETE CASCADE, FOREIGN KEY (course_id) REFERENCES Course(course_id) ON DELETE CASCADE, UNIQUE(student_id, course_id))
Mar 05, 2025 12:38:10 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS CompletedLessons(enrollment_id INTEGER NOT NULL, lesson_id INTEGER NOT NULL, PRIMARY KEY (enrollment_id, lesson_id), FOREIGN KEY (enrollment_id) REFERENCES Enrollment(enrollment_id) ON DELETE CASCADE, FOREIGN KEY (lesson_id) REFERENCES Lesson(lesson_id) ON DELETE CASCADE)
Mar 05, 2025 12:38:10 AM com.lms.db.TableCreator createTables
FINE: tables created successfully!
Mar 05, 2025 12:38:10 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] pragma busy_timeout=3000
Mar 05, 2025 12:38:10 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] pragma busy_timeout=3000
Mar 05, 2025 12:38:10 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] pragma busy_timeout=3000
Mar 05, 2025 12:38:10 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] begin;
Mar 05, 2025 12:38:10 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] INSERT INTO User(first_name, last_name, user_email) VALUES(?, ?, ?)
Mar 05, 2025 12:38:10 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] rollback;
Mar 05, 2025 12:38:10 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] begin;
Mar 05, 2025 12:38:10 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] commit;
Mar 05, 2025 12:38:10 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] begin;
Mar 05, 2025 12:38:10 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] commit;
Mar 05, 2025 12:38:10 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] SELECT * FROM User WHERE user_email = ?
Mar 05, 2025 12:42:32 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] pragma busy_timeout=3000
Mar 05, 2025 12:42:32 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS User(user_id INTEGER PRIMARY KEY AUTOINCREMENT, first_name VARCHAR(100) NOT NULL, last_name VARCHAR(100) NOT NULL, user_email VARCHAR(200) UNIQUE NOT NULL)
Mar 05, 2025 12:42:32 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] begin;
Mar 05, 2025 12:42:32 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] commit;
Mar 05, 2025 12:42:32 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS Student(student_id INTEGER PRIMARY KEY AUTOINCREMENT, user_id INTEGER NOT NULL, study_subject TEXT NOT NULL, FOREIGN KEY (user_id) REFERENCES User(user_id) ON DELETE CASCADE)
Mar 05, 2025 12:42:32 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS Course(course_id INTEGER PRIMARY KEY AUTOINCREMENT, serial_number TEXT UNIQUE NOT NULL, course_title VARCHAR(100) NOT NULL, course_description TEXT, category VARCHAR(100), difficulty_level VARCHAR(100), price REAL NOT NULL)
Mar 05, 2025 12:42:32 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS Lesson(lesson_id INTEGER PRIMARY KEY AUTOINCREMENT, course_id INTEGER NOT NULL, lesson_title TEXT NOT NULL, lesson_content TEXT, FOREIGN KEY (course_id) REFERENCES Course(course_id) ON DELETE CASCADE)
Mar 05, 2025 12:42:32 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS Enrollment(enrollment_id INTEGER PRIMARY KEY AUTOINCREMENT, enrollment_dateTime TEXT NOT NULL, student_id INTEGER NOT NULL, course_id INTEGER NOT NULL, rating INTEGER CHECK (rating BETWEEN 1 AND 5), FOREIGN KEY (student_id) REFERENCES Student(student_id) ON DELETE CASCADE, FOREIGN KEY (course_id) REFERENCES Course(course_id) ON DELETE CASCADE, UNIQUE(student_id, course_id))
Mar 05, 2025 12:42:32 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS CompletedLessons(enrollment_id INTEGER NOT NULL, lesson_id INTEGER NOT NULL, PRIMARY KEY (enrollment_id, lesson_id), FOREIGN KEY (enrollment_id) REFERENCES Enrollment(enrollment_id) ON DELETE CASCADE, FOREIGN KEY (lesson_id) REFERENCES Lesson(lesson_id) ON DELETE CASCADE)
Mar 05, 2025 12:42:32 AM com.lms.db.TableCreator createTables
FINE: tables created successfully!
Mar 05, 2025 12:42:32 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] pragma busy_timeout=3000
Mar 05, 2025 12:42:32 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] pragma busy_timeout=3000
Mar 05, 2025 12:42:32 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] pragma busy_timeout=3000
Mar 05, 2025 12:42:32 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] SELECT * FROM User WHERE user_email = ?
Mar 05, 2025 12:42:32 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] begin;
Mar 05, 2025 12:42:32 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] commit;
Mar 05, 2025 12:44:37 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] pragma busy_timeout=3000
Mar 05, 2025 12:44:37 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS User(user_id INTEGER PRIMARY KEY AUTOINCREMENT, first_name VARCHAR(100) NOT NULL, last_name VARCHAR(100) NOT NULL, user_email VARCHAR(200) UNIQUE NOT NULL)
Mar 05, 2025 12:44:37 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] begin;
Mar 05, 2025 12:44:37 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] commit;
Mar 05, 2025 12:44:37 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS Student(student_id INTEGER PRIMARY KEY AUTOINCREMENT, user_id INTEGER NOT NULL, study_subject TEXT NOT NULL, FOREIGN KEY (user_id) REFERENCES User(user_id) ON DELETE CASCADE)
Mar 05, 2025 12:44:37 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS Course(course_id INTEGER PRIMARY KEY AUTOINCREMENT, serial_number TEXT UNIQUE NOT NULL, course_title VARCHAR(100) NOT NULL, course_description TEXT, category VARCHAR(100), difficulty_level VARCHAR(100), price REAL NOT NULL)
Mar 05, 2025 12:44:37 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS Lesson(lesson_id INTEGER PRIMARY KEY AUTOINCREMENT, course_id INTEGER NOT NULL, lesson_title TEXT NOT NULL, lesson_content TEXT, FOREIGN KEY (course_id) REFERENCES Course(course_id) ON DELETE CASCADE)
Mar 05, 2025 12:44:37 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS Enrollment(enrollment_id INTEGER PRIMARY KEY AUTOINCREMENT, enrollment_dateTime TEXT NOT NULL, student_id INTEGER NOT NULL, course_id INTEGER NOT NULL, rating INTEGER CHECK (rating BETWEEN 1 AND 5), FOREIGN KEY (student_id) REFERENCES Student(student_id) ON DELETE CASCADE, FOREIGN KEY (course_id) REFERENCES Course(course_id) ON DELETE CASCADE, UNIQUE(student_id, course_id))
Mar 05, 2025 12:44:37 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS CompletedLessons(enrollment_id INTEGER NOT NULL, lesson_id INTEGER NOT NULL, PRIMARY KEY (enrollment_id, lesson_id), FOREIGN KEY (enrollment_id) REFERENCES Enrollment(enrollment_id) ON DELETE CASCADE, FOREIGN KEY (lesson_id) REFERENCES Lesson(lesson_id) ON DELETE CASCADE)
Mar 05, 2025 12:44:37 AM com.lms.db.TableCreator createTables
FINE: tables created successfully!
Mar 05, 2025 12:44:37 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] pragma busy_timeout=3000
Mar 05, 2025 12:44:37 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] pragma busy_timeout=3000
Mar 05, 2025 12:44:37 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] pragma busy_timeout=3000
Mar 05, 2025 12:44:37 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] SELECT * FROM User WHERE user_email = ?
Mar 05, 2025 12:44:37 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] UPDATE Student SET study_subject = ? WHERE user_id = ?
Mar 05, 2025 12:44:37 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] begin;
Mar 05, 2025 12:44:37 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] commit;
Mar 05, 2025 12:44:37 AM com.lms.managers.UserManager updateStudent
WARNING: no rows affected.
Mar 05, 2025 12:47:28 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] pragma busy_timeout=3000
Mar 05, 2025 12:47:28 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS User(user_id INTEGER PRIMARY KEY AUTOINCREMENT, first_name VARCHAR(100) NOT NULL, last_name VARCHAR(100) NOT NULL, user_email VARCHAR(200) UNIQUE NOT NULL)
Mar 05, 2025 12:47:28 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] begin;
Mar 05, 2025 12:47:28 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] commit;
Mar 05, 2025 12:47:28 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS Student(student_id INTEGER PRIMARY KEY AUTOINCREMENT, user_id INTEGER NOT NULL, study_subject TEXT NOT NULL, FOREIGN KEY (user_id) REFERENCES User(user_id) ON DELETE CASCADE)
Mar 05, 2025 12:47:28 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS Course(course_id INTEGER PRIMARY KEY AUTOINCREMENT, serial_number TEXT UNIQUE NOT NULL, course_title VARCHAR(100) NOT NULL, course_description TEXT, category VARCHAR(100), difficulty_level VARCHAR(100), price REAL NOT NULL)
Mar 05, 2025 12:47:28 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS Lesson(lesson_id INTEGER PRIMARY KEY AUTOINCREMENT, course_id INTEGER NOT NULL, lesson_title TEXT NOT NULL, lesson_content TEXT, FOREIGN KEY (course_id) REFERENCES Course(course_id) ON DELETE CASCADE)
Mar 05, 2025 12:47:28 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS Enrollment(enrollment_id INTEGER PRIMARY KEY AUTOINCREMENT, enrollment_dateTime TEXT NOT NULL, student_id INTEGER NOT NULL, course_id INTEGER NOT NULL, rating INTEGER CHECK (rating BETWEEN 1 AND 5), FOREIGN KEY (student_id) REFERENCES Student(student_id) ON DELETE CASCADE, FOREIGN KEY (course_id) REFERENCES Course(course_id) ON DELETE CASCADE, UNIQUE(student_id, course_id))
Mar 05, 2025 12:47:28 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS CompletedLessons(enrollment_id INTEGER NOT NULL, lesson_id INTEGER NOT NULL, PRIMARY KEY (enrollment_id, lesson_id), FOREIGN KEY (enrollment_id) REFERENCES Enrollment(enrollment_id) ON DELETE CASCADE, FOREIGN KEY (lesson_id) REFERENCES Lesson(lesson_id) ON DELETE CASCADE)
Mar 05, 2025 12:47:28 AM com.lms.db.TableCreator createTables
FINE: tables created successfully!
Mar 05, 2025 12:47:28 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] pragma busy_timeout=3000
Mar 05, 2025 12:47:28 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] pragma busy_timeout=3000
Mar 05, 2025 12:47:28 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] pragma busy_timeout=3000
Mar 05, 2025 12:47:28 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] SELECT User.user_id, User.first_name, User.last_name, User.user_email, Student.student_id, Student.study_subject From Student JOIN User ON Student.user_id = User.user_id
Mar 05, 2025 12:47:45 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] SELECT * FROM User WHERE user_email = ?
Mar 05, 2025 12:47:45 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] DELETE FROM Student WHERE user_id = ? 
Mar 05, 2025 12:47:45 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] begin;
Mar 05, 2025 12:47:45 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] commit;
Mar 05, 2025 12:47:45 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] SELECT * FROM User WHERE user_email = ?
Mar 05, 2025 12:47:45 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] UPDATE Student SET study_subject = ? WHERE user_id = ?
Mar 05, 2025 12:47:45 AM com.lms.managers.UserManager updateStudent
WARNING: no rows affected.
Mar 05, 2025 12:49:03 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] pragma busy_timeout=3000
Mar 05, 2025 12:49:03 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS User(user_id INTEGER PRIMARY KEY AUTOINCREMENT, first_name VARCHAR(100) NOT NULL, last_name VARCHAR(100) NOT NULL, user_email VARCHAR(200) UNIQUE NOT NULL)
Mar 05, 2025 12:49:03 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] begin;
Mar 05, 2025 12:49:03 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] commit;
Mar 05, 2025 12:49:03 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS Student(student_id INTEGER PRIMARY KEY AUTOINCREMENT, user_id INTEGER NOT NULL, study_subject TEXT NOT NULL, FOREIGN KEY (user_id) REFERENCES User(user_id) ON DELETE CASCADE)
Mar 05, 2025 12:49:03 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS Course(course_id INTEGER PRIMARY KEY AUTOINCREMENT, serial_number TEXT UNIQUE NOT NULL, course_title VARCHAR(100) NOT NULL, course_description TEXT, category VARCHAR(100), difficulty_level VARCHAR(100), price REAL NOT NULL)
Mar 05, 2025 12:49:03 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS Lesson(lesson_id INTEGER PRIMARY KEY AUTOINCREMENT, course_id INTEGER NOT NULL, lesson_title TEXT NOT NULL, lesson_content TEXT, FOREIGN KEY (course_id) REFERENCES Course(course_id) ON DELETE CASCADE)
Mar 05, 2025 12:49:03 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS Enrollment(enrollment_id INTEGER PRIMARY KEY AUTOINCREMENT, enrollment_dateTime TEXT NOT NULL, student_id INTEGER NOT NULL, course_id INTEGER NOT NULL, rating INTEGER CHECK (rating BETWEEN 1 AND 5), FOREIGN KEY (student_id) REFERENCES Student(student_id) ON DELETE CASCADE, FOREIGN KEY (course_id) REFERENCES Course(course_id) ON DELETE CASCADE, UNIQUE(student_id, course_id))
Mar 05, 2025 12:49:03 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS CompletedLessons(enrollment_id INTEGER NOT NULL, lesson_id INTEGER NOT NULL, PRIMARY KEY (enrollment_id, lesson_id), FOREIGN KEY (enrollment_id) REFERENCES Enrollment(enrollment_id) ON DELETE CASCADE, FOREIGN KEY (lesson_id) REFERENCES Lesson(lesson_id) ON DELETE CASCADE)
Mar 05, 2025 12:49:03 AM com.lms.db.TableCreator createTables
FINE: tables created successfully!
Mar 05, 2025 12:49:03 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] pragma busy_timeout=3000
Mar 05, 2025 12:49:03 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] pragma busy_timeout=3000
Mar 05, 2025 12:49:03 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] pragma busy_timeout=3000
Mar 05, 2025 12:49:03 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] SELECT User.user_id, User.first_name, User.last_name, User.user_email, Student.student_id, Student.study_subject From Student JOIN User ON Student.user_id = User.user_id
Mar 05, 2025 12:49:12 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] SELECT * FROM User WHERE user_email = ?
Mar 05, 2025 12:49:12 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] DELETE FROM Student WHERE user_id = ? 
Mar 05, 2025 12:49:12 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] begin;
Mar 05, 2025 12:49:12 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] commit;
Mar 05, 2025 12:49:33 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] SELECT * FROM User WHERE user_email = ?
Mar 05, 2025 12:51:03 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] UPDATE Student SET study_subject = ? WHERE user_id = ?
Mar 05, 2025 12:52:51 AM com.lms.managers.UserManager updateStudent
WARNING: no rows affected.
Mar 05, 2025 12:53:37 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] SELECT * FROM User WHERE user_email = ?
Mar 05, 2025 12:53:45 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] UPDATE Student SET study_subject = ? WHERE user_id = ?
Mar 05, 2025 12:53:52 AM com.lms.managers.UserManager updateStudent
WARNING: no rows affected.
Mar 05, 2025 12:55:43 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] pragma busy_timeout=3000
Mar 05, 2025 12:55:43 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS User(user_id INTEGER PRIMARY KEY AUTOINCREMENT, first_name VARCHAR(100) NOT NULL, last_name VARCHAR(100) NOT NULL, user_email VARCHAR(200) UNIQUE NOT NULL)
Mar 05, 2025 12:55:43 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] begin;
Mar 05, 2025 12:55:43 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] commit;
Mar 05, 2025 12:55:43 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS Student(student_id INTEGER PRIMARY KEY AUTOINCREMENT, user_id INTEGER NOT NULL, study_subject TEXT NOT NULL, FOREIGN KEY (user_id) REFERENCES User(user_id) ON DELETE CASCADE)
Mar 05, 2025 12:55:43 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS Course(course_id INTEGER PRIMARY KEY AUTOINCREMENT, serial_number TEXT UNIQUE NOT NULL, course_title VARCHAR(100) NOT NULL, course_description TEXT, category VARCHAR(100), difficulty_level VARCHAR(100), price REAL NOT NULL)
Mar 05, 2025 12:55:43 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS Lesson(lesson_id INTEGER PRIMARY KEY AUTOINCREMENT, course_id INTEGER NOT NULL, lesson_title TEXT NOT NULL, lesson_content TEXT, FOREIGN KEY (course_id) REFERENCES Course(course_id) ON DELETE CASCADE)
Mar 05, 2025 12:55:43 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS Enrollment(enrollment_id INTEGER PRIMARY KEY AUTOINCREMENT, enrollment_dateTime TEXT NOT NULL, student_id INTEGER NOT NULL, course_id INTEGER NOT NULL, rating INTEGER CHECK (rating BETWEEN 1 AND 5), FOREIGN KEY (student_id) REFERENCES Student(student_id) ON DELETE CASCADE, FOREIGN KEY (course_id) REFERENCES Course(course_id) ON DELETE CASCADE, UNIQUE(student_id, course_id))
Mar 05, 2025 12:55:43 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS CompletedLessons(enrollment_id INTEGER NOT NULL, lesson_id INTEGER NOT NULL, PRIMARY KEY (enrollment_id, lesson_id), FOREIGN KEY (enrollment_id) REFERENCES Enrollment(enrollment_id) ON DELETE CASCADE, FOREIGN KEY (lesson_id) REFERENCES Lesson(lesson_id) ON DELETE CASCADE)
Mar 05, 2025 12:55:43 AM com.lms.db.TableCreator createTables
FINE: tables created successfully!
Mar 05, 2025 12:55:43 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] pragma busy_timeout=3000
Mar 05, 2025 12:55:43 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] pragma busy_timeout=3000
Mar 05, 2025 12:55:43 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] pragma busy_timeout=3000
Mar 05, 2025 12:55:43 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] SELECT User.user_id, User.first_name, User.last_name, User.user_email, Student.student_id, Student.study_subject From Student JOIN User ON Student.user_id = User.user_id
Mar 05, 2025 12:55:57 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] SELECT * FROM User WHERE user_email = ?
Mar 05, 2025 12:55:57 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] DELETE FROM Student WHERE user_id = ? 
Mar 05, 2025 12:55:57 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] begin;
Mar 05, 2025 12:55:57 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] commit;
Mar 05, 2025 12:56:15 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] SELECT * FROM User WHERE user_email = ?
Mar 05, 2025 12:57:39 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] UPDATE User SET first_name = ? WHERE user_email = ?
Mar 05, 2025 12:58:57 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] UPDATE Student SET study_subject = ? WHERE user_id = ?
Mar 05, 2025 1:00:58 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] pragma busy_timeout=3000
Mar 05, 2025 1:00:58 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS User(user_id INTEGER PRIMARY KEY AUTOINCREMENT, first_name VARCHAR(100) NOT NULL, last_name VARCHAR(100) NOT NULL, user_email VARCHAR(200) UNIQUE NOT NULL)
Mar 05, 2025 1:00:58 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] begin;
Mar 05, 2025 1:00:58 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] commit;
Mar 05, 2025 1:00:58 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS Student(student_id INTEGER PRIMARY KEY AUTOINCREMENT, user_id INTEGER NOT NULL, study_subject TEXT NOT NULL, FOREIGN KEY (user_id) REFERENCES User(user_id) ON DELETE CASCADE)
Mar 05, 2025 1:00:58 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS Course(course_id INTEGER PRIMARY KEY AUTOINCREMENT, serial_number TEXT UNIQUE NOT NULL, course_title VARCHAR(100) NOT NULL, course_description TEXT, category VARCHAR(100), difficulty_level VARCHAR(100), price REAL NOT NULL)
Mar 05, 2025 1:00:58 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS Lesson(lesson_id INTEGER PRIMARY KEY AUTOINCREMENT, course_id INTEGER NOT NULL, lesson_title TEXT NOT NULL, lesson_content TEXT, FOREIGN KEY (course_id) REFERENCES Course(course_id) ON DELETE CASCADE)
Mar 05, 2025 1:00:58 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS Enrollment(enrollment_id INTEGER PRIMARY KEY AUTOINCREMENT, enrollment_dateTime TEXT NOT NULL, student_id INTEGER NOT NULL, course_id INTEGER NOT NULL, rating INTEGER CHECK (rating BETWEEN 1 AND 5), FOREIGN KEY (student_id) REFERENCES Student(student_id) ON DELETE CASCADE, FOREIGN KEY (course_id) REFERENCES Course(course_id) ON DELETE CASCADE, UNIQUE(student_id, course_id))
Mar 05, 2025 1:00:58 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS CompletedLessons(enrollment_id INTEGER NOT NULL, lesson_id INTEGER NOT NULL, PRIMARY KEY (enrollment_id, lesson_id), FOREIGN KEY (enrollment_id) REFERENCES Enrollment(enrollment_id) ON DELETE CASCADE, FOREIGN KEY (lesson_id) REFERENCES Lesson(lesson_id) ON DELETE CASCADE)
Mar 05, 2025 1:00:58 AM com.lms.db.TableCreator createTables
FINE: tables created successfully!
Mar 05, 2025 1:00:58 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] pragma busy_timeout=3000
Mar 05, 2025 1:00:58 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] pragma busy_timeout=3000
Mar 05, 2025 1:00:58 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] pragma busy_timeout=3000
Mar 05, 2025 1:00:58 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] SELECT User.user_id, User.first_name, User.last_name, User.user_email, Student.student_id, Student.study_subject From Student JOIN User ON Student.user_id = User.user_id
Mar 05, 2025 1:01:43 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] pragma busy_timeout=3000
Mar 05, 2025 1:01:43 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS User(user_id INTEGER PRIMARY KEY AUTOINCREMENT, first_name VARCHAR(100) NOT NULL, last_name VARCHAR(100) NOT NULL, user_email VARCHAR(200) UNIQUE NOT NULL)
Mar 05, 2025 1:01:43 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] begin;
Mar 05, 2025 1:01:43 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] commit;
Mar 05, 2025 1:01:43 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS Student(student_id INTEGER PRIMARY KEY AUTOINCREMENT, user_id INTEGER NOT NULL, study_subject TEXT NOT NULL, FOREIGN KEY (user_id) REFERENCES User(user_id) ON DELETE CASCADE)
Mar 05, 2025 1:01:43 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS Course(course_id INTEGER PRIMARY KEY AUTOINCREMENT, serial_number TEXT UNIQUE NOT NULL, course_title VARCHAR(100) NOT NULL, course_description TEXT, category VARCHAR(100), difficulty_level VARCHAR(100), price REAL NOT NULL)
Mar 05, 2025 1:01:43 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS Lesson(lesson_id INTEGER PRIMARY KEY AUTOINCREMENT, course_id INTEGER NOT NULL, lesson_title TEXT NOT NULL, lesson_content TEXT, FOREIGN KEY (course_id) REFERENCES Course(course_id) ON DELETE CASCADE)
Mar 05, 2025 1:01:43 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS Enrollment(enrollment_id INTEGER PRIMARY KEY AUTOINCREMENT, enrollment_dateTime TEXT NOT NULL, student_id INTEGER NOT NULL, course_id INTEGER NOT NULL, rating INTEGER CHECK (rating BETWEEN 1 AND 5), FOREIGN KEY (student_id) REFERENCES Student(student_id) ON DELETE CASCADE, FOREIGN KEY (course_id) REFERENCES Course(course_id) ON DELETE CASCADE, UNIQUE(student_id, course_id))
Mar 05, 2025 1:01:43 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS CompletedLessons(enrollment_id INTEGER NOT NULL, lesson_id INTEGER NOT NULL, PRIMARY KEY (enrollment_id, lesson_id), FOREIGN KEY (enrollment_id) REFERENCES Enrollment(enrollment_id) ON DELETE CASCADE, FOREIGN KEY (lesson_id) REFERENCES Lesson(lesson_id) ON DELETE CASCADE)
Mar 05, 2025 1:01:43 AM com.lms.db.TableCreator createTables
FINE: tables created successfully!
Mar 05, 2025 1:01:43 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] pragma busy_timeout=3000
Mar 05, 2025 1:01:43 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] pragma busy_timeout=3000
Mar 05, 2025 1:01:43 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] pragma busy_timeout=3000
Mar 05, 2025 1:01:43 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] SELECT User.user_id, User.first_name, User.last_name, User.user_email, Student.student_id, Student.study_subject From Student JOIN User ON Student.user_id = User.user_id
Mar 05, 2025 1:01:55 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] pragma busy_timeout=3000
Mar 05, 2025 1:01:55 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS User(user_id INTEGER PRIMARY KEY AUTOINCREMENT, first_name VARCHAR(100) NOT NULL, last_name VARCHAR(100) NOT NULL, user_email VARCHAR(200) UNIQUE NOT NULL)
Mar 05, 2025 1:01:55 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] begin;
Mar 05, 2025 1:01:55 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] commit;
Mar 05, 2025 1:01:55 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS Student(student_id INTEGER PRIMARY KEY AUTOINCREMENT, user_id INTEGER NOT NULL, study_subject TEXT NOT NULL, FOREIGN KEY (user_id) REFERENCES User(user_id) ON DELETE CASCADE)
Mar 05, 2025 1:01:55 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS Course(course_id INTEGER PRIMARY KEY AUTOINCREMENT, serial_number TEXT UNIQUE NOT NULL, course_title VARCHAR(100) NOT NULL, course_description TEXT, category VARCHAR(100), difficulty_level VARCHAR(100), price REAL NOT NULL)
Mar 05, 2025 1:01:55 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS Lesson(lesson_id INTEGER PRIMARY KEY AUTOINCREMENT, course_id INTEGER NOT NULL, lesson_title TEXT NOT NULL, lesson_content TEXT, FOREIGN KEY (course_id) REFERENCES Course(course_id) ON DELETE CASCADE)
Mar 05, 2025 1:01:55 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS Enrollment(enrollment_id INTEGER PRIMARY KEY AUTOINCREMENT, enrollment_dateTime TEXT NOT NULL, student_id INTEGER NOT NULL, course_id INTEGER NOT NULL, rating INTEGER CHECK (rating BETWEEN 1 AND 5), FOREIGN KEY (student_id) REFERENCES Student(student_id) ON DELETE CASCADE, FOREIGN KEY (course_id) REFERENCES Course(course_id) ON DELETE CASCADE, UNIQUE(student_id, course_id))
Mar 05, 2025 1:01:55 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS CompletedLessons(enrollment_id INTEGER NOT NULL, lesson_id INTEGER NOT NULL, PRIMARY KEY (enrollment_id, lesson_id), FOREIGN KEY (enrollment_id) REFERENCES Enrollment(enrollment_id) ON DELETE CASCADE, FOREIGN KEY (lesson_id) REFERENCES Lesson(lesson_id) ON DELETE CASCADE)
Mar 05, 2025 1:01:55 AM com.lms.db.TableCreator createTables
FINE: tables created successfully!
Mar 05, 2025 1:01:55 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] pragma busy_timeout=3000
Mar 05, 2025 1:01:55 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] pragma busy_timeout=3000
Mar 05, 2025 1:01:55 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] pragma busy_timeout=3000
Mar 05, 2025 1:01:55 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] SELECT * FROM User WHERE user_email = ?
Mar 05, 2025 1:01:55 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] UPDATE User SET first_name = ? WHERE user_email = ?
Mar 05, 2025 1:01:55 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] begin;
Mar 05, 2025 1:01:55 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] commit;
Mar 05, 2025 1:01:55 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] UPDATE Student SET study_subject = ? WHERE user_id = ?
Mar 05, 2025 1:01:55 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] SELECT User.user_id, User.first_name, User.last_name, User.user_email, Student.student_id, Student.study_subject From Student JOIN User ON Student.user_id = User.user_id
Mar 05, 2025 1:03:49 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] pragma busy_timeout=3000
Mar 05, 2025 1:03:49 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS User(user_id INTEGER PRIMARY KEY AUTOINCREMENT, first_name VARCHAR(100) NOT NULL, last_name VARCHAR(100) NOT NULL, user_email VARCHAR(200) UNIQUE NOT NULL)
Mar 05, 2025 1:03:49 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] begin;
Mar 05, 2025 1:03:49 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] commit;
Mar 05, 2025 1:03:49 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS Student(student_id INTEGER PRIMARY KEY AUTOINCREMENT, user_id INTEGER NOT NULL, study_subject TEXT NOT NULL, FOREIGN KEY (user_id) REFERENCES User(user_id) ON DELETE CASCADE)
Mar 05, 2025 1:03:49 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS Course(course_id INTEGER PRIMARY KEY AUTOINCREMENT, serial_number TEXT UNIQUE NOT NULL, course_title VARCHAR(100) NOT NULL, course_description TEXT, category VARCHAR(100), difficulty_level VARCHAR(100), price REAL NOT NULL)
Mar 05, 2025 1:03:49 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS Lesson(lesson_id INTEGER PRIMARY KEY AUTOINCREMENT, course_id INTEGER NOT NULL, lesson_title TEXT NOT NULL, lesson_content TEXT, FOREIGN KEY (course_id) REFERENCES Course(course_id) ON DELETE CASCADE)
Mar 05, 2025 1:03:49 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS Enrollment(enrollment_id INTEGER PRIMARY KEY AUTOINCREMENT, enrollment_dateTime TEXT NOT NULL, student_id INTEGER NOT NULL, course_id INTEGER NOT NULL, rating INTEGER CHECK (rating BETWEEN 1 AND 5), FOREIGN KEY (student_id) REFERENCES Student(student_id) ON DELETE CASCADE, FOREIGN KEY (course_id) REFERENCES Course(course_id) ON DELETE CASCADE, UNIQUE(student_id, course_id))
Mar 05, 2025 1:03:49 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS CompletedLessons(enrollment_id INTEGER NOT NULL, lesson_id INTEGER NOT NULL, PRIMARY KEY (enrollment_id, lesson_id), FOREIGN KEY (enrollment_id) REFERENCES Enrollment(enrollment_id) ON DELETE CASCADE, FOREIGN KEY (lesson_id) REFERENCES Lesson(lesson_id) ON DELETE CASCADE)
Mar 05, 2025 1:03:49 AM com.lms.db.TableCreator createTables
FINE: tables created successfully!
Mar 05, 2025 1:03:49 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] pragma busy_timeout=3000
Mar 05, 2025 1:03:49 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] pragma busy_timeout=3000
Mar 05, 2025 1:03:49 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] pragma busy_timeout=3000
Mar 05, 2025 1:03:49 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] SELECT * FROM User WHERE user_email = ?
Mar 05, 2025 1:03:49 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] UPDATE User SET first_name = ? WHERE user_email = ?
Mar 05, 2025 1:03:49 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] begin;
Mar 05, 2025 1:03:49 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] commit;
Mar 05, 2025 1:03:49 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] UPDATE Student SET study_subject = ? WHERE user_id = ?
Mar 05, 2025 1:03:49 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] SELECT User.user_id, User.first_name, User.last_name, User.user_email, Student.student_id, Student.study_subject From Student JOIN User ON Student.user_id = User.user_id
Mar 05, 2025 1:19:01 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] pragma busy_timeout=3000
Mar 05, 2025 1:19:01 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS User(user_id INTEGER PRIMARY KEY AUTOINCREMENT, first_name VARCHAR(100) NOT NULL, last_name VARCHAR(100) NOT NULL, user_email VARCHAR(200) UNIQUE NOT NULL)
Mar 05, 2025 1:19:01 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] begin;
Mar 05, 2025 1:19:01 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] commit;
Mar 05, 2025 1:19:01 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS Student(student_id INTEGER PRIMARY KEY AUTOINCREMENT, user_id INTEGER NOT NULL, study_subject TEXT NOT NULL, FOREIGN KEY (user_id) REFERENCES User(user_id) ON DELETE CASCADE)
Mar 05, 2025 1:19:01 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS Course(course_id INTEGER PRIMARY KEY AUTOINCREMENT, serial_number TEXT UNIQUE NOT NULL, course_title VARCHAR(100) NOT NULL, course_description TEXT, category VARCHAR(100), difficulty_level VARCHAR(100), price REAL NOT NULL)
Mar 05, 2025 1:19:01 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS Lesson(lesson_id INTEGER PRIMARY KEY AUTOINCREMENT, course_id INTEGER NOT NULL, lesson_title TEXT NOT NULL, lesson_content TEXT, FOREIGN KEY (course_id) REFERENCES Course(course_id) ON DELETE CASCADE)
Mar 05, 2025 1:19:01 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS Enrollment(enrollment_id INTEGER PRIMARY KEY AUTOINCREMENT, enrollment_dateTime TEXT NOT NULL, student_id INTEGER NOT NULL, course_id INTEGER NOT NULL, rating INTEGER CHECK (rating BETWEEN 1 AND 5), FOREIGN KEY (student_id) REFERENCES Student(student_id) ON DELETE CASCADE, FOREIGN KEY (course_id) REFERENCES Course(course_id) ON DELETE CASCADE, UNIQUE(student_id, course_id))
Mar 05, 2025 1:19:01 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS CompletedLessons(enrollment_id INTEGER NOT NULL, lesson_id INTEGER NOT NULL, PRIMARY KEY (enrollment_id, lesson_id), FOREIGN KEY (enrollment_id) REFERENCES Enrollment(enrollment_id) ON DELETE CASCADE, FOREIGN KEY (lesson_id) REFERENCES Lesson(lesson_id) ON DELETE CASCADE)
Mar 05, 2025 1:19:01 AM com.lms.db.TableCreator createTables
FINE: tables created successfully!
Mar 05, 2025 1:19:01 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] pragma busy_timeout=3000
Mar 05, 2025 1:19:01 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] pragma busy_timeout=3000
Mar 05, 2025 1:19:01 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] pragma busy_timeout=3000
Mar 05, 2025 1:19:01 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] SELECT User.user_id, User.first_name, User.last_name, User.user_email, Student.student_id, Student.study_subject From Student JOIN User ON Student.user_id = User.user_id
Mar 05, 2025 1:19:01 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] INSERT INTO Course(serial_number, course_title, course_description, category, difficulty_level, price) VALUES(?, ?, ?, ?, ?, ?)
Mar 05, 2025 1:19:01 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] begin;
Mar 05, 2025 1:19:01 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] commit;
Mar 05, 2025 1:19:01 AM com.lms.managers.CourseManager addCourse
INFO: Course IKH_876_FG added successfully!
Mar 05, 2025 1:20:41 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] pragma busy_timeout=3000
Mar 05, 2025 1:20:41 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS User(user_id INTEGER PRIMARY KEY AUTOINCREMENT, first_name VARCHAR(100) NOT NULL, last_name VARCHAR(100) NOT NULL, user_email VARCHAR(200) UNIQUE NOT NULL)
Mar 05, 2025 1:20:41 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] begin;
Mar 05, 2025 1:20:41 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] commit;
Mar 05, 2025 1:20:41 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS Student(student_id INTEGER PRIMARY KEY AUTOINCREMENT, user_id INTEGER NOT NULL, study_subject TEXT NOT NULL, FOREIGN KEY (user_id) REFERENCES User(user_id) ON DELETE CASCADE)
Mar 05, 2025 1:20:41 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS Course(course_id INTEGER PRIMARY KEY AUTOINCREMENT, serial_number TEXT UNIQUE NOT NULL, course_title VARCHAR(100) NOT NULL, course_description TEXT, category VARCHAR(100), difficulty_level VARCHAR(100), price REAL NOT NULL)
Mar 05, 2025 1:20:41 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS Lesson(lesson_id INTEGER PRIMARY KEY AUTOINCREMENT, course_id INTEGER NOT NULL, lesson_title TEXT NOT NULL, lesson_content TEXT, FOREIGN KEY (course_id) REFERENCES Course(course_id) ON DELETE CASCADE)
Mar 05, 2025 1:20:41 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS Enrollment(enrollment_id INTEGER PRIMARY KEY AUTOINCREMENT, enrollment_dateTime TEXT NOT NULL, student_id INTEGER NOT NULL, course_id INTEGER NOT NULL, rating INTEGER CHECK (rating BETWEEN 1 AND 5), FOREIGN KEY (student_id) REFERENCES Student(student_id) ON DELETE CASCADE, FOREIGN KEY (course_id) REFERENCES Course(course_id) ON DELETE CASCADE, UNIQUE(student_id, course_id))
Mar 05, 2025 1:20:41 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS CompletedLessons(enrollment_id INTEGER NOT NULL, lesson_id INTEGER NOT NULL, PRIMARY KEY (enrollment_id, lesson_id), FOREIGN KEY (enrollment_id) REFERENCES Enrollment(enrollment_id) ON DELETE CASCADE, FOREIGN KEY (lesson_id) REFERENCES Lesson(lesson_id) ON DELETE CASCADE)
Mar 05, 2025 1:20:41 AM com.lms.db.TableCreator createTables
FINE: tables created successfully!
Mar 05, 2025 1:20:41 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] pragma busy_timeout=3000
Mar 05, 2025 1:20:41 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] pragma busy_timeout=3000
Mar 05, 2025 1:20:41 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] pragma busy_timeout=3000
Mar 05, 2025 1:20:41 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] SELECT User.user_id, User.first_name, User.last_name, User.user_email, Student.student_id, Student.study_subject From Student JOIN User ON Student.user_id = User.user_id
Mar 05, 2025 1:20:41 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] INSERT INTO Course(serial_number, course_title, course_description, category, difficulty_level, price) VALUES(?, ?, ?, ?, ?, ?)
Mar 05, 2025 1:20:57 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] pragma busy_timeout=3000
Mar 05, 2025 1:20:57 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS User(user_id INTEGER PRIMARY KEY AUTOINCREMENT, first_name VARCHAR(100) NOT NULL, last_name VARCHAR(100) NOT NULL, user_email VARCHAR(200) UNIQUE NOT NULL)
Mar 05, 2025 1:20:57 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] begin;
Mar 05, 2025 1:20:57 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] commit;
Mar 05, 2025 1:20:57 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS Student(student_id INTEGER PRIMARY KEY AUTOINCREMENT, user_id INTEGER NOT NULL, study_subject TEXT NOT NULL, FOREIGN KEY (user_id) REFERENCES User(user_id) ON DELETE CASCADE)
Mar 05, 2025 1:20:57 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS Course(course_id INTEGER PRIMARY KEY AUTOINCREMENT, serial_number TEXT UNIQUE NOT NULL, course_title VARCHAR(100) NOT NULL, course_description TEXT, category VARCHAR(100), difficulty_level VARCHAR(100), price REAL NOT NULL)
Mar 05, 2025 1:20:57 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS Lesson(lesson_id INTEGER PRIMARY KEY AUTOINCREMENT, course_id INTEGER NOT NULL, lesson_title TEXT NOT NULL, lesson_content TEXT, FOREIGN KEY (course_id) REFERENCES Course(course_id) ON DELETE CASCADE)
Mar 05, 2025 1:20:57 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS Enrollment(enrollment_id INTEGER PRIMARY KEY AUTOINCREMENT, enrollment_dateTime TEXT NOT NULL, student_id INTEGER NOT NULL, course_id INTEGER NOT NULL, rating INTEGER CHECK (rating BETWEEN 1 AND 5), FOREIGN KEY (student_id) REFERENCES Student(student_id) ON DELETE CASCADE, FOREIGN KEY (course_id) REFERENCES Course(course_id) ON DELETE CASCADE, UNIQUE(student_id, course_id))
Mar 05, 2025 1:20:57 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS CompletedLessons(enrollment_id INTEGER NOT NULL, lesson_id INTEGER NOT NULL, PRIMARY KEY (enrollment_id, lesson_id), FOREIGN KEY (enrollment_id) REFERENCES Enrollment(enrollment_id) ON DELETE CASCADE, FOREIGN KEY (lesson_id) REFERENCES Lesson(lesson_id) ON DELETE CASCADE)
Mar 05, 2025 1:20:57 AM com.lms.db.TableCreator createTables
FINE: tables created successfully!
Mar 05, 2025 1:20:57 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] pragma busy_timeout=3000
Mar 05, 2025 1:20:57 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] pragma busy_timeout=3000
Mar 05, 2025 1:20:57 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] pragma busy_timeout=3000
Mar 05, 2025 1:20:57 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] SELECT User.user_id, User.first_name, User.last_name, User.user_email, Student.student_id, Student.study_subject From Student JOIN User ON Student.user_id = User.user_id
Mar 05, 2025 1:20:57 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] INSERT INTO Course(serial_number, course_title, course_description, category, difficulty_level, price) VALUES(?, ?, ?, ?, ?, ?)
Mar 05, 2025 1:20:57 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] begin;
Mar 05, 2025 1:20:57 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] commit;
Mar 05, 2025 1:20:57 AM com.lms.managers.CourseManager addCourse
FINE: Course PH_876_FG added successfully!
Mar 05, 2025 1:21:21 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] pragma busy_timeout=3000
Mar 05, 2025 1:21:21 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS User(user_id INTEGER PRIMARY KEY AUTOINCREMENT, first_name VARCHAR(100) NOT NULL, last_name VARCHAR(100) NOT NULL, user_email VARCHAR(200) UNIQUE NOT NULL)
Mar 05, 2025 1:21:21 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] begin;
Mar 05, 2025 1:21:21 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] commit;
Mar 05, 2025 1:21:21 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS Student(student_id INTEGER PRIMARY KEY AUTOINCREMENT, user_id INTEGER NOT NULL, study_subject TEXT NOT NULL, FOREIGN KEY (user_id) REFERENCES User(user_id) ON DELETE CASCADE)
Mar 05, 2025 1:21:21 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS Course(course_id INTEGER PRIMARY KEY AUTOINCREMENT, serial_number TEXT UNIQUE NOT NULL, course_title VARCHAR(100) NOT NULL, course_description TEXT, category VARCHAR(100), difficulty_level VARCHAR(100), price REAL NOT NULL)
Mar 05, 2025 1:21:21 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS Lesson(lesson_id INTEGER PRIMARY KEY AUTOINCREMENT, course_id INTEGER NOT NULL, lesson_title TEXT NOT NULL, lesson_content TEXT, FOREIGN KEY (course_id) REFERENCES Course(course_id) ON DELETE CASCADE)
Mar 05, 2025 1:21:21 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS Enrollment(enrollment_id INTEGER PRIMARY KEY AUTOINCREMENT, enrollment_dateTime TEXT NOT NULL, student_id INTEGER NOT NULL, course_id INTEGER NOT NULL, rating INTEGER CHECK (rating BETWEEN 1 AND 5), FOREIGN KEY (student_id) REFERENCES Student(student_id) ON DELETE CASCADE, FOREIGN KEY (course_id) REFERENCES Course(course_id) ON DELETE CASCADE, UNIQUE(student_id, course_id))
Mar 05, 2025 1:21:21 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS CompletedLessons(enrollment_id INTEGER NOT NULL, lesson_id INTEGER NOT NULL, PRIMARY KEY (enrollment_id, lesson_id), FOREIGN KEY (enrollment_id) REFERENCES Enrollment(enrollment_id) ON DELETE CASCADE, FOREIGN KEY (lesson_id) REFERENCES Lesson(lesson_id) ON DELETE CASCADE)
Mar 05, 2025 1:21:21 AM com.lms.db.TableCreator createTables
FINE: tables created successfully!
Mar 05, 2025 1:21:21 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] pragma busy_timeout=3000
Mar 05, 2025 1:21:21 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] pragma busy_timeout=3000
Mar 05, 2025 1:21:21 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] pragma busy_timeout=3000
Mar 05, 2025 1:21:21 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] SELECT User.user_id, User.first_name, User.last_name, User.user_email, Student.student_id, Student.study_subject From Student JOIN User ON Student.user_id = User.user_id
Mar 05, 2025 1:21:21 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] INSERT INTO Course(serial_number, course_title, course_description, category, difficulty_level, price) VALUES(?, ?, ?, ?, ?, ?)
Mar 05, 2025 1:21:46 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] pragma busy_timeout=3000
Mar 05, 2025 1:21:46 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS User(user_id INTEGER PRIMARY KEY AUTOINCREMENT, first_name VARCHAR(100) NOT NULL, last_name VARCHAR(100) NOT NULL, user_email VARCHAR(200) UNIQUE NOT NULL)
Mar 05, 2025 1:21:46 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] begin;
Mar 05, 2025 1:21:46 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] commit;
Mar 05, 2025 1:21:46 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS Student(student_id INTEGER PRIMARY KEY AUTOINCREMENT, user_id INTEGER NOT NULL, study_subject TEXT NOT NULL, FOREIGN KEY (user_id) REFERENCES User(user_id) ON DELETE CASCADE)
Mar 05, 2025 1:21:46 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS Course(course_id INTEGER PRIMARY KEY AUTOINCREMENT, serial_number TEXT UNIQUE NOT NULL, course_title VARCHAR(100) NOT NULL, course_description TEXT, category VARCHAR(100), difficulty_level VARCHAR(100), price REAL NOT NULL)
Mar 05, 2025 1:21:46 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS Lesson(lesson_id INTEGER PRIMARY KEY AUTOINCREMENT, course_id INTEGER NOT NULL, lesson_title TEXT NOT NULL, lesson_content TEXT, FOREIGN KEY (course_id) REFERENCES Course(course_id) ON DELETE CASCADE)
Mar 05, 2025 1:21:46 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS Enrollment(enrollment_id INTEGER PRIMARY KEY AUTOINCREMENT, enrollment_dateTime TEXT NOT NULL, student_id INTEGER NOT NULL, course_id INTEGER NOT NULL, rating INTEGER CHECK (rating BETWEEN 1 AND 5), FOREIGN KEY (student_id) REFERENCES Student(student_id) ON DELETE CASCADE, FOREIGN KEY (course_id) REFERENCES Course(course_id) ON DELETE CASCADE, UNIQUE(student_id, course_id))
Mar 05, 2025 1:21:46 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS CompletedLessons(enrollment_id INTEGER NOT NULL, lesson_id INTEGER NOT NULL, PRIMARY KEY (enrollment_id, lesson_id), FOREIGN KEY (enrollment_id) REFERENCES Enrollment(enrollment_id) ON DELETE CASCADE, FOREIGN KEY (lesson_id) REFERENCES Lesson(lesson_id) ON DELETE CASCADE)
Mar 05, 2025 1:21:46 AM com.lms.db.TableCreator createTables
FINE: tables created successfully!
Mar 05, 2025 1:21:46 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] pragma busy_timeout=3000
Mar 05, 2025 1:21:46 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] pragma busy_timeout=3000
Mar 05, 2025 1:21:46 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] pragma busy_timeout=3000
Mar 05, 2025 1:21:46 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] SELECT User.user_id, User.first_name, User.last_name, User.user_email, Student.student_id, Student.study_subject From Student JOIN User ON Student.user_id = User.user_id
Mar 05, 2025 1:21:46 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] INSERT INTO Course(serial_number, course_title, course_description, category, difficulty_level, price) VALUES(?, ?, ?, ?, ?, ?)
Mar 05, 2025 1:21:46 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] begin;
Mar 05, 2025 1:21:46 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] commit;
Mar 05, 2025 1:21:46 AM com.lms.managers.CourseManager addCourse
INFO: Course I_876_FG added successfully!
Mar 05, 2025 10:44:03 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] pragma busy_timeout=3000
Mar 05, 2025 10:44:03 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS User(user_id INTEGER PRIMARY KEY AUTOINCREMENT, first_name VARCHAR(100) NOT NULL, last_name VARCHAR(100) NOT NULL, user_email VARCHAR(200) UNIQUE NOT NULL)
Mar 05, 2025 10:44:03 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] begin;
Mar 05, 2025 10:44:03 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] commit;
Mar 05, 2025 10:44:03 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS Student(student_id INTEGER PRIMARY KEY AUTOINCREMENT, user_id INTEGER NOT NULL, study_subject TEXT NOT NULL, FOREIGN KEY (user_id) REFERENCES User(user_id) ON DELETE CASCADE)
Mar 05, 2025 10:44:03 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS Course(course_id INTEGER PRIMARY KEY AUTOINCREMENT, serial_number TEXT UNIQUE NOT NULL, course_title VARCHAR(100) NOT NULL, course_description TEXT, category VARCHAR(100), difficulty_level VARCHAR(100), price REAL NOT NULL)
Mar 05, 2025 10:44:03 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS Lesson(lesson_id INTEGER PRIMARY KEY AUTOINCREMENT, course_id INTEGER NOT NULL, lesson_title TEXT NOT NULL, lesson_content TEXT, FOREIGN KEY (course_id) REFERENCES Course(course_id) ON DELETE CASCADE)
Mar 05, 2025 10:44:03 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS Enrollment(enrollment_id INTEGER PRIMARY KEY AUTOINCREMENT, enrollment_dateTime TEXT NOT NULL, student_id INTEGER NOT NULL, course_id INTEGER NOT NULL, rating INTEGER CHECK (rating BETWEEN 1 AND 5), FOREIGN KEY (student_id) REFERENCES Student(student_id) ON DELETE CASCADE, FOREIGN KEY (course_id) REFERENCES Course(course_id) ON DELETE CASCADE, UNIQUE(student_id, course_id))
Mar 05, 2025 10:44:03 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS CompletedLessons(enrollment_id INTEGER NOT NULL, lesson_id INTEGER NOT NULL, PRIMARY KEY (enrollment_id, lesson_id), FOREIGN KEY (enrollment_id) REFERENCES Enrollment(enrollment_id) ON DELETE CASCADE, FOREIGN KEY (lesson_id) REFERENCES Lesson(lesson_id) ON DELETE CASCADE)
Mar 05, 2025 10:44:03 AM com.lms.db.TableCreator createTables
FINE: tables created successfully!
Mar 05, 2025 10:44:03 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] pragma busy_timeout=3000
Mar 05, 2025 10:44:03 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] pragma busy_timeout=3000
Mar 05, 2025 10:44:03 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] pragma busy_timeout=3000
Mar 05, 2025 10:44:03 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] SELECT User.user_id, User.first_name, User.last_name, User.user_email, Student.student_id, Student.study_subject From Student JOIN User ON Student.user_id = User.user_id
Mar 05, 2025 10:44:03 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] INSERT INTO Course(serial_number, course_title, course_description, category, difficulty_level, price) VALUES(?, ?, ?, ?, ?, ?)
Mar 05, 2025 10:44:34 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] pragma busy_timeout=3000
Mar 05, 2025 10:44:34 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS User(user_id INTEGER PRIMARY KEY AUTOINCREMENT, first_name VARCHAR(100) NOT NULL, last_name VARCHAR(100) NOT NULL, user_email VARCHAR(200) UNIQUE NOT NULL)
Mar 05, 2025 10:44:34 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] begin;
Mar 05, 2025 10:44:34 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] commit;
Mar 05, 2025 10:44:34 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS Student(student_id INTEGER PRIMARY KEY AUTOINCREMENT, user_id INTEGER NOT NULL, study_subject TEXT NOT NULL, FOREIGN KEY (user_id) REFERENCES User(user_id) ON DELETE CASCADE)
Mar 05, 2025 10:44:34 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS Course(course_id INTEGER PRIMARY KEY AUTOINCREMENT, serial_number TEXT UNIQUE NOT NULL, course_title VARCHAR(100) NOT NULL, course_description TEXT, category VARCHAR(100), difficulty_level VARCHAR(100), price REAL NOT NULL)
Mar 05, 2025 10:44:34 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS Lesson(lesson_id INTEGER PRIMARY KEY AUTOINCREMENT, course_id INTEGER NOT NULL, lesson_title TEXT NOT NULL, lesson_content TEXT, FOREIGN KEY (course_id) REFERENCES Course(course_id) ON DELETE CASCADE)
Mar 05, 2025 10:44:34 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS Enrollment(enrollment_id INTEGER PRIMARY KEY AUTOINCREMENT, enrollment_dateTime TEXT NOT NULL, student_id INTEGER NOT NULL, course_id INTEGER NOT NULL, rating INTEGER CHECK (rating BETWEEN 1 AND 5), FOREIGN KEY (student_id) REFERENCES Student(student_id) ON DELETE CASCADE, FOREIGN KEY (course_id) REFERENCES Course(course_id) ON DELETE CASCADE, UNIQUE(student_id, course_id))
Mar 05, 2025 10:44:34 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS CompletedLessons(enrollment_id INTEGER NOT NULL, lesson_id INTEGER NOT NULL, PRIMARY KEY (enrollment_id, lesson_id), FOREIGN KEY (enrollment_id) REFERENCES Enrollment(enrollment_id) ON DELETE CASCADE, FOREIGN KEY (lesson_id) REFERENCES Lesson(lesson_id) ON DELETE CASCADE)
Mar 05, 2025 10:44:34 AM com.lms.db.TableCreator createTables
FINE: tables created successfully!
Mar 05, 2025 10:44:34 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] pragma busy_timeout=3000
Mar 05, 2025 10:44:34 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] pragma busy_timeout=3000
Mar 05, 2025 10:44:34 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] pragma busy_timeout=3000
Mar 05, 2025 10:44:34 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] SELECT User.user_id, User.first_name, User.last_name, User.user_email, Student.student_id, Student.study_subject From Student JOIN User ON Student.user_id = User.user_id
Mar 05, 2025 10:44:34 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] INSERT INTO Course(serial_number, course_title, course_description, category, difficulty_level, price) VALUES(?, ?, ?, ?, ?, ?)
Mar 05, 2025 10:44:34 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] begin;
Mar 05, 2025 10:44:34 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] commit;
Mar 05, 2025 10:44:34 AM com.lms.managers.CourseManager addCourse
INFO: Course I_8880_FG added successfully!
Mar 05, 2025 10:56:44 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] pragma busy_timeout=3000
Mar 05, 2025 10:56:44 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS User(user_id INTEGER PRIMARY KEY AUTOINCREMENT, first_name VARCHAR(100) NOT NULL, last_name VARCHAR(100) NOT NULL, user_email VARCHAR(200) UNIQUE NOT NULL)
Mar 05, 2025 10:56:44 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] begin;
Mar 05, 2025 10:56:44 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] commit;
Mar 05, 2025 10:56:44 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS Student(student_id INTEGER PRIMARY KEY AUTOINCREMENT, user_id INTEGER NOT NULL, study_subject TEXT NOT NULL, FOREIGN KEY (user_id) REFERENCES User(user_id) ON DELETE CASCADE)
Mar 05, 2025 10:56:44 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS Course(course_id INTEGER PRIMARY KEY AUTOINCREMENT, serial_number TEXT UNIQUE NOT NULL, course_title VARCHAR(100) NOT NULL, course_description TEXT, category VARCHAR(100), difficulty_level VARCHAR(100), price REAL NOT NULL)
Mar 05, 2025 10:56:44 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS Lesson(lesson_id INTEGER PRIMARY KEY AUTOINCREMENT, course_id INTEGER NOT NULL, lesson_title TEXT NOT NULL, lesson_content TEXT, FOREIGN KEY (course_id) REFERENCES Course(course_id) ON DELETE CASCADE)
Mar 05, 2025 10:56:44 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS Enrollment(enrollment_id INTEGER PRIMARY KEY AUTOINCREMENT, enrollment_dateTime TEXT NOT NULL, student_id INTEGER NOT NULL, course_id INTEGER NOT NULL, rating INTEGER CHECK (rating BETWEEN 1 AND 5), FOREIGN KEY (student_id) REFERENCES Student(student_id) ON DELETE CASCADE, FOREIGN KEY (course_id) REFERENCES Course(course_id) ON DELETE CASCADE, UNIQUE(student_id, course_id))
Mar 05, 2025 10:56:44 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS CompletedLessons(enrollment_id INTEGER NOT NULL, lesson_id INTEGER NOT NULL, PRIMARY KEY (enrollment_id, lesson_id), FOREIGN KEY (enrollment_id) REFERENCES Enrollment(enrollment_id) ON DELETE CASCADE, FOREIGN KEY (lesson_id) REFERENCES Lesson(lesson_id) ON DELETE CASCADE)
Mar 05, 2025 10:56:44 AM com.lms.db.TableCreator createTables
FINE: tables created successfully!
Mar 05, 2025 10:56:44 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] pragma busy_timeout=3000
Mar 05, 2025 10:56:44 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] pragma busy_timeout=3000
Mar 05, 2025 10:56:44 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] pragma busy_timeout=3000
Mar 05, 2025 10:56:44 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] INSERT INTO Course(serial_number, course_title, course_description, category, difficulty_level, price) VALUES(?, ?, ?, ?, ?, ?)
Mar 05, 2025 10:56:44 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] begin;
Mar 05, 2025 10:56:44 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] commit;
Mar 05, 2025 10:56:44 AM com.lms.managers.CourseManager addCourse
INFO: Course KI_8880_FG added successfully!
Mar 05, 2025 10:56:44 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] SELECT * FROM Course
Mar 05, 2025 11:05:34 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] pragma busy_timeout=3000
Mar 05, 2025 11:05:34 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS User(user_id INTEGER PRIMARY KEY AUTOINCREMENT, first_name VARCHAR(100) NOT NULL, last_name VARCHAR(100) NOT NULL, user_email VARCHAR(200) UNIQUE NOT NULL)
Mar 05, 2025 11:05:34 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] begin;
Mar 05, 2025 11:05:34 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] commit;
Mar 05, 2025 11:05:34 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS Student(student_id INTEGER PRIMARY KEY AUTOINCREMENT, user_id INTEGER NOT NULL, study_subject TEXT NOT NULL, FOREIGN KEY (user_id) REFERENCES User(user_id) ON DELETE CASCADE)
Mar 05, 2025 11:05:34 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS Course(course_id INTEGER PRIMARY KEY AUTOINCREMENT, serial_number TEXT UNIQUE NOT NULL, course_title VARCHAR(100) NOT NULL, course_description TEXT, category VARCHAR(100), difficulty_level VARCHAR(100), price REAL NOT NULL)
Mar 05, 2025 11:05:34 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS Lesson(lesson_id INTEGER PRIMARY KEY AUTOINCREMENT, course_id INTEGER NOT NULL, lesson_title TEXT NOT NULL, lesson_content TEXT, FOREIGN KEY (course_id) REFERENCES Course(course_id) ON DELETE CASCADE)
Mar 05, 2025 11:05:34 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS Enrollment(enrollment_id INTEGER PRIMARY KEY AUTOINCREMENT, enrollment_dateTime TEXT NOT NULL, student_id INTEGER NOT NULL, course_id INTEGER NOT NULL, rating INTEGER CHECK (rating BETWEEN 1 AND 5), FOREIGN KEY (student_id) REFERENCES Student(student_id) ON DELETE CASCADE, FOREIGN KEY (course_id) REFERENCES Course(course_id) ON DELETE CASCADE, UNIQUE(student_id, course_id))
Mar 05, 2025 11:05:34 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS CompletedLessons(enrollment_id INTEGER NOT NULL, lesson_id INTEGER NOT NULL, PRIMARY KEY (enrollment_id, lesson_id), FOREIGN KEY (enrollment_id) REFERENCES Enrollment(enrollment_id) ON DELETE CASCADE, FOREIGN KEY (lesson_id) REFERENCES Lesson(lesson_id) ON DELETE CASCADE)
Mar 05, 2025 11:05:34 AM com.lms.db.TableCreator createTables
FINE: tables created successfully!
Mar 05, 2025 11:05:34 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] pragma busy_timeout=3000
Mar 05, 2025 11:05:34 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] pragma busy_timeout=3000
Mar 05, 2025 11:05:34 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] pragma busy_timeout=3000
Mar 05, 2025 11:05:34 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] SELECT course_id FROM Course WHERE serial_number = ?
Mar 05, 2025 11:05:34 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] INSERT INTO Lesson(course_id, lesson_title, lesson_content) VALUES(?, ?, ?)
Mar 05, 2025 11:05:34 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] begin;
Mar 05, 2025 11:05:34 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] commit;
Mar 05, 2025 11:05:34 AM com.lms.managers.CourseManager addLessonToCourse
INFO: Lesson Basics on AI added successfully!
Mar 05, 2025 11:06:07 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] pragma busy_timeout=3000
Mar 05, 2025 11:06:08 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS User(user_id INTEGER PRIMARY KEY AUTOINCREMENT, first_name VARCHAR(100) NOT NULL, last_name VARCHAR(100) NOT NULL, user_email VARCHAR(200) UNIQUE NOT NULL)
Mar 05, 2025 11:06:08 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] begin;
Mar 05, 2025 11:06:08 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] commit;
Mar 05, 2025 11:06:08 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS Student(student_id INTEGER PRIMARY KEY AUTOINCREMENT, user_id INTEGER NOT NULL, study_subject TEXT NOT NULL, FOREIGN KEY (user_id) REFERENCES User(user_id) ON DELETE CASCADE)
Mar 05, 2025 11:06:08 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS Course(course_id INTEGER PRIMARY KEY AUTOINCREMENT, serial_number TEXT UNIQUE NOT NULL, course_title VARCHAR(100) NOT NULL, course_description TEXT, category VARCHAR(100), difficulty_level VARCHAR(100), price REAL NOT NULL)
Mar 05, 2025 11:06:08 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS Lesson(lesson_id INTEGER PRIMARY KEY AUTOINCREMENT, course_id INTEGER NOT NULL, lesson_title TEXT NOT NULL, lesson_content TEXT, FOREIGN KEY (course_id) REFERENCES Course(course_id) ON DELETE CASCADE)
Mar 05, 2025 11:06:08 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS Enrollment(enrollment_id INTEGER PRIMARY KEY AUTOINCREMENT, enrollment_dateTime TEXT NOT NULL, student_id INTEGER NOT NULL, course_id INTEGER NOT NULL, rating INTEGER CHECK (rating BETWEEN 1 AND 5), FOREIGN KEY (student_id) REFERENCES Student(student_id) ON DELETE CASCADE, FOREIGN KEY (course_id) REFERENCES Course(course_id) ON DELETE CASCADE, UNIQUE(student_id, course_id))
Mar 05, 2025 11:06:08 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS CompletedLessons(enrollment_id INTEGER NOT NULL, lesson_id INTEGER NOT NULL, PRIMARY KEY (enrollment_id, lesson_id), FOREIGN KEY (enrollment_id) REFERENCES Enrollment(enrollment_id) ON DELETE CASCADE, FOREIGN KEY (lesson_id) REFERENCES Lesson(lesson_id) ON DELETE CASCADE)
Mar 05, 2025 11:06:08 AM com.lms.db.TableCreator createTables
FINE: tables created successfully!
Mar 05, 2025 11:06:08 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] pragma busy_timeout=3000
Mar 05, 2025 11:06:08 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] pragma busy_timeout=3000
Mar 05, 2025 11:06:08 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] pragma busy_timeout=3000
Mar 05, 2025 11:06:08 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] SELECT course_id FROM Course WHERE serial_number = ?
Mar 05, 2025 11:06:08 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] INSERT INTO Lesson(course_id, lesson_title, lesson_content) VALUES(?, ?, ?)
Mar 05, 2025 11:06:08 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] begin;
Mar 05, 2025 11:06:08 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] commit;
Mar 05, 2025 11:06:08 AM com.lms.managers.CourseManager addLessonToCourse
INFO: Lesson Neuralnetworks added successfully!
Mar 05, 2025 11:06:21 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] pragma busy_timeout=3000
Mar 05, 2025 11:06:21 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS User(user_id INTEGER PRIMARY KEY AUTOINCREMENT, first_name VARCHAR(100) NOT NULL, last_name VARCHAR(100) NOT NULL, user_email VARCHAR(200) UNIQUE NOT NULL)
Mar 05, 2025 11:06:21 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] begin;
Mar 05, 2025 11:06:21 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] commit;
Mar 05, 2025 11:06:21 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS Student(student_id INTEGER PRIMARY KEY AUTOINCREMENT, user_id INTEGER NOT NULL, study_subject TEXT NOT NULL, FOREIGN KEY (user_id) REFERENCES User(user_id) ON DELETE CASCADE)
Mar 05, 2025 11:06:21 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS Course(course_id INTEGER PRIMARY KEY AUTOINCREMENT, serial_number TEXT UNIQUE NOT NULL, course_title VARCHAR(100) NOT NULL, course_description TEXT, category VARCHAR(100), difficulty_level VARCHAR(100), price REAL NOT NULL)
Mar 05, 2025 11:06:21 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS Lesson(lesson_id INTEGER PRIMARY KEY AUTOINCREMENT, course_id INTEGER NOT NULL, lesson_title TEXT NOT NULL, lesson_content TEXT, FOREIGN KEY (course_id) REFERENCES Course(course_id) ON DELETE CASCADE)
Mar 05, 2025 11:06:21 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS Enrollment(enrollment_id INTEGER PRIMARY KEY AUTOINCREMENT, enrollment_dateTime TEXT NOT NULL, student_id INTEGER NOT NULL, course_id INTEGER NOT NULL, rating INTEGER CHECK (rating BETWEEN 1 AND 5), FOREIGN KEY (student_id) REFERENCES Student(student_id) ON DELETE CASCADE, FOREIGN KEY (course_id) REFERENCES Course(course_id) ON DELETE CASCADE, UNIQUE(student_id, course_id))
Mar 05, 2025 11:06:21 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS CompletedLessons(enrollment_id INTEGER NOT NULL, lesson_id INTEGER NOT NULL, PRIMARY KEY (enrollment_id, lesson_id), FOREIGN KEY (enrollment_id) REFERENCES Enrollment(enrollment_id) ON DELETE CASCADE, FOREIGN KEY (lesson_id) REFERENCES Lesson(lesson_id) ON DELETE CASCADE)
Mar 05, 2025 11:06:21 AM com.lms.db.TableCreator createTables
FINE: tables created successfully!
Mar 05, 2025 11:06:21 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] pragma busy_timeout=3000
Mar 05, 2025 11:06:21 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] pragma busy_timeout=3000
Mar 05, 2025 11:06:21 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] pragma busy_timeout=3000
Mar 05, 2025 11:06:21 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] SELECT course_id FROM Course WHERE serial_number = ?
Mar 05, 2025 11:06:21 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] INSERT INTO Lesson(course_id, lesson_title, lesson_content) VALUES(?, ?, ?)
Mar 05, 2025 11:06:22 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] begin;
Mar 05, 2025 11:06:22 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] commit;
Mar 05, 2025 11:06:22 AM com.lms.managers.CourseManager addLessonToCourse
INFO: Lesson AI fundamentals added successfully!
Mar 05, 2025 11:07:06 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] pragma busy_timeout=3000
Mar 05, 2025 11:07:06 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS User(user_id INTEGER PRIMARY KEY AUTOINCREMENT, first_name VARCHAR(100) NOT NULL, last_name VARCHAR(100) NOT NULL, user_email VARCHAR(200) UNIQUE NOT NULL)
Mar 05, 2025 11:07:06 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] begin;
Mar 05, 2025 11:07:06 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] commit;
Mar 05, 2025 11:07:06 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS Student(student_id INTEGER PRIMARY KEY AUTOINCREMENT, user_id INTEGER NOT NULL, study_subject TEXT NOT NULL, FOREIGN KEY (user_id) REFERENCES User(user_id) ON DELETE CASCADE)
Mar 05, 2025 11:07:06 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS Course(course_id INTEGER PRIMARY KEY AUTOINCREMENT, serial_number TEXT UNIQUE NOT NULL, course_title VARCHAR(100) NOT NULL, course_description TEXT, category VARCHAR(100), difficulty_level VARCHAR(100), price REAL NOT NULL)
Mar 05, 2025 11:07:06 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS Lesson(lesson_id INTEGER PRIMARY KEY AUTOINCREMENT, course_id INTEGER NOT NULL, lesson_title TEXT NOT NULL, lesson_content TEXT, FOREIGN KEY (course_id) REFERENCES Course(course_id) ON DELETE CASCADE)
Mar 05, 2025 11:07:06 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS Enrollment(enrollment_id INTEGER PRIMARY KEY AUTOINCREMENT, enrollment_dateTime TEXT NOT NULL, student_id INTEGER NOT NULL, course_id INTEGER NOT NULL, rating INTEGER CHECK (rating BETWEEN 1 AND 5), FOREIGN KEY (student_id) REFERENCES Student(student_id) ON DELETE CASCADE, FOREIGN KEY (course_id) REFERENCES Course(course_id) ON DELETE CASCADE, UNIQUE(student_id, course_id))
Mar 05, 2025 11:07:06 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS CompletedLessons(enrollment_id INTEGER NOT NULL, lesson_id INTEGER NOT NULL, PRIMARY KEY (enrollment_id, lesson_id), FOREIGN KEY (enrollment_id) REFERENCES Enrollment(enrollment_id) ON DELETE CASCADE, FOREIGN KEY (lesson_id) REFERENCES Lesson(lesson_id) ON DELETE CASCADE)
Mar 05, 2025 11:07:06 AM com.lms.db.TableCreator createTables
FINE: tables created successfully!
Mar 05, 2025 11:07:06 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] pragma busy_timeout=3000
Mar 05, 2025 11:07:06 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] pragma busy_timeout=3000
Mar 05, 2025 11:07:06 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] pragma busy_timeout=3000
Mar 05, 2025 11:07:06 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] SELECT * FROM Course
Mar 05, 2025 11:07:06 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] SELECT course_id FROM Course WHERE serial_number = ?
Mar 05, 2025 11:07:06 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] INSERT INTO Lesson(course_id, lesson_title, lesson_content) VALUES(?, ?, ?)
Mar 05, 2025 11:07:06 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] begin;
Mar 05, 2025 11:07:06 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] commit;
Mar 05, 2025 11:07:06 AM com.lms.managers.CourseManager addLessonToCourse
INFO: Lesson AI fundamentals added successfully!
Mar 05, 2025 11:13:43 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] pragma busy_timeout=3000
Mar 05, 2025 11:13:43 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS User(user_id INTEGER PRIMARY KEY AUTOINCREMENT, first_name VARCHAR(100) NOT NULL, last_name VARCHAR(100) NOT NULL, user_email VARCHAR(200) UNIQUE NOT NULL)
Mar 05, 2025 11:13:43 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] begin;
Mar 05, 2025 11:13:43 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] commit;
Mar 05, 2025 11:13:43 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS Student(student_id INTEGER PRIMARY KEY AUTOINCREMENT, user_id INTEGER NOT NULL, study_subject TEXT NOT NULL, FOREIGN KEY (user_id) REFERENCES User(user_id) ON DELETE CASCADE)
Mar 05, 2025 11:13:43 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS Course(course_id INTEGER PRIMARY KEY AUTOINCREMENT, serial_number TEXT UNIQUE NOT NULL, course_title VARCHAR(100) NOT NULL, course_description TEXT, category VARCHAR(100), difficulty_level VARCHAR(100), price REAL NOT NULL)
Mar 05, 2025 11:13:43 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS Lesson(lesson_id INTEGER PRIMARY KEY AUTOINCREMENT, course_id INTEGER NOT NULL, lesson_title TEXT NOT NULL, lesson_content TEXT, FOREIGN KEY (course_id) REFERENCES Course(course_id) ON DELETE CASCADE)
Mar 05, 2025 11:13:43 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS Enrollment(enrollment_id INTEGER PRIMARY KEY AUTOINCREMENT, enrollment_dateTime TEXT NOT NULL, student_id INTEGER NOT NULL, course_id INTEGER NOT NULL, rating INTEGER CHECK (rating BETWEEN 1 AND 5), FOREIGN KEY (student_id) REFERENCES Student(student_id) ON DELETE CASCADE, FOREIGN KEY (course_id) REFERENCES Course(course_id) ON DELETE CASCADE, UNIQUE(student_id, course_id))
Mar 05, 2025 11:13:43 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS CompletedLessons(enrollment_id INTEGER NOT NULL, lesson_id INTEGER NOT NULL, PRIMARY KEY (enrollment_id, lesson_id), FOREIGN KEY (enrollment_id) REFERENCES Enrollment(enrollment_id) ON DELETE CASCADE, FOREIGN KEY (lesson_id) REFERENCES Lesson(lesson_id) ON DELETE CASCADE)
Mar 05, 2025 11:13:43 AM com.lms.db.TableCreator createTables
FINE: tables created successfully!
Mar 05, 2025 11:13:43 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] pragma busy_timeout=3000
Mar 05, 2025 11:13:43 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] pragma busy_timeout=3000
Mar 05, 2025 11:13:43 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] pragma busy_timeout=3000
Mar 05, 2025 11:13:43 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] SELECT * FROM Course
Mar 05, 2025 11:13:43 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] SELECT course_id FROM Course WHERE serial_number = ?
Mar 05, 2025 11:13:43 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] INSERT INTO Lesson(course_id, lesson_title, lesson_content) VALUES(?, ?, ?)
Mar 05, 2025 11:13:43 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] begin;
Mar 05, 2025 11:13:43 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] commit;
Mar 05, 2025 11:13:43 AM com.lms.managers.CourseManager addLessonToCourse
INFO: Lesson AI fundamentals added successfully!
Mar 05, 2025 11:13:43 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] SELECT course_id FROM Course WHERE serial_number = ?
Mar 05, 2025 11:13:43 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] SELECT * FROM Lesson WHERE course_id = ?
Mar 05, 2025 11:14:50 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] pragma busy_timeout=3000
Mar 05, 2025 11:14:50 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS User(user_id INTEGER PRIMARY KEY AUTOINCREMENT, first_name VARCHAR(100) NOT NULL, last_name VARCHAR(100) NOT NULL, user_email VARCHAR(200) UNIQUE NOT NULL)
Mar 05, 2025 11:14:50 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] begin;
Mar 05, 2025 11:14:50 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] commit;
Mar 05, 2025 11:14:50 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS Student(student_id INTEGER PRIMARY KEY AUTOINCREMENT, user_id INTEGER NOT NULL, study_subject TEXT NOT NULL, FOREIGN KEY (user_id) REFERENCES User(user_id) ON DELETE CASCADE)
Mar 05, 2025 11:14:50 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS Course(course_id INTEGER PRIMARY KEY AUTOINCREMENT, serial_number TEXT UNIQUE NOT NULL, course_title VARCHAR(100) NOT NULL, course_description TEXT, category VARCHAR(100), difficulty_level VARCHAR(100), price REAL NOT NULL)
Mar 05, 2025 11:14:50 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS Lesson(lesson_id INTEGER PRIMARY KEY AUTOINCREMENT, course_id INTEGER NOT NULL, lesson_title TEXT NOT NULL, lesson_content TEXT, FOREIGN KEY (course_id) REFERENCES Course(course_id) ON DELETE CASCADE)
Mar 05, 2025 11:14:50 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS Enrollment(enrollment_id INTEGER PRIMARY KEY AUTOINCREMENT, enrollment_dateTime TEXT NOT NULL, student_id INTEGER NOT NULL, course_id INTEGER NOT NULL, rating INTEGER CHECK (rating BETWEEN 1 AND 5), FOREIGN KEY (student_id) REFERENCES Student(student_id) ON DELETE CASCADE, FOREIGN KEY (course_id) REFERENCES Course(course_id) ON DELETE CASCADE, UNIQUE(student_id, course_id))
Mar 05, 2025 11:14:50 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS CompletedLessons(enrollment_id INTEGER NOT NULL, lesson_id INTEGER NOT NULL, PRIMARY KEY (enrollment_id, lesson_id), FOREIGN KEY (enrollment_id) REFERENCES Enrollment(enrollment_id) ON DELETE CASCADE, FOREIGN KEY (lesson_id) REFERENCES Lesson(lesson_id) ON DELETE CASCADE)
Mar 05, 2025 11:14:50 AM com.lms.db.TableCreator createTables
FINE: tables created successfully!
Mar 05, 2025 11:14:50 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] pragma busy_timeout=3000
Mar 05, 2025 11:14:50 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] pragma busy_timeout=3000
Mar 05, 2025 11:14:50 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] pragma busy_timeout=3000
Mar 05, 2025 11:14:50 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] SELECT * FROM Course
Mar 05, 2025 11:14:50 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] SELECT course_id FROM Course WHERE serial_number = ?
Mar 05, 2025 11:14:50 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] INSERT INTO Lesson(course_id, lesson_title, lesson_content) VALUES(?, ?, ?)
Mar 05, 2025 11:14:50 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] begin;
Mar 05, 2025 11:14:50 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] commit;
Mar 05, 2025 11:14:50 AM com.lms.managers.CourseManager addLessonToCourse
INFO: Lesson physic1 added successfully!
Mar 05, 2025 11:14:50 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] SELECT course_id FROM Course WHERE serial_number = ?
Mar 05, 2025 11:14:50 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] SELECT * FROM Lesson WHERE course_id = ?
Mar 05, 2025 11:18:24 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] pragma busy_timeout=3000
Mar 05, 2025 11:18:25 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS User(user_id INTEGER PRIMARY KEY AUTOINCREMENT, first_name VARCHAR(100) NOT NULL, last_name VARCHAR(100) NOT NULL, user_email VARCHAR(200) UNIQUE NOT NULL)
Mar 05, 2025 11:18:25 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] begin;
Mar 05, 2025 11:18:25 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] commit;
Mar 05, 2025 11:18:25 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS Student(student_id INTEGER PRIMARY KEY AUTOINCREMENT, user_id INTEGER NOT NULL, study_subject TEXT NOT NULL, FOREIGN KEY (user_id) REFERENCES User(user_id) ON DELETE CASCADE)
Mar 05, 2025 11:18:25 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS Course(course_id INTEGER PRIMARY KEY AUTOINCREMENT, serial_number TEXT UNIQUE NOT NULL, course_title VARCHAR(100) NOT NULL, course_description TEXT, category VARCHAR(100), difficulty_level VARCHAR(100), price REAL NOT NULL)
Mar 05, 2025 11:18:25 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS Lesson(lesson_id INTEGER PRIMARY KEY AUTOINCREMENT, course_id INTEGER NOT NULL, lesson_title TEXT NOT NULL, lesson_content TEXT, FOREIGN KEY (course_id) REFERENCES Course(course_id) ON DELETE CASCADE)
Mar 05, 2025 11:18:25 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS Enrollment(enrollment_id INTEGER PRIMARY KEY AUTOINCREMENT, enrollment_dateTime TEXT NOT NULL, student_id INTEGER NOT NULL, course_id INTEGER NOT NULL, rating INTEGER CHECK (rating BETWEEN 1 AND 5), FOREIGN KEY (student_id) REFERENCES Student(student_id) ON DELETE CASCADE, FOREIGN KEY (course_id) REFERENCES Course(course_id) ON DELETE CASCADE, UNIQUE(student_id, course_id))
Mar 05, 2025 11:18:25 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS CompletedLessons(enrollment_id INTEGER NOT NULL, lesson_id INTEGER NOT NULL, PRIMARY KEY (enrollment_id, lesson_id), FOREIGN KEY (enrollment_id) REFERENCES Enrollment(enrollment_id) ON DELETE CASCADE, FOREIGN KEY (lesson_id) REFERENCES Lesson(lesson_id) ON DELETE CASCADE)
Mar 05, 2025 11:18:25 AM com.lms.db.TableCreator createTables
FINE: tables created successfully!
Mar 05, 2025 11:18:25 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] pragma busy_timeout=3000
Mar 05, 2025 11:18:25 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] pragma busy_timeout=3000
Mar 05, 2025 11:18:25 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] pragma busy_timeout=3000
Mar 05, 2025 11:18:25 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] SELECT * FROM Course
Mar 05, 2025 11:18:25 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] SELECT course_id FROM Course WHERE serial_number = ?
Mar 05, 2025 11:18:25 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] SELECT * FROM Lesson WHERE course_id = ?
Mar 05, 2025 11:18:25 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] DELETE FROM Course WHERE serial_number = ? AND course_title = ?
Mar 05, 2025 11:18:25 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] begin;
Mar 05, 2025 11:18:25 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] commit;
Mar 05, 2025 11:18:25 AM com.lms.managers.CourseManager removeCourse
WARNING: Course removed: ihk_22, physic
Mar 05, 2025 11:20:15 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] pragma busy_timeout=3000
Mar 05, 2025 11:20:15 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS User(user_id INTEGER PRIMARY KEY AUTOINCREMENT, first_name VARCHAR(100) NOT NULL, last_name VARCHAR(100) NOT NULL, user_email VARCHAR(200) UNIQUE NOT NULL)
Mar 05, 2025 11:20:15 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] begin;
Mar 05, 2025 11:20:15 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] commit;
Mar 05, 2025 11:20:15 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS Student(student_id INTEGER PRIMARY KEY AUTOINCREMENT, user_id INTEGER NOT NULL, study_subject TEXT NOT NULL, FOREIGN KEY (user_id) REFERENCES User(user_id) ON DELETE CASCADE)
Mar 05, 2025 11:20:15 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS Course(course_id INTEGER PRIMARY KEY AUTOINCREMENT, serial_number TEXT UNIQUE NOT NULL, course_title VARCHAR(100) NOT NULL, course_description TEXT, category VARCHAR(100), difficulty_level VARCHAR(100), price REAL NOT NULL)
Mar 05, 2025 11:20:15 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS Lesson(lesson_id INTEGER PRIMARY KEY AUTOINCREMENT, course_id INTEGER NOT NULL, lesson_title TEXT NOT NULL, lesson_content TEXT, FOREIGN KEY (course_id) REFERENCES Course(course_id) ON DELETE CASCADE)
Mar 05, 2025 11:20:15 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS Enrollment(enrollment_id INTEGER PRIMARY KEY AUTOINCREMENT, enrollment_dateTime TEXT NOT NULL, student_id INTEGER NOT NULL, course_id INTEGER NOT NULL, rating INTEGER CHECK (rating BETWEEN 1 AND 5), FOREIGN KEY (student_id) REFERENCES Student(student_id) ON DELETE CASCADE, FOREIGN KEY (course_id) REFERENCES Course(course_id) ON DELETE CASCADE, UNIQUE(student_id, course_id))
Mar 05, 2025 11:20:15 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS CompletedLessons(enrollment_id INTEGER NOT NULL, lesson_id INTEGER NOT NULL, PRIMARY KEY (enrollment_id, lesson_id), FOREIGN KEY (enrollment_id) REFERENCES Enrollment(enrollment_id) ON DELETE CASCADE, FOREIGN KEY (lesson_id) REFERENCES Lesson(lesson_id) ON DELETE CASCADE)
Mar 05, 2025 11:20:15 AM com.lms.db.TableCreator createTables
FINE: tables created successfully!
Mar 05, 2025 11:20:15 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] pragma busy_timeout=3000
Mar 05, 2025 11:20:15 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] pragma busy_timeout=3000
Mar 05, 2025 11:20:15 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] pragma busy_timeout=3000
Mar 05, 2025 11:20:15 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] SELECT * FROM Course
Mar 05, 2025 11:20:15 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] SELECT course_id FROM Course WHERE serial_number = ?
Mar 05, 2025 11:20:15 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] begin;
Mar 05, 2025 11:20:15 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] commit;
Mar 05, 2025 11:22:18 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] pragma busy_timeout=3000
Mar 05, 2025 11:22:18 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS User(user_id INTEGER PRIMARY KEY AUTOINCREMENT, first_name VARCHAR(100) NOT NULL, last_name VARCHAR(100) NOT NULL, user_email VARCHAR(200) UNIQUE NOT NULL)
Mar 05, 2025 11:22:18 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] begin;
Mar 05, 2025 11:22:18 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] commit;
Mar 05, 2025 11:22:18 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS Student(student_id INTEGER PRIMARY KEY AUTOINCREMENT, user_id INTEGER NOT NULL, study_subject TEXT NOT NULL, FOREIGN KEY (user_id) REFERENCES User(user_id) ON DELETE CASCADE)
Mar 05, 2025 11:22:18 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS Course(course_id INTEGER PRIMARY KEY AUTOINCREMENT, serial_number TEXT UNIQUE NOT NULL, course_title VARCHAR(100) NOT NULL, course_description TEXT, category VARCHAR(100), difficulty_level VARCHAR(100), price REAL NOT NULL)
Mar 05, 2025 11:22:18 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS Lesson(lesson_id INTEGER PRIMARY KEY AUTOINCREMENT, course_id INTEGER NOT NULL, lesson_title TEXT NOT NULL, lesson_content TEXT, FOREIGN KEY (course_id) REFERENCES Course(course_id) ON DELETE CASCADE)
Mar 05, 2025 11:22:18 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS Enrollment(enrollment_id INTEGER PRIMARY KEY AUTOINCREMENT, enrollment_dateTime TEXT NOT NULL, student_id INTEGER NOT NULL, course_id INTEGER NOT NULL, rating INTEGER CHECK (rating BETWEEN 1 AND 5), FOREIGN KEY (student_id) REFERENCES Student(student_id) ON DELETE CASCADE, FOREIGN KEY (course_id) REFERENCES Course(course_id) ON DELETE CASCADE, UNIQUE(student_id, course_id))
Mar 05, 2025 11:22:18 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS CompletedLessons(enrollment_id INTEGER NOT NULL, lesson_id INTEGER NOT NULL, PRIMARY KEY (enrollment_id, lesson_id), FOREIGN KEY (enrollment_id) REFERENCES Enrollment(enrollment_id) ON DELETE CASCADE, FOREIGN KEY (lesson_id) REFERENCES Lesson(lesson_id) ON DELETE CASCADE)
Mar 05, 2025 11:22:18 AM com.lms.db.TableCreator createTables
FINE: tables created successfully!
Mar 05, 2025 11:22:18 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] pragma busy_timeout=3000
Mar 05, 2025 11:22:18 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] pragma busy_timeout=3000
Mar 05, 2025 11:22:18 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] pragma busy_timeout=3000
Mar 05, 2025 11:22:18 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] SELECT * FROM Course
Mar 05, 2025 11:22:18 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] SELECT course_id FROM Course WHERE serial_number = ?
Mar 05, 2025 11:22:18 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] SELECT * FROM Lesson WHERE course_id = ?
Mar 05, 2025 11:22:18 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] DELETE FROM Course WHERE serial_number = ? AND course_title = ?
Mar 05, 2025 11:22:18 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] begin;
Mar 05, 2025 11:22:18 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] commit;
Mar 05, 2025 11:22:18 AM com.lms.managers.CourseManager removeCourse
WARNING: Course removed: KI_8880_FG, AI1
Mar 05, 2025 11:22:18 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] SELECT * FROM Course
Mar 05, 2025 11:22:18 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] SELECT course_id FROM Course WHERE serial_number = ?
Mar 05, 2025 11:24:45 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] pragma busy_timeout=3000
Mar 05, 2025 11:24:45 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS User(user_id INTEGER PRIMARY KEY AUTOINCREMENT, first_name VARCHAR(100) NOT NULL, last_name VARCHAR(100) NOT NULL, user_email VARCHAR(200) UNIQUE NOT NULL)
Mar 05, 2025 11:24:45 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] begin;
Mar 05, 2025 11:24:45 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] commit;
Mar 05, 2025 11:24:45 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS Student(student_id INTEGER PRIMARY KEY AUTOINCREMENT, user_id INTEGER NOT NULL, study_subject TEXT NOT NULL, FOREIGN KEY (user_id) REFERENCES User(user_id) ON DELETE CASCADE)
Mar 05, 2025 11:24:45 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS Course(course_id INTEGER PRIMARY KEY AUTOINCREMENT, serial_number TEXT UNIQUE NOT NULL, course_title VARCHAR(100) NOT NULL, course_description TEXT, category VARCHAR(100), difficulty_level VARCHAR(100), price REAL NOT NULL)
Mar 05, 2025 11:24:45 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS Lesson(lesson_id INTEGER PRIMARY KEY AUTOINCREMENT, course_id INTEGER NOT NULL, lesson_title TEXT NOT NULL, lesson_content TEXT, FOREIGN KEY (course_id) REFERENCES Course(course_id) ON DELETE CASCADE)
Mar 05, 2025 11:24:45 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS Enrollment(enrollment_id INTEGER PRIMARY KEY AUTOINCREMENT, enrollment_dateTime TEXT NOT NULL, student_id INTEGER NOT NULL, course_id INTEGER NOT NULL, rating INTEGER CHECK (rating BETWEEN 1 AND 5), FOREIGN KEY (student_id) REFERENCES Student(student_id) ON DELETE CASCADE, FOREIGN KEY (course_id) REFERENCES Course(course_id) ON DELETE CASCADE, UNIQUE(student_id, course_id))
Mar 05, 2025 11:24:45 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS CompletedLessons(enrollment_id INTEGER NOT NULL, lesson_id INTEGER NOT NULL, PRIMARY KEY (enrollment_id, lesson_id), FOREIGN KEY (enrollment_id) REFERENCES Enrollment(enrollment_id) ON DELETE CASCADE, FOREIGN KEY (lesson_id) REFERENCES Lesson(lesson_id) ON DELETE CASCADE)
Mar 05, 2025 11:24:45 AM com.lms.db.TableCreator createTables
FINE: tables created successfully!
Mar 05, 2025 11:24:45 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] pragma busy_timeout=3000
Mar 05, 2025 11:24:45 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] pragma busy_timeout=3000
Mar 05, 2025 11:24:45 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] pragma busy_timeout=3000
Mar 05, 2025 11:24:45 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] SELECT * FROM Course
Mar 05, 2025 11:24:45 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] SELECT course_id FROM Course WHERE serial_number = ?
Mar 05, 2025 11:24:45 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] begin;
Mar 05, 2025 11:24:45 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] commit;
Mar 05, 2025 11:42:47 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] pragma busy_timeout=3000
Mar 05, 2025 11:42:47 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS User(user_id INTEGER PRIMARY KEY AUTOINCREMENT, first_name VARCHAR(100) NOT NULL, last_name VARCHAR(100) NOT NULL, user_email VARCHAR(200) UNIQUE NOT NULL)
Mar 05, 2025 11:42:47 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] begin;
Mar 05, 2025 11:42:47 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] commit;
Mar 05, 2025 11:42:47 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS Student(student_id INTEGER PRIMARY KEY AUTOINCREMENT, user_id INTEGER NOT NULL, study_subject TEXT NOT NULL, FOREIGN KEY (user_id) REFERENCES User(user_id) ON DELETE CASCADE)
Mar 05, 2025 11:42:47 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS Course(course_id INTEGER PRIMARY KEY AUTOINCREMENT, serial_number TEXT UNIQUE NOT NULL, course_title VARCHAR(100) NOT NULL, course_description TEXT, category VARCHAR(100), difficulty_level VARCHAR(100), price REAL NOT NULL)
Mar 05, 2025 11:42:47 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS Lesson(lesson_id INTEGER PRIMARY KEY AUTOINCREMENT, course_id INTEGER NOT NULL, lesson_title TEXT NOT NULL, lesson_content TEXT, FOREIGN KEY (course_id) REFERENCES Course(course_id) ON DELETE CASCADE)
Mar 05, 2025 11:42:47 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS Enrollment(enrollment_id INTEGER PRIMARY KEY AUTOINCREMENT, enrollment_dateTime TEXT NOT NULL, student_id INTEGER NOT NULL, course_id INTEGER NOT NULL, rating INTEGER CHECK (rating BETWEEN 1 AND 5), FOREIGN KEY (student_id) REFERENCES Student(student_id) ON DELETE CASCADE, FOREIGN KEY (course_id) REFERENCES Course(course_id) ON DELETE CASCADE, UNIQUE(student_id, course_id))
Mar 05, 2025 11:42:47 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS CompletedLessons(enrollment_id INTEGER NOT NULL, lesson_id INTEGER NOT NULL, PRIMARY KEY (enrollment_id, lesson_id), FOREIGN KEY (enrollment_id) REFERENCES Enrollment(enrollment_id) ON DELETE CASCADE, FOREIGN KEY (lesson_id) REFERENCES Lesson(lesson_id) ON DELETE CASCADE)
Mar 05, 2025 11:42:47 AM com.lms.db.TableCreator createTables
FINE: tables created successfully!
Mar 05, 2025 11:42:47 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] pragma busy_timeout=3000
Mar 05, 2025 11:42:47 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] pragma busy_timeout=3000
Mar 05, 2025 11:42:47 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] pragma busy_timeout=3000
Mar 05, 2025 11:42:47 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] SELECT course_id FROM Course WHERE serial_number = ?
Mar 05, 2025 11:42:47 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] begin;
Mar 05, 2025 11:42:47 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] commit;
Mar 05, 2025 11:43:03 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] pragma busy_timeout=3000
Mar 05, 2025 11:43:03 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS User(user_id INTEGER PRIMARY KEY AUTOINCREMENT, first_name VARCHAR(100) NOT NULL, last_name VARCHAR(100) NOT NULL, user_email VARCHAR(200) UNIQUE NOT NULL)
Mar 05, 2025 11:43:03 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] begin;
Mar 05, 2025 11:43:03 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] commit;
Mar 05, 2025 11:43:03 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS Student(student_id INTEGER PRIMARY KEY AUTOINCREMENT, user_id INTEGER NOT NULL, study_subject TEXT NOT NULL, FOREIGN KEY (user_id) REFERENCES User(user_id) ON DELETE CASCADE)
Mar 05, 2025 11:43:03 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS Course(course_id INTEGER PRIMARY KEY AUTOINCREMENT, serial_number TEXT UNIQUE NOT NULL, course_title VARCHAR(100) NOT NULL, course_description TEXT, category VARCHAR(100), difficulty_level VARCHAR(100), price REAL NOT NULL)
Mar 05, 2025 11:43:03 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS Lesson(lesson_id INTEGER PRIMARY KEY AUTOINCREMENT, course_id INTEGER NOT NULL, lesson_title TEXT NOT NULL, lesson_content TEXT, FOREIGN KEY (course_id) REFERENCES Course(course_id) ON DELETE CASCADE)
Mar 05, 2025 11:43:03 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS Enrollment(enrollment_id INTEGER PRIMARY KEY AUTOINCREMENT, enrollment_dateTime TEXT NOT NULL, student_id INTEGER NOT NULL, course_id INTEGER NOT NULL, rating INTEGER CHECK (rating BETWEEN 1 AND 5), FOREIGN KEY (student_id) REFERENCES Student(student_id) ON DELETE CASCADE, FOREIGN KEY (course_id) REFERENCES Course(course_id) ON DELETE CASCADE, UNIQUE(student_id, course_id))
Mar 05, 2025 11:43:03 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS CompletedLessons(enrollment_id INTEGER NOT NULL, lesson_id INTEGER NOT NULL, PRIMARY KEY (enrollment_id, lesson_id), FOREIGN KEY (enrollment_id) REFERENCES Enrollment(enrollment_id) ON DELETE CASCADE, FOREIGN KEY (lesson_id) REFERENCES Lesson(lesson_id) ON DELETE CASCADE)
Mar 05, 2025 11:43:03 AM com.lms.db.TableCreator createTables
FINE: tables created successfully!
Mar 05, 2025 11:43:03 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] pragma busy_timeout=3000
Mar 05, 2025 11:43:03 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] pragma busy_timeout=3000
Mar 05, 2025 11:43:03 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] pragma busy_timeout=3000
Mar 05, 2025 11:43:03 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] SELECT course_id FROM Course WHERE serial_number = ?
Mar 05, 2025 11:43:03 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] SELECT * FROM Lesson WHERE course_id = ?
Mar 05, 2025 11:43:03 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] begin;
Mar 05, 2025 11:43:03 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] commit;
Mar 05, 2025 11:43:03 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] UPDATE Course SET course_title = ?, course_description = ?, category = ?, level = ?, price = ?WHERE serial_number = ?
Mar 05, 2025 11:43:03 AM com.lms.managers.CourseManager updateCourse
SEVERE: Error updating Student table
org.sqlite.SQLiteException: [SQLITE_ERROR] SQL error or missing database (no such column: level)
	at org.sqlite.core.DB.newSQLException(DB.java:1179)
	at org.sqlite.core.DB.newSQLException(DB.java:1190)
	at org.sqlite.core.DB.throwex(DB.java:1150)
	at org.sqlite.core.NativeDB.prepare_utf8(Native Method)
	at org.sqlite.core.NativeDB.prepare(NativeDB.java:132)
	at org.sqlite.core.DB.prepare(DB.java:264)
	at org.sqlite.core.CorePreparedStatement.<init>(CorePreparedStatement.java:46)
	at org.sqlite.jdbc3.JDBC3PreparedStatement.<init>(JDBC3PreparedStatement.java:32)
	at org.sqlite.jdbc4.JDBC4PreparedStatement.<init>(JDBC4PreparedStatement.java:25)
	at org.sqlite.jdbc4.JDBC4Connection.prepareStatement(JDBC4Connection.java:34)
	at org.sqlite.jdbc3.JDBC3Connection.prepareStatement(JDBC3Connection.java:225)
	at org.sqlite.jdbc3.JDBC3Connection.prepareStatement(JDBC3Connection.java:205)
	at com.lms.managers.CourseManager.updateCourse(CourseManager.java:149)
	at com.lms.test.TestApp.main(TestApp.java:65)

Mar 05, 2025 11:43:03 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] SELECT * FROM Course
Mar 05, 2025 11:44:17 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] pragma busy_timeout=3000
Mar 05, 2025 11:44:17 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS User(user_id INTEGER PRIMARY KEY AUTOINCREMENT, first_name VARCHAR(100) NOT NULL, last_name VARCHAR(100) NOT NULL, user_email VARCHAR(200) UNIQUE NOT NULL)
Mar 05, 2025 11:44:17 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] begin;
Mar 05, 2025 11:44:17 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] commit;
Mar 05, 2025 11:44:17 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS Student(student_id INTEGER PRIMARY KEY AUTOINCREMENT, user_id INTEGER NOT NULL, study_subject TEXT NOT NULL, FOREIGN KEY (user_id) REFERENCES User(user_id) ON DELETE CASCADE)
Mar 05, 2025 11:44:17 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS Course(course_id INTEGER PRIMARY KEY AUTOINCREMENT, serial_number TEXT UNIQUE NOT NULL, course_title VARCHAR(100) NOT NULL, course_description TEXT, category VARCHAR(100), difficulty_level VARCHAR(100), price REAL NOT NULL)
Mar 05, 2025 11:44:17 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS Lesson(lesson_id INTEGER PRIMARY KEY AUTOINCREMENT, course_id INTEGER NOT NULL, lesson_title TEXT NOT NULL, lesson_content TEXT, FOREIGN KEY (course_id) REFERENCES Course(course_id) ON DELETE CASCADE)
Mar 05, 2025 11:44:17 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS Enrollment(enrollment_id INTEGER PRIMARY KEY AUTOINCREMENT, enrollment_dateTime TEXT NOT NULL, student_id INTEGER NOT NULL, course_id INTEGER NOT NULL, rating INTEGER CHECK (rating BETWEEN 1 AND 5), FOREIGN KEY (student_id) REFERENCES Student(student_id) ON DELETE CASCADE, FOREIGN KEY (course_id) REFERENCES Course(course_id) ON DELETE CASCADE, UNIQUE(student_id, course_id))
Mar 05, 2025 11:44:17 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS CompletedLessons(enrollment_id INTEGER NOT NULL, lesson_id INTEGER NOT NULL, PRIMARY KEY (enrollment_id, lesson_id), FOREIGN KEY (enrollment_id) REFERENCES Enrollment(enrollment_id) ON DELETE CASCADE, FOREIGN KEY (lesson_id) REFERENCES Lesson(lesson_id) ON DELETE CASCADE)
Mar 05, 2025 11:44:17 AM com.lms.db.TableCreator createTables
FINE: tables created successfully!
Mar 05, 2025 11:44:17 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] pragma busy_timeout=3000
Mar 05, 2025 11:44:17 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] pragma busy_timeout=3000
Mar 05, 2025 11:44:17 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] pragma busy_timeout=3000
Mar 05, 2025 11:44:17 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] SELECT course_id FROM Course WHERE serial_number = ?
Mar 05, 2025 11:44:17 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] SELECT * FROM Lesson WHERE course_id = ?
Mar 05, 2025 11:44:17 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] begin;
Mar 05, 2025 11:44:17 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] commit;
Mar 05, 2025 11:44:17 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] UPDATE Course SET course_title = ?, course_description = ?, category = ?, difficulty_level = ?, price = ?WHERE serial_number = ?
Mar 05, 2025 11:44:17 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] SELECT * FROM Course
Mar 05, 2025 11:45:02 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] pragma busy_timeout=3000
Mar 05, 2025 11:45:02 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS User(user_id INTEGER PRIMARY KEY AUTOINCREMENT, first_name VARCHAR(100) NOT NULL, last_name VARCHAR(100) NOT NULL, user_email VARCHAR(200) UNIQUE NOT NULL)
Mar 05, 2025 11:45:02 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] begin;
Mar 05, 2025 11:45:02 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] commit;
Mar 05, 2025 11:45:02 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS Student(student_id INTEGER PRIMARY KEY AUTOINCREMENT, user_id INTEGER NOT NULL, study_subject TEXT NOT NULL, FOREIGN KEY (user_id) REFERENCES User(user_id) ON DELETE CASCADE)
Mar 05, 2025 11:45:02 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS Course(course_id INTEGER PRIMARY KEY AUTOINCREMENT, serial_number TEXT UNIQUE NOT NULL, course_title VARCHAR(100) NOT NULL, course_description TEXT, category VARCHAR(100), difficulty_level VARCHAR(100), price REAL NOT NULL)
Mar 05, 2025 11:45:02 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS Lesson(lesson_id INTEGER PRIMARY KEY AUTOINCREMENT, course_id INTEGER NOT NULL, lesson_title TEXT NOT NULL, lesson_content TEXT, FOREIGN KEY (course_id) REFERENCES Course(course_id) ON DELETE CASCADE)
Mar 05, 2025 11:45:02 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS Enrollment(enrollment_id INTEGER PRIMARY KEY AUTOINCREMENT, enrollment_dateTime TEXT NOT NULL, student_id INTEGER NOT NULL, course_id INTEGER NOT NULL, rating INTEGER CHECK (rating BETWEEN 1 AND 5), FOREIGN KEY (student_id) REFERENCES Student(student_id) ON DELETE CASCADE, FOREIGN KEY (course_id) REFERENCES Course(course_id) ON DELETE CASCADE, UNIQUE(student_id, course_id))
Mar 05, 2025 11:45:02 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS CompletedLessons(enrollment_id INTEGER NOT NULL, lesson_id INTEGER NOT NULL, PRIMARY KEY (enrollment_id, lesson_id), FOREIGN KEY (enrollment_id) REFERENCES Enrollment(enrollment_id) ON DELETE CASCADE, FOREIGN KEY (lesson_id) REFERENCES Lesson(lesson_id) ON DELETE CASCADE)
Mar 05, 2025 11:45:02 AM com.lms.db.TableCreator createTables
FINE: tables created successfully!
Mar 05, 2025 11:45:02 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] pragma busy_timeout=3000
Mar 05, 2025 11:45:02 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] pragma busy_timeout=3000
Mar 05, 2025 11:45:02 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] pragma busy_timeout=3000
Mar 05, 2025 11:45:02 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] SELECT course_id FROM Course WHERE serial_number = ?
Mar 05, 2025 11:45:02 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] SELECT * FROM Lesson WHERE course_id = ?
Mar 05, 2025 11:45:02 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] begin;
Mar 05, 2025 11:45:02 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] commit;
Mar 05, 2025 11:45:02 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] UPDATE Course SET course_title = ?, course_description = ?, category = ?, difficulty_level = ?, price = ?WHERE serial_number = ?
Mar 05, 2025 11:45:02 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] SELECT * FROM Course
Mar 05, 2025 12:26:57 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] pragma busy_timeout=3000
Mar 05, 2025 12:26:57 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS User(user_id INTEGER PRIMARY KEY AUTOINCREMENT, first_name VARCHAR(100) NOT NULL, last_name VARCHAR(100) NOT NULL, user_email VARCHAR(200) UNIQUE NOT NULL)
Mar 05, 2025 12:26:57 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] begin;
Mar 05, 2025 12:26:57 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] commit;
Mar 05, 2025 12:26:57 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS Student(student_id INTEGER PRIMARY KEY AUTOINCREMENT, user_id INTEGER NOT NULL, study_subject TEXT NOT NULL, FOREIGN KEY (user_id) REFERENCES User(user_id) ON DELETE CASCADE)
Mar 05, 2025 12:26:57 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS Course(course_id INTEGER PRIMARY KEY AUTOINCREMENT, serial_number TEXT UNIQUE NOT NULL, course_title VARCHAR(100) NOT NULL, course_description TEXT, category VARCHAR(100), difficulty_level VARCHAR(100), price REAL NOT NULL)
Mar 05, 2025 12:26:57 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS Lesson(lesson_id INTEGER PRIMARY KEY AUTOINCREMENT, course_id INTEGER NOT NULL, lesson_title TEXT NOT NULL, lesson_content TEXT, FOREIGN KEY (course_id) REFERENCES Course(course_id) ON DELETE CASCADE)
Mar 05, 2025 12:26:57 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS Enrollment(enrollment_id INTEGER PRIMARY KEY AUTOINCREMENT, enrollment_dateTime TEXT NOT NULL, student_id INTEGER NOT NULL, course_id INTEGER NOT NULL, rating INTEGER CHECK (rating BETWEEN 1 AND 5), FOREIGN KEY (student_id) REFERENCES Student(student_id) ON DELETE CASCADE, FOREIGN KEY (course_id) REFERENCES Course(course_id) ON DELETE CASCADE, UNIQUE(student_id, course_id))
Mar 05, 2025 12:26:57 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS CompletedLessons(enrollment_id INTEGER NOT NULL, lesson_id INTEGER NOT NULL, PRIMARY KEY (enrollment_id, lesson_id), FOREIGN KEY (enrollment_id) REFERENCES Enrollment(enrollment_id) ON DELETE CASCADE, FOREIGN KEY (lesson_id) REFERENCES Lesson(lesson_id) ON DELETE CASCADE)
Mar 05, 2025 12:26:57 PM com.lms.db.TableCreator createTables
FINE: tables created successfully!
Mar 05, 2025 12:26:57 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] pragma busy_timeout=3000
Mar 05, 2025 12:26:57 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] pragma busy_timeout=3000
Mar 05, 2025 12:26:57 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] pragma busy_timeout=3000
Mar 05, 2025 12:26:57 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] SELECT User.user_id, User.first_name, User.last_name, User.user_email, Student.student_id, Student.study_subject From Student JOIN User ON Student.user_id = User.user_id
Mar 05, 2025 12:27:08 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] SELECT * FROM Course
Mar 05, 2025 12:27:15 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] INSERT INTO Enrollment(enrollment_dateTime, student_id, course_id) VALUES(?, ?, ?)
Mar 05, 2025 12:27:15 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] begin;
Mar 05, 2025 12:27:15 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] commit;
Mar 05, 2025 12:27:15 PM com.lms.managers.EnrollmentManager enrollStudentInCourse
INFO: Student with id 11, enrolled to the course with id 7 successfully!
Mar 05, 2025 12:27:26 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] pragma busy_timeout=3000
Mar 05, 2025 12:27:26 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS User(user_id INTEGER PRIMARY KEY AUTOINCREMENT, first_name VARCHAR(100) NOT NULL, last_name VARCHAR(100) NOT NULL, user_email VARCHAR(200) UNIQUE NOT NULL)
Mar 05, 2025 12:27:26 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] begin;
Mar 05, 2025 12:27:26 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] commit;
Mar 05, 2025 12:27:26 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS Student(student_id INTEGER PRIMARY KEY AUTOINCREMENT, user_id INTEGER NOT NULL, study_subject TEXT NOT NULL, FOREIGN KEY (user_id) REFERENCES User(user_id) ON DELETE CASCADE)
Mar 05, 2025 12:27:26 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS Course(course_id INTEGER PRIMARY KEY AUTOINCREMENT, serial_number TEXT UNIQUE NOT NULL, course_title VARCHAR(100) NOT NULL, course_description TEXT, category VARCHAR(100), difficulty_level VARCHAR(100), price REAL NOT NULL)
Mar 05, 2025 12:27:26 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS Lesson(lesson_id INTEGER PRIMARY KEY AUTOINCREMENT, course_id INTEGER NOT NULL, lesson_title TEXT NOT NULL, lesson_content TEXT, FOREIGN KEY (course_id) REFERENCES Course(course_id) ON DELETE CASCADE)
Mar 05, 2025 12:27:26 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS Enrollment(enrollment_id INTEGER PRIMARY KEY AUTOINCREMENT, enrollment_dateTime TEXT NOT NULL, student_id INTEGER NOT NULL, course_id INTEGER NOT NULL, rating INTEGER CHECK (rating BETWEEN 1 AND 5), FOREIGN KEY (student_id) REFERENCES Student(student_id) ON DELETE CASCADE, FOREIGN KEY (course_id) REFERENCES Course(course_id) ON DELETE CASCADE, UNIQUE(student_id, course_id))
Mar 05, 2025 12:27:26 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS CompletedLessons(enrollment_id INTEGER NOT NULL, lesson_id INTEGER NOT NULL, PRIMARY KEY (enrollment_id, lesson_id), FOREIGN KEY (enrollment_id) REFERENCES Enrollment(enrollment_id) ON DELETE CASCADE, FOREIGN KEY (lesson_id) REFERENCES Lesson(lesson_id) ON DELETE CASCADE)
Mar 05, 2025 12:27:26 PM com.lms.db.TableCreator createTables
FINE: tables created successfully!
Mar 05, 2025 12:27:26 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] pragma busy_timeout=3000
Mar 05, 2025 12:27:27 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] pragma busy_timeout=3000
Mar 05, 2025 12:27:27 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] pragma busy_timeout=3000
Mar 05, 2025 12:27:27 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] SELECT User.user_id, User.first_name, User.last_name, User.user_email, Student.student_id, Student.study_subject From Student JOIN User ON Student.user_id = User.user_id
Mar 05, 2025 12:27:31 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] SELECT * FROM Course
Mar 05, 2025 12:27:33 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] INSERT INTO Enrollment(enrollment_dateTime, student_id, course_id) VALUES(?, ?, ?)
Mar 05, 2025 12:27:33 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] begin;
Mar 05, 2025 12:27:33 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] commit;
Mar 05, 2025 12:27:33 PM com.lms.managers.EnrollmentManager enrollStudentInCourse
INFO: Student with id 11, enrolled to the course with id 5 successfully!
Mar 05, 2025 12:27:37 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] pragma busy_timeout=3000
Mar 05, 2025 12:27:37 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS User(user_id INTEGER PRIMARY KEY AUTOINCREMENT, first_name VARCHAR(100) NOT NULL, last_name VARCHAR(100) NOT NULL, user_email VARCHAR(200) UNIQUE NOT NULL)
Mar 05, 2025 12:27:37 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] begin;
Mar 05, 2025 12:27:37 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] commit;
Mar 05, 2025 12:27:37 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS Student(student_id INTEGER PRIMARY KEY AUTOINCREMENT, user_id INTEGER NOT NULL, study_subject TEXT NOT NULL, FOREIGN KEY (user_id) REFERENCES User(user_id) ON DELETE CASCADE)
Mar 05, 2025 12:27:37 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS Course(course_id INTEGER PRIMARY KEY AUTOINCREMENT, serial_number TEXT UNIQUE NOT NULL, course_title VARCHAR(100) NOT NULL, course_description TEXT, category VARCHAR(100), difficulty_level VARCHAR(100), price REAL NOT NULL)
Mar 05, 2025 12:27:37 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS Lesson(lesson_id INTEGER PRIMARY KEY AUTOINCREMENT, course_id INTEGER NOT NULL, lesson_title TEXT NOT NULL, lesson_content TEXT, FOREIGN KEY (course_id) REFERENCES Course(course_id) ON DELETE CASCADE)
Mar 05, 2025 12:27:37 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS Enrollment(enrollment_id INTEGER PRIMARY KEY AUTOINCREMENT, enrollment_dateTime TEXT NOT NULL, student_id INTEGER NOT NULL, course_id INTEGER NOT NULL, rating INTEGER CHECK (rating BETWEEN 1 AND 5), FOREIGN KEY (student_id) REFERENCES Student(student_id) ON DELETE CASCADE, FOREIGN KEY (course_id) REFERENCES Course(course_id) ON DELETE CASCADE, UNIQUE(student_id, course_id))
Mar 05, 2025 12:27:37 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS CompletedLessons(enrollment_id INTEGER NOT NULL, lesson_id INTEGER NOT NULL, PRIMARY KEY (enrollment_id, lesson_id), FOREIGN KEY (enrollment_id) REFERENCES Enrollment(enrollment_id) ON DELETE CASCADE, FOREIGN KEY (lesson_id) REFERENCES Lesson(lesson_id) ON DELETE CASCADE)
Mar 05, 2025 12:27:37 PM com.lms.db.TableCreator createTables
FINE: tables created successfully!
Mar 05, 2025 12:27:37 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] pragma busy_timeout=3000
Mar 05, 2025 12:27:37 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] pragma busy_timeout=3000
Mar 05, 2025 12:27:37 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] pragma busy_timeout=3000
Mar 05, 2025 12:27:37 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] SELECT User.user_id, User.first_name, User.last_name, User.user_email, Student.student_id, Student.study_subject From Student JOIN User ON Student.user_id = User.user_id
Mar 05, 2025 12:27:42 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] SELECT * FROM Course
Mar 05, 2025 12:27:44 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] INSERT INTO Enrollment(enrollment_dateTime, student_id, course_id) VALUES(?, ?, ?)
Mar 05, 2025 12:27:44 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] begin;
Mar 05, 2025 12:27:44 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] commit;
Mar 05, 2025 12:27:44 PM com.lms.managers.EnrollmentManager enrollStudentInCourse
INFO: Student with id 10, enrolled to the course with id 4 successfully!
Mar 05, 2025 12:27:47 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] pragma busy_timeout=3000
Mar 05, 2025 12:27:47 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS User(user_id INTEGER PRIMARY KEY AUTOINCREMENT, first_name VARCHAR(100) NOT NULL, last_name VARCHAR(100) NOT NULL, user_email VARCHAR(200) UNIQUE NOT NULL)
Mar 05, 2025 12:27:47 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] begin;
Mar 05, 2025 12:27:47 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] commit;
Mar 05, 2025 12:27:47 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS Student(student_id INTEGER PRIMARY KEY AUTOINCREMENT, user_id INTEGER NOT NULL, study_subject TEXT NOT NULL, FOREIGN KEY (user_id) REFERENCES User(user_id) ON DELETE CASCADE)
Mar 05, 2025 12:27:47 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS Course(course_id INTEGER PRIMARY KEY AUTOINCREMENT, serial_number TEXT UNIQUE NOT NULL, course_title VARCHAR(100) NOT NULL, course_description TEXT, category VARCHAR(100), difficulty_level VARCHAR(100), price REAL NOT NULL)
Mar 05, 2025 12:27:47 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS Lesson(lesson_id INTEGER PRIMARY KEY AUTOINCREMENT, course_id INTEGER NOT NULL, lesson_title TEXT NOT NULL, lesson_content TEXT, FOREIGN KEY (course_id) REFERENCES Course(course_id) ON DELETE CASCADE)
Mar 05, 2025 12:27:47 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS Enrollment(enrollment_id INTEGER PRIMARY KEY AUTOINCREMENT, enrollment_dateTime TEXT NOT NULL, student_id INTEGER NOT NULL, course_id INTEGER NOT NULL, rating INTEGER CHECK (rating BETWEEN 1 AND 5), FOREIGN KEY (student_id) REFERENCES Student(student_id) ON DELETE CASCADE, FOREIGN KEY (course_id) REFERENCES Course(course_id) ON DELETE CASCADE, UNIQUE(student_id, course_id))
Mar 05, 2025 12:27:47 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS CompletedLessons(enrollment_id INTEGER NOT NULL, lesson_id INTEGER NOT NULL, PRIMARY KEY (enrollment_id, lesson_id), FOREIGN KEY (enrollment_id) REFERENCES Enrollment(enrollment_id) ON DELETE CASCADE, FOREIGN KEY (lesson_id) REFERENCES Lesson(lesson_id) ON DELETE CASCADE)
Mar 05, 2025 12:27:47 PM com.lms.db.TableCreator createTables
FINE: tables created successfully!
Mar 05, 2025 12:27:47 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] pragma busy_timeout=3000
Mar 05, 2025 12:27:47 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] pragma busy_timeout=3000
Mar 05, 2025 12:27:47 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] pragma busy_timeout=3000
Mar 05, 2025 12:27:47 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] SELECT User.user_id, User.first_name, User.last_name, User.user_email, Student.student_id, Student.study_subject From Student JOIN User ON Student.user_id = User.user_id
Mar 05, 2025 12:27:50 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] SELECT * FROM Course
Mar 05, 2025 12:27:53 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] INSERT INTO Enrollment(enrollment_dateTime, student_id, course_id) VALUES(?, ?, ?)
Mar 05, 2025 12:27:53 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] begin;
Mar 05, 2025 12:27:53 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] commit;
Mar 05, 2025 12:27:53 PM com.lms.managers.EnrollmentManager enrollStudentInCourse
INFO: Student with id 2, enrolled to the course with id 5 successfully!
Mar 05, 2025 12:27:56 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] pragma busy_timeout=3000
Mar 05, 2025 12:27:56 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS User(user_id INTEGER PRIMARY KEY AUTOINCREMENT, first_name VARCHAR(100) NOT NULL, last_name VARCHAR(100) NOT NULL, user_email VARCHAR(200) UNIQUE NOT NULL)
Mar 05, 2025 12:27:56 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] begin;
Mar 05, 2025 12:27:56 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] commit;
Mar 05, 2025 12:27:56 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS Student(student_id INTEGER PRIMARY KEY AUTOINCREMENT, user_id INTEGER NOT NULL, study_subject TEXT NOT NULL, FOREIGN KEY (user_id) REFERENCES User(user_id) ON DELETE CASCADE)
Mar 05, 2025 12:27:56 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS Course(course_id INTEGER PRIMARY KEY AUTOINCREMENT, serial_number TEXT UNIQUE NOT NULL, course_title VARCHAR(100) NOT NULL, course_description TEXT, category VARCHAR(100), difficulty_level VARCHAR(100), price REAL NOT NULL)
Mar 05, 2025 12:27:56 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS Lesson(lesson_id INTEGER PRIMARY KEY AUTOINCREMENT, course_id INTEGER NOT NULL, lesson_title TEXT NOT NULL, lesson_content TEXT, FOREIGN KEY (course_id) REFERENCES Course(course_id) ON DELETE CASCADE)
Mar 05, 2025 12:27:56 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS Enrollment(enrollment_id INTEGER PRIMARY KEY AUTOINCREMENT, enrollment_dateTime TEXT NOT NULL, student_id INTEGER NOT NULL, course_id INTEGER NOT NULL, rating INTEGER CHECK (rating BETWEEN 1 AND 5), FOREIGN KEY (student_id) REFERENCES Student(student_id) ON DELETE CASCADE, FOREIGN KEY (course_id) REFERENCES Course(course_id) ON DELETE CASCADE, UNIQUE(student_id, course_id))
Mar 05, 2025 12:27:56 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS CompletedLessons(enrollment_id INTEGER NOT NULL, lesson_id INTEGER NOT NULL, PRIMARY KEY (enrollment_id, lesson_id), FOREIGN KEY (enrollment_id) REFERENCES Enrollment(enrollment_id) ON DELETE CASCADE, FOREIGN KEY (lesson_id) REFERENCES Lesson(lesson_id) ON DELETE CASCADE)
Mar 05, 2025 12:27:56 PM com.lms.db.TableCreator createTables
FINE: tables created successfully!
Mar 05, 2025 12:27:56 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] pragma busy_timeout=3000
Mar 05, 2025 12:27:56 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] pragma busy_timeout=3000
Mar 05, 2025 12:27:56 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] pragma busy_timeout=3000
Mar 05, 2025 12:27:56 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] SELECT User.user_id, User.first_name, User.last_name, User.user_email, Student.student_id, Student.study_subject From Student JOIN User ON Student.user_id = User.user_id
Mar 05, 2025 12:28:01 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] SELECT * FROM Course
Mar 05, 2025 12:28:03 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] INSERT INTO Enrollment(enrollment_dateTime, student_id, course_id) VALUES(?, ?, ?)
Mar 05, 2025 12:28:03 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] begin;
Mar 05, 2025 12:28:03 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] commit;
Mar 05, 2025 12:28:03 PM com.lms.managers.EnrollmentManager enrollStudentInCourse
INFO: Student with id 6, enrolled to the course with id 1 successfully!
Mar 05, 2025 12:28:06 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] pragma busy_timeout=3000
Mar 05, 2025 12:28:06 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS User(user_id INTEGER PRIMARY KEY AUTOINCREMENT, first_name VARCHAR(100) NOT NULL, last_name VARCHAR(100) NOT NULL, user_email VARCHAR(200) UNIQUE NOT NULL)
Mar 05, 2025 12:28:06 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] begin;
Mar 05, 2025 12:28:06 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] commit;
Mar 05, 2025 12:28:06 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS Student(student_id INTEGER PRIMARY KEY AUTOINCREMENT, user_id INTEGER NOT NULL, study_subject TEXT NOT NULL, FOREIGN KEY (user_id) REFERENCES User(user_id) ON DELETE CASCADE)
Mar 05, 2025 12:28:06 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS Course(course_id INTEGER PRIMARY KEY AUTOINCREMENT, serial_number TEXT UNIQUE NOT NULL, course_title VARCHAR(100) NOT NULL, course_description TEXT, category VARCHAR(100), difficulty_level VARCHAR(100), price REAL NOT NULL)
Mar 05, 2025 12:28:06 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS Lesson(lesson_id INTEGER PRIMARY KEY AUTOINCREMENT, course_id INTEGER NOT NULL, lesson_title TEXT NOT NULL, lesson_content TEXT, FOREIGN KEY (course_id) REFERENCES Course(course_id) ON DELETE CASCADE)
Mar 05, 2025 12:28:06 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS Enrollment(enrollment_id INTEGER PRIMARY KEY AUTOINCREMENT, enrollment_dateTime TEXT NOT NULL, student_id INTEGER NOT NULL, course_id INTEGER NOT NULL, rating INTEGER CHECK (rating BETWEEN 1 AND 5), FOREIGN KEY (student_id) REFERENCES Student(student_id) ON DELETE CASCADE, FOREIGN KEY (course_id) REFERENCES Course(course_id) ON DELETE CASCADE, UNIQUE(student_id, course_id))
Mar 05, 2025 12:28:06 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS CompletedLessons(enrollment_id INTEGER NOT NULL, lesson_id INTEGER NOT NULL, PRIMARY KEY (enrollment_id, lesson_id), FOREIGN KEY (enrollment_id) REFERENCES Enrollment(enrollment_id) ON DELETE CASCADE, FOREIGN KEY (lesson_id) REFERENCES Lesson(lesson_id) ON DELETE CASCADE)
Mar 05, 2025 12:28:06 PM com.lms.db.TableCreator createTables
FINE: tables created successfully!
Mar 05, 2025 12:28:06 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] pragma busy_timeout=3000
Mar 05, 2025 12:28:06 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] pragma busy_timeout=3000
Mar 05, 2025 12:28:06 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] pragma busy_timeout=3000
Mar 05, 2025 12:28:06 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] SELECT User.user_id, User.first_name, User.last_name, User.user_email, Student.student_id, Student.study_subject From Student JOIN User ON Student.user_id = User.user_id
Mar 05, 2025 12:28:08 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] SELECT * FROM Course
Mar 05, 2025 12:28:11 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] INSERT INTO Enrollment(enrollment_dateTime, student_id, course_id) VALUES(?, ?, ?)
Mar 05, 2025 12:28:11 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] begin;
Mar 05, 2025 12:28:11 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] commit;
Mar 05, 2025 12:28:11 PM com.lms.managers.EnrollmentManager enrollStudentInCourse
INFO: Student with id 10, enrolled to the course with id 4 successfully!
Mar 05, 2025 12:52:09 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] pragma busy_timeout=3000
Mar 05, 2025 12:52:09 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS User(user_id INTEGER PRIMARY KEY AUTOINCREMENT, first_name VARCHAR(100) NOT NULL, last_name VARCHAR(100) NOT NULL, user_email VARCHAR(200) UNIQUE NOT NULL)
Mar 05, 2025 12:52:09 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] begin;
Mar 05, 2025 12:52:09 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] commit;
Mar 05, 2025 12:52:09 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS Student(student_id INTEGER PRIMARY KEY AUTOINCREMENT, user_id INTEGER NOT NULL, study_subject TEXT NOT NULL, FOREIGN KEY (user_id) REFERENCES User(user_id) ON DELETE CASCADE)
Mar 05, 2025 12:52:09 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS Course(course_id INTEGER PRIMARY KEY AUTOINCREMENT, serial_number TEXT UNIQUE NOT NULL, course_title VARCHAR(100) NOT NULL, course_description TEXT, category VARCHAR(100), difficulty_level VARCHAR(100), price REAL NOT NULL)
Mar 05, 2025 12:52:09 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS Lesson(lesson_id INTEGER PRIMARY KEY AUTOINCREMENT, course_id INTEGER NOT NULL, lesson_title TEXT NOT NULL, lesson_content TEXT, FOREIGN KEY (course_id) REFERENCES Course(course_id) ON DELETE CASCADE)
Mar 05, 2025 12:52:09 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS Enrollment(enrollment_id INTEGER PRIMARY KEY AUTOINCREMENT, enrollment_dateTime TEXT NOT NULL, student_id INTEGER NOT NULL, course_id INTEGER NOT NULL, rating INTEGER CHECK (rating BETWEEN 1 AND 5), FOREIGN KEY (student_id) REFERENCES Student(student_id) ON DELETE CASCADE, FOREIGN KEY (course_id) REFERENCES Course(course_id) ON DELETE CASCADE, UNIQUE(student_id, course_id))
Mar 05, 2025 12:52:09 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS CompletedLessons(enrollment_id INTEGER NOT NULL, lesson_id INTEGER NOT NULL, PRIMARY KEY (enrollment_id, lesson_id), FOREIGN KEY (enrollment_id) REFERENCES Enrollment(enrollment_id) ON DELETE CASCADE, FOREIGN KEY (lesson_id) REFERENCES Lesson(lesson_id) ON DELETE CASCADE)
Mar 05, 2025 12:52:09 PM com.lms.db.TableCreator createTables
FINE: tables created successfully!
Mar 05, 2025 12:52:09 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] pragma busy_timeout=3000
Mar 05, 2025 12:52:09 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] pragma busy_timeout=3000
Mar 05, 2025 12:52:09 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] pragma busy_timeout=3000
Mar 05, 2025 12:52:09 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] SELECT User.user_id, User.first_name, User.last_name, User.user_email, Student.student_id, Student.study_subject From Student JOIN User ON Student.user_id = User.user_id
Mar 05, 2025 12:52:41 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] SELECT c.serial_number, c.course_title, c.course_description, e.enrollment_dateTime FROM Enrollment e JOIN Course c ON e.course_id = c.course_id WHERE e.student_id = ?
Mar 05, 2025 1:07:05 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] pragma busy_timeout=3000
Mar 05, 2025 1:07:05 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS User(user_id INTEGER PRIMARY KEY AUTOINCREMENT, first_name VARCHAR(100) NOT NULL, last_name VARCHAR(100) NOT NULL, user_email VARCHAR(200) UNIQUE NOT NULL)
Mar 05, 2025 1:07:05 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] begin;
Mar 05, 2025 1:07:05 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] commit;
Mar 05, 2025 1:07:05 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS Student(student_id INTEGER PRIMARY KEY AUTOINCREMENT, user_id INTEGER NOT NULL, study_subject TEXT NOT NULL, FOREIGN KEY (user_id) REFERENCES User(user_id) ON DELETE CASCADE)
Mar 05, 2025 1:07:05 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS Course(course_id INTEGER PRIMARY KEY AUTOINCREMENT, serial_number TEXT UNIQUE NOT NULL, course_title VARCHAR(100) NOT NULL, course_description TEXT, category VARCHAR(100), difficulty_level VARCHAR(100), price REAL NOT NULL)
Mar 05, 2025 1:07:05 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS Lesson(lesson_id INTEGER PRIMARY KEY AUTOINCREMENT, course_id INTEGER NOT NULL, lesson_title TEXT NOT NULL, lesson_content TEXT, FOREIGN KEY (course_id) REFERENCES Course(course_id) ON DELETE CASCADE)
Mar 05, 2025 1:07:05 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS Enrollment(enrollment_id INTEGER PRIMARY KEY AUTOINCREMENT, enrollment_dateTime TEXT NOT NULL, student_id INTEGER NOT NULL, course_id INTEGER NOT NULL, rating INTEGER CHECK (rating BETWEEN 1 AND 5), FOREIGN KEY (student_id) REFERENCES Student(student_id) ON DELETE CASCADE, FOREIGN KEY (course_id) REFERENCES Course(course_id) ON DELETE CASCADE, UNIQUE(student_id, course_id))
Mar 05, 2025 1:07:05 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS CompletedLessons(enrollment_id INTEGER NOT NULL, lesson_id INTEGER NOT NULL, PRIMARY KEY (enrollment_id, lesson_id), FOREIGN KEY (enrollment_id) REFERENCES Enrollment(enrollment_id) ON DELETE CASCADE, FOREIGN KEY (lesson_id) REFERENCES Lesson(lesson_id) ON DELETE CASCADE)
Mar 05, 2025 1:07:05 PM com.lms.db.TableCreator createTables
FINE: tables created successfully!
Mar 05, 2025 1:07:05 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] pragma busy_timeout=3000
Mar 05, 2025 1:07:05 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] pragma busy_timeout=3000
Mar 05, 2025 1:07:05 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] pragma busy_timeout=3000
Mar 05, 2025 1:07:05 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] SELECT User.user_id, User.first_name, User.last_name, User.user_email, Student.student_id, Student.study_subject From Student JOIN User ON Student.user_id = User.user_id
Mar 05, 2025 1:07:22 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] SELECT c.serial_number, c.course_title, c.course_description, e.enrollment_dateTime FROM Enrollment e JOIN Course c ON e.course_id = c.course_id WHERE e.student_id = ?
Mar 05, 2025 1:07:22 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] begin;
Mar 05, 2025 1:07:22 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] commit;
Mar 05, 2025 1:07:22 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] SELECT * FROM Course
Mar 05, 2025 1:07:54 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] SELECT s.student_id, u.first_name, u.last_name, s.study_subject, e.enrollment_dateTime FROM Enrollment e JOIN Student s ON s.student_id = e.student_idJOIN User u ON s.user_id = u.user_id WHERE e.courseId = ?
Mar 05, 2025 1:09:38 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] pragma busy_timeout=3000
Mar 05, 2025 1:09:38 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS User(user_id INTEGER PRIMARY KEY AUTOINCREMENT, first_name VARCHAR(100) NOT NULL, last_name VARCHAR(100) NOT NULL, user_email VARCHAR(200) UNIQUE NOT NULL)
Mar 05, 2025 1:09:38 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] begin;
Mar 05, 2025 1:09:38 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] commit;
Mar 05, 2025 1:09:38 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS Student(student_id INTEGER PRIMARY KEY AUTOINCREMENT, user_id INTEGER NOT NULL, study_subject TEXT NOT NULL, FOREIGN KEY (user_id) REFERENCES User(user_id) ON DELETE CASCADE)
Mar 05, 2025 1:09:38 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS Course(course_id INTEGER PRIMARY KEY AUTOINCREMENT, serial_number TEXT UNIQUE NOT NULL, course_title VARCHAR(100) NOT NULL, course_description TEXT, category VARCHAR(100), difficulty_level VARCHAR(100), price REAL NOT NULL)
Mar 05, 2025 1:09:38 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS Lesson(lesson_id INTEGER PRIMARY KEY AUTOINCREMENT, course_id INTEGER NOT NULL, lesson_title TEXT NOT NULL, lesson_content TEXT, FOREIGN KEY (course_id) REFERENCES Course(course_id) ON DELETE CASCADE)
Mar 05, 2025 1:09:38 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS Enrollment(enrollment_id INTEGER PRIMARY KEY AUTOINCREMENT, enrollment_dateTime TEXT NOT NULL, student_id INTEGER NOT NULL, course_id INTEGER NOT NULL, rating INTEGER CHECK (rating BETWEEN 1 AND 5), FOREIGN KEY (student_id) REFERENCES Student(student_id) ON DELETE CASCADE, FOREIGN KEY (course_id) REFERENCES Course(course_id) ON DELETE CASCADE, UNIQUE(student_id, course_id))
Mar 05, 2025 1:09:38 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS CompletedLessons(enrollment_id INTEGER NOT NULL, lesson_id INTEGER NOT NULL, PRIMARY KEY (enrollment_id, lesson_id), FOREIGN KEY (enrollment_id) REFERENCES Enrollment(enrollment_id) ON DELETE CASCADE, FOREIGN KEY (lesson_id) REFERENCES Lesson(lesson_id) ON DELETE CASCADE)
Mar 05, 2025 1:09:38 PM com.lms.db.TableCreator createTables
FINE: tables created successfully!
Mar 05, 2025 1:09:38 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] pragma busy_timeout=3000
Mar 05, 2025 1:09:38 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] pragma busy_timeout=3000
Mar 05, 2025 1:09:38 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] pragma busy_timeout=3000
Mar 05, 2025 1:09:38 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] SELECT * FROM Course
Mar 05, 2025 1:09:43 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] SELECT s.student_id, u.first_name, u.last_name, s.study_subject, e.enrollment_dateTime FROM Enrollment e JOIN Student s ON s.student_id = e.student_id JOIN User u ON s.user_id = u.user_id WHERE e.courseId = ?
Mar 05, 2025 1:10:10 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] pragma busy_timeout=3000
Mar 05, 2025 1:10:10 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS User(user_id INTEGER PRIMARY KEY AUTOINCREMENT, first_name VARCHAR(100) NOT NULL, last_name VARCHAR(100) NOT NULL, user_email VARCHAR(200) UNIQUE NOT NULL)
Mar 05, 2025 1:10:10 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] begin;
Mar 05, 2025 1:10:10 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] commit;
Mar 05, 2025 1:10:10 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS Student(student_id INTEGER PRIMARY KEY AUTOINCREMENT, user_id INTEGER NOT NULL, study_subject TEXT NOT NULL, FOREIGN KEY (user_id) REFERENCES User(user_id) ON DELETE CASCADE)
Mar 05, 2025 1:10:10 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS Course(course_id INTEGER PRIMARY KEY AUTOINCREMENT, serial_number TEXT UNIQUE NOT NULL, course_title VARCHAR(100) NOT NULL, course_description TEXT, category VARCHAR(100), difficulty_level VARCHAR(100), price REAL NOT NULL)
Mar 05, 2025 1:10:10 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS Lesson(lesson_id INTEGER PRIMARY KEY AUTOINCREMENT, course_id INTEGER NOT NULL, lesson_title TEXT NOT NULL, lesson_content TEXT, FOREIGN KEY (course_id) REFERENCES Course(course_id) ON DELETE CASCADE)
Mar 05, 2025 1:10:10 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS Enrollment(enrollment_id INTEGER PRIMARY KEY AUTOINCREMENT, enrollment_dateTime TEXT NOT NULL, student_id INTEGER NOT NULL, course_id INTEGER NOT NULL, rating INTEGER CHECK (rating BETWEEN 1 AND 5), FOREIGN KEY (student_id) REFERENCES Student(student_id) ON DELETE CASCADE, FOREIGN KEY (course_id) REFERENCES Course(course_id) ON DELETE CASCADE, UNIQUE(student_id, course_id))
Mar 05, 2025 1:10:10 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS CompletedLessons(enrollment_id INTEGER NOT NULL, lesson_id INTEGER NOT NULL, PRIMARY KEY (enrollment_id, lesson_id), FOREIGN KEY (enrollment_id) REFERENCES Enrollment(enrollment_id) ON DELETE CASCADE, FOREIGN KEY (lesson_id) REFERENCES Lesson(lesson_id) ON DELETE CASCADE)
Mar 05, 2025 1:10:10 PM com.lms.db.TableCreator createTables
FINE: tables created successfully!
Mar 05, 2025 1:10:10 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] pragma busy_timeout=3000
Mar 05, 2025 1:10:10 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] pragma busy_timeout=3000
Mar 05, 2025 1:10:10 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] pragma busy_timeout=3000
Mar 05, 2025 1:10:10 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] SELECT * FROM Course
Mar 05, 2025 1:10:13 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] SELECT s.student_id, u.first_name, u.last_name, s.study_subject, e.enrollment_dateTime FROM Enrollment e JOIN Student s ON s.student_id = e.student_id JOIN User u ON s.user_id = u.user_id WHERE e.course_id = ?
Mar 05, 2025 1:10:13 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] begin;
Mar 05, 2025 1:10:13 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] commit;
Mar 05, 2025 1:10:23 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] pragma busy_timeout=3000
Mar 05, 2025 1:10:23 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS User(user_id INTEGER PRIMARY KEY AUTOINCREMENT, first_name VARCHAR(100) NOT NULL, last_name VARCHAR(100) NOT NULL, user_email VARCHAR(200) UNIQUE NOT NULL)
Mar 05, 2025 1:10:23 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] begin;
Mar 05, 2025 1:10:23 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] commit;
Mar 05, 2025 1:10:23 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS Student(student_id INTEGER PRIMARY KEY AUTOINCREMENT, user_id INTEGER NOT NULL, study_subject TEXT NOT NULL, FOREIGN KEY (user_id) REFERENCES User(user_id) ON DELETE CASCADE)
Mar 05, 2025 1:10:23 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS Course(course_id INTEGER PRIMARY KEY AUTOINCREMENT, serial_number TEXT UNIQUE NOT NULL, course_title VARCHAR(100) NOT NULL, course_description TEXT, category VARCHAR(100), difficulty_level VARCHAR(100), price REAL NOT NULL)
Mar 05, 2025 1:10:23 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS Lesson(lesson_id INTEGER PRIMARY KEY AUTOINCREMENT, course_id INTEGER NOT NULL, lesson_title TEXT NOT NULL, lesson_content TEXT, FOREIGN KEY (course_id) REFERENCES Course(course_id) ON DELETE CASCADE)
Mar 05, 2025 1:10:23 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS Enrollment(enrollment_id INTEGER PRIMARY KEY AUTOINCREMENT, enrollment_dateTime TEXT NOT NULL, student_id INTEGER NOT NULL, course_id INTEGER NOT NULL, rating INTEGER CHECK (rating BETWEEN 1 AND 5), FOREIGN KEY (student_id) REFERENCES Student(student_id) ON DELETE CASCADE, FOREIGN KEY (course_id) REFERENCES Course(course_id) ON DELETE CASCADE, UNIQUE(student_id, course_id))
Mar 05, 2025 1:10:23 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS CompletedLessons(enrollment_id INTEGER NOT NULL, lesson_id INTEGER NOT NULL, PRIMARY KEY (enrollment_id, lesson_id), FOREIGN KEY (enrollment_id) REFERENCES Enrollment(enrollment_id) ON DELETE CASCADE, FOREIGN KEY (lesson_id) REFERENCES Lesson(lesson_id) ON DELETE CASCADE)
Mar 05, 2025 1:10:23 PM com.lms.db.TableCreator createTables
FINE: tables created successfully!
Mar 05, 2025 1:10:23 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] pragma busy_timeout=3000
Mar 05, 2025 1:10:23 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] pragma busy_timeout=3000
Mar 05, 2025 1:10:23 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] pragma busy_timeout=3000
Mar 05, 2025 1:10:23 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] SELECT * FROM Course
Mar 05, 2025 1:10:26 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] SELECT s.student_id, u.first_name, u.last_name, s.study_subject, e.enrollment_dateTime FROM Enrollment e JOIN Student s ON s.student_id = e.student_id JOIN User u ON s.user_id = u.user_id WHERE e.course_id = ?
Mar 05, 2025 1:10:41 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] pragma busy_timeout=3000
Mar 05, 2025 1:10:41 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS User(user_id INTEGER PRIMARY KEY AUTOINCREMENT, first_name VARCHAR(100) NOT NULL, last_name VARCHAR(100) NOT NULL, user_email VARCHAR(200) UNIQUE NOT NULL)
Mar 05, 2025 1:10:41 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] begin;
Mar 05, 2025 1:10:41 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] commit;
Mar 05, 2025 1:10:41 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS Student(student_id INTEGER PRIMARY KEY AUTOINCREMENT, user_id INTEGER NOT NULL, study_subject TEXT NOT NULL, FOREIGN KEY (user_id) REFERENCES User(user_id) ON DELETE CASCADE)
Mar 05, 2025 1:10:41 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS Course(course_id INTEGER PRIMARY KEY AUTOINCREMENT, serial_number TEXT UNIQUE NOT NULL, course_title VARCHAR(100) NOT NULL, course_description TEXT, category VARCHAR(100), difficulty_level VARCHAR(100), price REAL NOT NULL)
Mar 05, 2025 1:10:41 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS Lesson(lesson_id INTEGER PRIMARY KEY AUTOINCREMENT, course_id INTEGER NOT NULL, lesson_title TEXT NOT NULL, lesson_content TEXT, FOREIGN KEY (course_id) REFERENCES Course(course_id) ON DELETE CASCADE)
Mar 05, 2025 1:10:41 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS Enrollment(enrollment_id INTEGER PRIMARY KEY AUTOINCREMENT, enrollment_dateTime TEXT NOT NULL, student_id INTEGER NOT NULL, course_id INTEGER NOT NULL, rating INTEGER CHECK (rating BETWEEN 1 AND 5), FOREIGN KEY (student_id) REFERENCES Student(student_id) ON DELETE CASCADE, FOREIGN KEY (course_id) REFERENCES Course(course_id) ON DELETE CASCADE, UNIQUE(student_id, course_id))
Mar 05, 2025 1:10:41 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS CompletedLessons(enrollment_id INTEGER NOT NULL, lesson_id INTEGER NOT NULL, PRIMARY KEY (enrollment_id, lesson_id), FOREIGN KEY (enrollment_id) REFERENCES Enrollment(enrollment_id) ON DELETE CASCADE, FOREIGN KEY (lesson_id) REFERENCES Lesson(lesson_id) ON DELETE CASCADE)
Mar 05, 2025 1:10:41 PM com.lms.db.TableCreator createTables
FINE: tables created successfully!
Mar 05, 2025 1:10:41 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] pragma busy_timeout=3000
Mar 05, 2025 1:10:41 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] pragma busy_timeout=3000
Mar 05, 2025 1:10:41 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] pragma busy_timeout=3000
Mar 05, 2025 1:10:41 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] SELECT * FROM Course
Mar 05, 2025 1:10:43 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] SELECT s.student_id, u.first_name, u.last_name, s.study_subject, e.enrollment_dateTime FROM Enrollment e JOIN Student s ON s.student_id = e.student_id JOIN User u ON s.user_id = u.user_id WHERE e.course_id = ?
Mar 05, 2025 1:17:45 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] pragma busy_timeout=3000
Mar 05, 2025 1:17:45 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS User(user_id INTEGER PRIMARY KEY AUTOINCREMENT, first_name VARCHAR(100) NOT NULL, last_name VARCHAR(100) NOT NULL, user_email VARCHAR(200) UNIQUE NOT NULL)
Mar 05, 2025 1:17:45 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] begin;
Mar 05, 2025 1:17:45 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] commit;
Mar 05, 2025 1:17:45 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS Student(student_id INTEGER PRIMARY KEY AUTOINCREMENT, user_id INTEGER NOT NULL, study_subject TEXT NOT NULL, FOREIGN KEY (user_id) REFERENCES User(user_id) ON DELETE CASCADE)
Mar 05, 2025 1:17:45 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS Course(course_id INTEGER PRIMARY KEY AUTOINCREMENT, serial_number TEXT UNIQUE NOT NULL, course_title VARCHAR(100) NOT NULL, course_description TEXT, category VARCHAR(100), difficulty_level VARCHAR(100), price REAL NOT NULL)
Mar 05, 2025 1:17:45 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS Lesson(lesson_id INTEGER PRIMARY KEY AUTOINCREMENT, course_id INTEGER NOT NULL, lesson_title TEXT NOT NULL, lesson_content TEXT, FOREIGN KEY (course_id) REFERENCES Course(course_id) ON DELETE CASCADE)
Mar 05, 2025 1:17:45 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS Enrollment(enrollment_id INTEGER PRIMARY KEY AUTOINCREMENT, enrollment_dateTime TEXT NOT NULL, student_id INTEGER NOT NULL, course_id INTEGER NOT NULL, rating INTEGER CHECK (rating BETWEEN 1 AND 5), FOREIGN KEY (student_id) REFERENCES Student(student_id) ON DELETE CASCADE, FOREIGN KEY (course_id) REFERENCES Course(course_id) ON DELETE CASCADE, UNIQUE(student_id, course_id))
Mar 05, 2025 1:17:45 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS CompletedLessons(enrollment_id INTEGER NOT NULL, lesson_id INTEGER NOT NULL, PRIMARY KEY (enrollment_id, lesson_id), FOREIGN KEY (enrollment_id) REFERENCES Enrollment(enrollment_id) ON DELETE CASCADE, FOREIGN KEY (lesson_id) REFERENCES Lesson(lesson_id) ON DELETE CASCADE)
Mar 05, 2025 1:17:45 PM com.lms.db.TableCreator createTables
FINE: tables created successfully!
Mar 05, 2025 1:17:45 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] pragma busy_timeout=3000
Mar 05, 2025 1:17:45 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] pragma busy_timeout=3000
Mar 05, 2025 1:17:45 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] pragma busy_timeout=3000
Mar 05, 2025 1:17:45 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] SELECT User.user_id, User.first_name, User.last_name, User.user_email, Student.student_id, Student.study_subject From Student JOIN User ON Student.user_id = User.user_id
Mar 05, 2025 1:17:53 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] SELECT e.enrollment_id, c.serial_number, c.course_title, c.course_description, e.enrollment_dateTime FROM Enrollment e JOIN Course c ON e.course_id = c.course_id WHERE e.student_id = ?
Mar 05, 2025 1:17:53 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] begin;
Mar 05, 2025 1:17:53 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] commit;
Mar 05, 2025 1:17:53 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] SELECT * FROM Course
Mar 05, 2025 1:18:05 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] SELECT e.enrollment_id, s.student_id, u.first_name, u.last_name, s.study_subject, e.enrollment_dateTime FROM Enrollment e JOIN Student s ON s.student_id = e.student_id JOIN User u ON s.user_id = u.user_id WHERE e.course_id = ?
Mar 05, 2025 1:18:42 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] pragma busy_timeout=3000
Mar 05, 2025 1:18:42 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS User(user_id INTEGER PRIMARY KEY AUTOINCREMENT, first_name VARCHAR(100) NOT NULL, last_name VARCHAR(100) NOT NULL, user_email VARCHAR(200) UNIQUE NOT NULL)
Mar 05, 2025 1:18:42 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] begin;
Mar 05, 2025 1:18:42 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] commit;
Mar 05, 2025 1:18:42 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS Student(student_id INTEGER PRIMARY KEY AUTOINCREMENT, user_id INTEGER NOT NULL, study_subject TEXT NOT NULL, FOREIGN KEY (user_id) REFERENCES User(user_id) ON DELETE CASCADE)
Mar 05, 2025 1:18:42 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS Course(course_id INTEGER PRIMARY KEY AUTOINCREMENT, serial_number TEXT UNIQUE NOT NULL, course_title VARCHAR(100) NOT NULL, course_description TEXT, category VARCHAR(100), difficulty_level VARCHAR(100), price REAL NOT NULL)
Mar 05, 2025 1:18:42 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS Lesson(lesson_id INTEGER PRIMARY KEY AUTOINCREMENT, course_id INTEGER NOT NULL, lesson_title TEXT NOT NULL, lesson_content TEXT, FOREIGN KEY (course_id) REFERENCES Course(course_id) ON DELETE CASCADE)
Mar 05, 2025 1:18:42 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS Enrollment(enrollment_id INTEGER PRIMARY KEY AUTOINCREMENT, enrollment_dateTime TEXT NOT NULL, student_id INTEGER NOT NULL, course_id INTEGER NOT NULL, rating INTEGER CHECK (rating BETWEEN 1 AND 5), FOREIGN KEY (student_id) REFERENCES Student(student_id) ON DELETE CASCADE, FOREIGN KEY (course_id) REFERENCES Course(course_id) ON DELETE CASCADE, UNIQUE(student_id, course_id))
Mar 05, 2025 1:18:42 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS CompletedLessons(enrollment_id INTEGER NOT NULL, lesson_id INTEGER NOT NULL, PRIMARY KEY (enrollment_id, lesson_id), FOREIGN KEY (enrollment_id) REFERENCES Enrollment(enrollment_id) ON DELETE CASCADE, FOREIGN KEY (lesson_id) REFERENCES Lesson(lesson_id) ON DELETE CASCADE)
Mar 05, 2025 1:18:42 PM com.lms.db.TableCreator createTables
FINE: tables created successfully!
Mar 05, 2025 1:18:42 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] pragma busy_timeout=3000
Mar 05, 2025 1:18:42 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] pragma busy_timeout=3000
Mar 05, 2025 1:18:42 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] pragma busy_timeout=3000
Mar 05, 2025 1:18:42 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] SELECT User.user_id, User.first_name, User.last_name, User.user_email, Student.student_id, Student.study_subject From Student JOIN User ON Student.user_id = User.user_id
Mar 05, 2025 1:19:01 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] SELECT e.enrollment_id, c.serial_number, c.course_title, c.course_description, e.enrollment_dateTime FROM Enrollment e JOIN Course c ON e.course_id = c.course_id WHERE e.student_id = ?
Mar 05, 2025 1:19:01 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] begin;
Mar 05, 2025 1:19:01 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] commit;
Mar 05, 2025 1:19:01 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] SELECT * FROM Course
Mar 05, 2025 1:19:13 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] SELECT e.enrollment_id, s.student_id, u.first_name, u.last_name, s.study_subject, e.enrollment_dateTime FROM Enrollment e JOIN Student s ON s.student_id = e.student_id JOIN User u ON s.user_id = u.user_id WHERE e.course_id = ?
Mar 05, 2025 1:19:39 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] pragma busy_timeout=3000
Mar 05, 2025 1:19:39 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS User(user_id INTEGER PRIMARY KEY AUTOINCREMENT, first_name VARCHAR(100) NOT NULL, last_name VARCHAR(100) NOT NULL, user_email VARCHAR(200) UNIQUE NOT NULL)
Mar 05, 2025 1:19:39 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] begin;
Mar 05, 2025 1:19:39 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] commit;
Mar 05, 2025 1:19:39 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS Student(student_id INTEGER PRIMARY KEY AUTOINCREMENT, user_id INTEGER NOT NULL, study_subject TEXT NOT NULL, FOREIGN KEY (user_id) REFERENCES User(user_id) ON DELETE CASCADE)
Mar 05, 2025 1:19:39 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS Course(course_id INTEGER PRIMARY KEY AUTOINCREMENT, serial_number TEXT UNIQUE NOT NULL, course_title VARCHAR(100) NOT NULL, course_description TEXT, category VARCHAR(100), difficulty_level VARCHAR(100), price REAL NOT NULL)
Mar 05, 2025 1:19:39 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS Lesson(lesson_id INTEGER PRIMARY KEY AUTOINCREMENT, course_id INTEGER NOT NULL, lesson_title TEXT NOT NULL, lesson_content TEXT, FOREIGN KEY (course_id) REFERENCES Course(course_id) ON DELETE CASCADE)
Mar 05, 2025 1:19:39 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS Enrollment(enrollment_id INTEGER PRIMARY KEY AUTOINCREMENT, enrollment_dateTime TEXT NOT NULL, student_id INTEGER NOT NULL, course_id INTEGER NOT NULL, rating INTEGER CHECK (rating BETWEEN 1 AND 5), FOREIGN KEY (student_id) REFERENCES Student(student_id) ON DELETE CASCADE, FOREIGN KEY (course_id) REFERENCES Course(course_id) ON DELETE CASCADE, UNIQUE(student_id, course_id))
Mar 05, 2025 1:19:39 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS CompletedLessons(enrollment_id INTEGER NOT NULL, lesson_id INTEGER NOT NULL, PRIMARY KEY (enrollment_id, lesson_id), FOREIGN KEY (enrollment_id) REFERENCES Enrollment(enrollment_id) ON DELETE CASCADE, FOREIGN KEY (lesson_id) REFERENCES Lesson(lesson_id) ON DELETE CASCADE)
Mar 05, 2025 1:19:39 PM com.lms.db.TableCreator createTables
FINE: tables created successfully!
Mar 05, 2025 1:19:39 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] pragma busy_timeout=3000
Mar 05, 2025 1:19:39 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] pragma busy_timeout=3000
Mar 05, 2025 1:19:39 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] pragma busy_timeout=3000
Mar 05, 2025 1:19:39 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] SELECT User.user_id, User.first_name, User.last_name, User.user_email, Student.student_id, Student.study_subject From Student JOIN User ON Student.user_id = User.user_id
Mar 05, 2025 1:19:42 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] SELECT e.enrollment_id, c.serial_number, c.course_title, c.course_description, e.enrollment_dateTime FROM Enrollment e JOIN Course c ON e.course_id = c.course_id WHERE e.student_id = ?
Mar 05, 2025 1:19:42 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] SELECT * FROM Course
Mar 05, 2025 1:19:57 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] SELECT e.enrollment_id, s.student_id, u.first_name, u.last_name, s.study_subject, e.enrollment_dateTime FROM Enrollment e JOIN Student s ON s.student_id = e.student_id JOIN User u ON s.user_id = u.user_id WHERE e.course_id = ?
Mar 05, 2025 1:20:21 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] pragma busy_timeout=3000
Mar 05, 2025 1:20:21 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS User(user_id INTEGER PRIMARY KEY AUTOINCREMENT, first_name VARCHAR(100) NOT NULL, last_name VARCHAR(100) NOT NULL, user_email VARCHAR(200) UNIQUE NOT NULL)
Mar 05, 2025 1:20:21 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] begin;
Mar 05, 2025 1:20:21 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] commit;
Mar 05, 2025 1:20:21 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS Student(student_id INTEGER PRIMARY KEY AUTOINCREMENT, user_id INTEGER NOT NULL, study_subject TEXT NOT NULL, FOREIGN KEY (user_id) REFERENCES User(user_id) ON DELETE CASCADE)
Mar 05, 2025 1:20:21 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS Course(course_id INTEGER PRIMARY KEY AUTOINCREMENT, serial_number TEXT UNIQUE NOT NULL, course_title VARCHAR(100) NOT NULL, course_description TEXT, category VARCHAR(100), difficulty_level VARCHAR(100), price REAL NOT NULL)
Mar 05, 2025 1:20:21 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS Lesson(lesson_id INTEGER PRIMARY KEY AUTOINCREMENT, course_id INTEGER NOT NULL, lesson_title TEXT NOT NULL, lesson_content TEXT, FOREIGN KEY (course_id) REFERENCES Course(course_id) ON DELETE CASCADE)
Mar 05, 2025 1:20:21 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS Enrollment(enrollment_id INTEGER PRIMARY KEY AUTOINCREMENT, enrollment_dateTime TEXT NOT NULL, student_id INTEGER NOT NULL, course_id INTEGER NOT NULL, rating INTEGER CHECK (rating BETWEEN 1 AND 5), FOREIGN KEY (student_id) REFERENCES Student(student_id) ON DELETE CASCADE, FOREIGN KEY (course_id) REFERENCES Course(course_id) ON DELETE CASCADE, UNIQUE(student_id, course_id))
Mar 05, 2025 1:20:21 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS CompletedLessons(enrollment_id INTEGER NOT NULL, lesson_id INTEGER NOT NULL, PRIMARY KEY (enrollment_id, lesson_id), FOREIGN KEY (enrollment_id) REFERENCES Enrollment(enrollment_id) ON DELETE CASCADE, FOREIGN KEY (lesson_id) REFERENCES Lesson(lesson_id) ON DELETE CASCADE)
Mar 05, 2025 1:20:21 PM com.lms.db.TableCreator createTables
FINE: tables created successfully!
Mar 05, 2025 1:20:21 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] pragma busy_timeout=3000
Mar 05, 2025 1:20:21 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] pragma busy_timeout=3000
Mar 05, 2025 1:20:21 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] pragma busy_timeout=3000
Mar 05, 2025 1:20:21 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] SELECT User.user_id, User.first_name, User.last_name, User.user_email, Student.student_id, Student.study_subject From Student JOIN User ON Student.user_id = User.user_id
Mar 06, 2025 12:43:04 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] pragma busy_timeout=3000
Mar 06, 2025 12:43:04 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS User(user_id INTEGER PRIMARY KEY AUTOINCREMENT, first_name VARCHAR(100) NOT NULL, last_name VARCHAR(100) NOT NULL, user_email VARCHAR(200) UNIQUE NOT NULL)
Mar 06, 2025 12:43:04 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] begin;
Mar 06, 2025 12:43:04 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] commit;
Mar 06, 2025 12:43:04 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS Student(student_id INTEGER PRIMARY KEY AUTOINCREMENT, user_id INTEGER NOT NULL, study_subject TEXT NOT NULL, FOREIGN KEY (user_id) REFERENCES User(user_id) ON DELETE CASCADE)
Mar 06, 2025 12:43:04 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS Course(course_id INTEGER PRIMARY KEY AUTOINCREMENT, serial_number TEXT UNIQUE NOT NULL, course_title VARCHAR(100) NOT NULL, course_description TEXT, category VARCHAR(100), difficulty_level VARCHAR(100), price REAL NOT NULL)
Mar 06, 2025 12:43:04 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS Lesson(lesson_id INTEGER PRIMARY KEY AUTOINCREMENT, course_id INTEGER NOT NULL, lesson_title TEXT NOT NULL, lesson_content TEXT, FOREIGN KEY (course_id) REFERENCES Course(course_id) ON DELETE CASCADE)
Mar 06, 2025 12:43:04 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS Enrollment(enrollment_id INTEGER PRIMARY KEY AUTOINCREMENT, enrollment_dateTime TEXT NOT NULL, student_id INTEGER NOT NULL, course_id INTEGER NOT NULL, rating DOUBLE CHECK (rating BETWEEN 1 AND 5), FOREIGN KEY (student_id) REFERENCES Student(student_id) ON DELETE CASCADE, FOREIGN KEY (course_id) REFERENCES Course(course_id) ON DELETE CASCADE, UNIQUE(student_id, course_id))
Mar 06, 2025 12:43:04 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS CompletedLessons(enrollment_id INTEGER NOT NULL, lesson_id INTEGER NOT NULL, PRIMARY KEY (enrollment_id, lesson_id), FOREIGN KEY (enrollment_id) REFERENCES Enrollment(enrollment_id) ON DELETE CASCADE, FOREIGN KEY (lesson_id) REFERENCES Lesson(lesson_id) ON DELETE CASCADE)
Mar 06, 2025 12:43:04 AM com.lms.db.TableCreator createTables
FINE: tables created successfully!
Mar 06, 2025 12:43:04 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] pragma busy_timeout=3000
Mar 06, 2025 12:43:04 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] pragma busy_timeout=3000
Mar 06, 2025 12:43:04 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] pragma busy_timeout=3000
Mar 06, 2025 12:43:04 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] SELECT * FROM Course
Mar 06, 2025 12:45:18 AM com.lms.managers.CourseManager searchByTitleOrDescription
INFO: 1 courses found matching the search criteria
Mar 06, 2025 12:45:49 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] pragma busy_timeout=3000
Mar 06, 2025 12:45:49 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS User(user_id INTEGER PRIMARY KEY AUTOINCREMENT, first_name VARCHAR(100) NOT NULL, last_name VARCHAR(100) NOT NULL, user_email VARCHAR(200) UNIQUE NOT NULL)
Mar 06, 2025 12:45:49 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] begin;
Mar 06, 2025 12:45:49 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] commit;
Mar 06, 2025 12:45:49 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS Student(student_id INTEGER PRIMARY KEY AUTOINCREMENT, user_id INTEGER NOT NULL, study_subject TEXT NOT NULL, FOREIGN KEY (user_id) REFERENCES User(user_id) ON DELETE CASCADE)
Mar 06, 2025 12:45:49 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS Course(course_id INTEGER PRIMARY KEY AUTOINCREMENT, serial_number TEXT UNIQUE NOT NULL, course_title VARCHAR(100) NOT NULL, course_description TEXT, category VARCHAR(100), difficulty_level VARCHAR(100), price REAL NOT NULL)
Mar 06, 2025 12:45:49 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS Lesson(lesson_id INTEGER PRIMARY KEY AUTOINCREMENT, course_id INTEGER NOT NULL, lesson_title TEXT NOT NULL, lesson_content TEXT, FOREIGN KEY (course_id) REFERENCES Course(course_id) ON DELETE CASCADE)
Mar 06, 2025 12:45:49 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS Enrollment(enrollment_id INTEGER PRIMARY KEY AUTOINCREMENT, enrollment_dateTime TEXT NOT NULL, student_id INTEGER NOT NULL, course_id INTEGER NOT NULL, rating DOUBLE CHECK (rating BETWEEN 1 AND 5), FOREIGN KEY (student_id) REFERENCES Student(student_id) ON DELETE CASCADE, FOREIGN KEY (course_id) REFERENCES Course(course_id) ON DELETE CASCADE, UNIQUE(student_id, course_id))
Mar 06, 2025 12:45:49 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS CompletedLessons(enrollment_id INTEGER NOT NULL, lesson_id INTEGER NOT NULL, PRIMARY KEY (enrollment_id, lesson_id), FOREIGN KEY (enrollment_id) REFERENCES Enrollment(enrollment_id) ON DELETE CASCADE, FOREIGN KEY (lesson_id) REFERENCES Lesson(lesson_id) ON DELETE CASCADE)
Mar 06, 2025 12:45:49 AM com.lms.db.TableCreator createTables
FINE: tables created successfully!
Mar 06, 2025 12:45:49 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] pragma busy_timeout=3000
Mar 06, 2025 12:45:49 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] pragma busy_timeout=3000
Mar 06, 2025 12:45:49 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] pragma busy_timeout=3000
Mar 06, 2025 12:45:49 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] SELECT * FROM Course
Mar 06, 2025 12:45:58 AM com.lms.managers.CourseManager searchByTitleOrDescription
INFO: 1 courses found matching the search criteria
Mar 06, 2025 12:46:12 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] UPDATE Course SET course_title = ?, course_description = ?, category = ?, difficulty_level = ?, price = ?WHERE serial_number = ?
Mar 06, 2025 12:46:14 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] begin;
Mar 06, 2025 12:46:14 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] commit;
Mar 06, 2025 12:46:23 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] SELECT * FROM Course
Mar 06, 2025 12:48:30 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] pragma busy_timeout=3000
Mar 06, 2025 12:48:31 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS User(user_id INTEGER PRIMARY KEY AUTOINCREMENT, first_name VARCHAR(100) NOT NULL, last_name VARCHAR(100) NOT NULL, user_email VARCHAR(200) UNIQUE NOT NULL)
Mar 06, 2025 12:48:31 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] begin;
Mar 06, 2025 12:48:31 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] commit;
Mar 06, 2025 12:48:31 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS Student(student_id INTEGER PRIMARY KEY AUTOINCREMENT, user_id INTEGER NOT NULL, study_subject TEXT NOT NULL, FOREIGN KEY (user_id) REFERENCES User(user_id) ON DELETE CASCADE)
Mar 06, 2025 12:48:31 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS Course(course_id INTEGER PRIMARY KEY AUTOINCREMENT, serial_number TEXT UNIQUE NOT NULL, course_title VARCHAR(100) NOT NULL, course_description TEXT, category VARCHAR(100), difficulty_level VARCHAR(100), price REAL NOT NULL)
Mar 06, 2025 12:48:31 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS Lesson(lesson_id INTEGER PRIMARY KEY AUTOINCREMENT, course_id INTEGER NOT NULL, lesson_title TEXT NOT NULL, lesson_content TEXT, FOREIGN KEY (course_id) REFERENCES Course(course_id) ON DELETE CASCADE)
Mar 06, 2025 12:48:31 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS Enrollment(enrollment_id INTEGER PRIMARY KEY AUTOINCREMENT, enrollment_dateTime TEXT NOT NULL, student_id INTEGER NOT NULL, course_id INTEGER NOT NULL, rating DOUBLE CHECK (rating BETWEEN 1 AND 5), FOREIGN KEY (student_id) REFERENCES Student(student_id) ON DELETE CASCADE, FOREIGN KEY (course_id) REFERENCES Course(course_id) ON DELETE CASCADE, UNIQUE(student_id, course_id))
Mar 06, 2025 12:48:31 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS CompletedLessons(enrollment_id INTEGER NOT NULL, lesson_id INTEGER NOT NULL, PRIMARY KEY (enrollment_id, lesson_id), FOREIGN KEY (enrollment_id) REFERENCES Enrollment(enrollment_id) ON DELETE CASCADE, FOREIGN KEY (lesson_id) REFERENCES Lesson(lesson_id) ON DELETE CASCADE)
Mar 06, 2025 12:48:31 AM com.lms.db.TableCreator createTables
FINE: tables created successfully!
Mar 06, 2025 12:48:31 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] pragma busy_timeout=3000
Mar 06, 2025 12:48:31 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] pragma busy_timeout=3000
Mar 06, 2025 12:48:31 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] pragma busy_timeout=3000
Mar 06, 2025 12:48:31 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] SELECT * FROM Course
Mar 06, 2025 12:49:43 AM com.lms.managers.CourseManager searchByTitleOrDescription
INFO: 1 courses found matching the search criteria
Mar 06, 2025 12:49:57 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] UPDATE Course SET course_title = ?, course_description = ?, category = ?, difficulty_level = ?, price = ?WHERE serial_number = ?
Mar 06, 2025 12:50:01 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] begin;
Mar 06, 2025 12:50:01 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] commit;
Mar 06, 2025 12:50:26 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] SELECT * FROM Course
Mar 06, 2025 12:54:47 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] pragma busy_timeout=3000
Mar 06, 2025 12:54:47 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS User(user_id INTEGER PRIMARY KEY AUTOINCREMENT, first_name VARCHAR(100) NOT NULL, last_name VARCHAR(100) NOT NULL, user_email VARCHAR(200) UNIQUE NOT NULL)
Mar 06, 2025 12:54:47 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] begin;
Mar 06, 2025 12:54:47 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] commit;
Mar 06, 2025 12:54:47 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS Student(student_id INTEGER PRIMARY KEY AUTOINCREMENT, user_id INTEGER NOT NULL, study_subject TEXT NOT NULL, FOREIGN KEY (user_id) REFERENCES User(user_id) ON DELETE CASCADE)
Mar 06, 2025 12:54:47 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS Course(course_id INTEGER PRIMARY KEY AUTOINCREMENT, serial_number TEXT UNIQUE NOT NULL, course_title VARCHAR(100) NOT NULL, course_description TEXT, category VARCHAR(100), difficulty_level VARCHAR(100), price REAL NOT NULL)
Mar 06, 2025 12:54:47 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS Lesson(lesson_id INTEGER PRIMARY KEY AUTOINCREMENT, course_id INTEGER NOT NULL, lesson_title TEXT NOT NULL, lesson_content TEXT, FOREIGN KEY (course_id) REFERENCES Course(course_id) ON DELETE CASCADE)
Mar 06, 2025 12:54:47 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS Enrollment(enrollment_id INTEGER PRIMARY KEY AUTOINCREMENT, enrollment_dateTime TEXT NOT NULL, student_id INTEGER NOT NULL, course_id INTEGER NOT NULL, rating DOUBLE CHECK (rating BETWEEN 1 AND 5), FOREIGN KEY (student_id) REFERENCES Student(student_id) ON DELETE CASCADE, FOREIGN KEY (course_id) REFERENCES Course(course_id) ON DELETE CASCADE, UNIQUE(student_id, course_id))
Mar 06, 2025 12:54:47 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS CompletedLessons(enrollment_id INTEGER NOT NULL, lesson_id INTEGER NOT NULL, PRIMARY KEY (enrollment_id, lesson_id), FOREIGN KEY (enrollment_id) REFERENCES Enrollment(enrollment_id) ON DELETE CASCADE, FOREIGN KEY (lesson_id) REFERENCES Lesson(lesson_id) ON DELETE CASCADE)
Mar 06, 2025 12:54:47 AM com.lms.db.TableCreator createTables
FINE: tables created successfully!
Mar 06, 2025 12:54:47 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] pragma busy_timeout=3000
Mar 06, 2025 12:54:47 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] pragma busy_timeout=3000
Mar 06, 2025 12:54:47 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] pragma busy_timeout=3000
Mar 06, 2025 12:54:47 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] SELECT * FROM Course
Mar 06, 2025 12:54:55 AM com.lms.managers.CourseManager searchByTitleOrDescription
WARNING: No courses matched the search criteria: jV
Mar 06, 2025 12:55:00 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] UPDATE Course SET course_title = ?, course_description = ?, category = ?, difficulty_level = ?, price = ?WHERE serial_number = ?
Mar 06, 2025 12:55:00 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] begin;
Mar 06, 2025 12:55:00 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] commit;
Mar 06, 2025 12:55:00 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] SELECT * FROM Course
Mar 06, 2025 1:08:10 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] pragma busy_timeout=3000
Mar 06, 2025 1:08:10 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS User(user_id INTEGER PRIMARY KEY AUTOINCREMENT, first_name VARCHAR(100) NOT NULL, last_name VARCHAR(100) NOT NULL, user_email VARCHAR(200) UNIQUE NOT NULL)
Mar 06, 2025 1:08:10 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] begin;
Mar 06, 2025 1:08:10 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] commit;
Mar 06, 2025 1:08:10 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS Student(student_id INTEGER PRIMARY KEY AUTOINCREMENT, user_id INTEGER NOT NULL, study_subject TEXT NOT NULL, FOREIGN KEY (user_id) REFERENCES User(user_id) ON DELETE CASCADE)
Mar 06, 2025 1:08:10 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS Course(course_id INTEGER PRIMARY KEY AUTOINCREMENT, serial_number TEXT UNIQUE NOT NULL, course_title VARCHAR(100) NOT NULL, course_description TEXT, category VARCHAR(100), difficulty_level VARCHAR(100), price REAL NOT NULL)
Mar 06, 2025 1:08:10 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS Lesson(lesson_id INTEGER PRIMARY KEY AUTOINCREMENT, course_id INTEGER NOT NULL, lesson_title TEXT NOT NULL, lesson_content TEXT, FOREIGN KEY (course_id) REFERENCES Course(course_id) ON DELETE CASCADE)
Mar 06, 2025 1:08:10 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS Enrollment(enrollment_id INTEGER PRIMARY KEY AUTOINCREMENT, enrollment_dateTime TEXT NOT NULL, student_id INTEGER NOT NULL, course_id INTEGER NOT NULL, rating DOUBLE CHECK (rating BETWEEN 1 AND 5), FOREIGN KEY (student_id) REFERENCES Student(student_id) ON DELETE CASCADE, FOREIGN KEY (course_id) REFERENCES Course(course_id) ON DELETE CASCADE, UNIQUE(student_id, course_id))
Mar 06, 2025 1:08:10 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS CompletedLessons(enrollment_id INTEGER NOT NULL, lesson_id INTEGER NOT NULL, PRIMARY KEY (enrollment_id, lesson_id), FOREIGN KEY (enrollment_id) REFERENCES Enrollment(enrollment_id) ON DELETE CASCADE, FOREIGN KEY (lesson_id) REFERENCES Lesson(lesson_id) ON DELETE CASCADE)
Mar 06, 2025 1:08:10 AM com.lms.db.TableCreator createTables
FINE: tables created successfully!
Mar 06, 2025 1:08:10 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] pragma busy_timeout=3000
Mar 06, 2025 1:08:10 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] pragma busy_timeout=3000
Mar 06, 2025 1:08:10 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] pragma busy_timeout=3000
Mar 06, 2025 1:08:10 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] SELECT * FROM Course
Mar 06, 2025 1:08:13 AM com.lms.managers.CourseManager searchByTitleOrDescription
INFO: 4 courses found matching the search criteria
Mar 06, 2025 1:08:15 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] UPDATE Course SET course_title = ?, course_description = ?, category = ?, difficulty_level = ?, price = ?WHERE serial_number = ?
Mar 06, 2025 1:08:15 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] begin;
Mar 06, 2025 1:08:15 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] commit;
Mar 06, 2025 1:08:15 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] SELECT * FROM Course
Mar 06, 2025 11:56:38 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] pragma busy_timeout=3000
Mar 06, 2025 11:56:38 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] pragma busy_timeout=3000
Mar 06, 2025 11:56:38 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS User(user_id INTEGER PRIMARY KEY AUTOINCREMENT, first_name VARCHAR(100) NOT NULL, last_name VARCHAR(100) NOT NULL, user_email VARCHAR(200) UNIQUE NOT NULL)
Mar 06, 2025 11:56:38 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] begin;
Mar 06, 2025 11:56:38 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] commit;
Mar 06, 2025 11:56:38 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS Student(student_id INTEGER PRIMARY KEY AUTOINCREMENT, user_id INTEGER NOT NULL, study_subject TEXT NOT NULL, FOREIGN KEY (user_id) REFERENCES User(user_id) ON DELETE CASCADE)
Mar 06, 2025 11:56:38 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS Course(course_id INTEGER PRIMARY KEY AUTOINCREMENT, serial_number TEXT UNIQUE NOT NULL, course_title VARCHAR(100) NOT NULL, course_description TEXT, category VARCHAR(100), difficulty_level VARCHAR(100), price REAL NOT NULL)
Mar 06, 2025 11:56:38 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS Lesson(lesson_id INTEGER PRIMARY KEY AUTOINCREMENT, course_id INTEGER NOT NULL, lesson_title TEXT NOT NULL, lesson_content TEXT, FOREIGN KEY (course_id) REFERENCES Course(course_id) ON DELETE CASCADE)
Mar 06, 2025 11:56:38 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS Enrollment(enrollment_id INTEGER PRIMARY KEY AUTOINCREMENT, enrollment_dateTime TEXT NOT NULL, student_id INTEGER NOT NULL, course_id INTEGER NOT NULL, rating DOUBLE CHECK (rating BETWEEN 1 AND 5), FOREIGN KEY (student_id) REFERENCES Student(student_id) ON DELETE CASCADE, FOREIGN KEY (course_id) REFERENCES Course(course_id) ON DELETE CASCADE, UNIQUE(student_id, course_id))
Mar 06, 2025 11:56:38 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS CompletedLessons(enrollment_id INTEGER NOT NULL, lesson_id INTEGER NOT NULL, PRIMARY KEY (enrollment_id, lesson_id), FOREIGN KEY (enrollment_id) REFERENCES Enrollment(enrollment_id) ON DELETE CASCADE, FOREIGN KEY (lesson_id) REFERENCES Lesson(lesson_id) ON DELETE CASCADE)
Mar 06, 2025 11:56:38 AM com.lms.db.TableCreator createTables
FINE: tables created successfully!
Mar 06, 2025 11:56:38 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] pragma busy_timeout=3000
Mar 06, 2025 11:56:38 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] pragma busy_timeout=3000
Mar 06, 2025 11:56:38 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] pragma busy_timeout=3000
Mar 06, 2025 11:56:55 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] SELECT User.user_id, User.first_name, User.last_name, User.user_email, Student.student_id, Student.study_subject From Student JOIN User ON Student.user_id = User.user_id
Mar 06, 2025 11:57:16 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] begin;
Mar 06, 2025 11:57:16 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] INSERT INTO User(first_name, last_name, user_email) VALUES(?, ?, ?)
Mar 06, 2025 11:57:16 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] SELECT * FROM User WHERE user_email = ?
Mar 06, 2025 11:57:16 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] INSERT INTO Student(user_id, study_subject) VALUES(?, ?)
Mar 06, 2025 11:57:16 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] commit;
Mar 06, 2025 11:57:16 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] begin;
Mar 06, 2025 11:57:16 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] commit;
Mar 06, 2025 11:57:16 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] begin;
Mar 06, 2025 11:57:16 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] commit;
Mar 06, 2025 11:57:21 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] SELECT User.user_id, User.first_name, User.last_name, User.user_email, Student.student_id, Student.study_subject From Student JOIN User ON Student.user_id = User.user_id
Mar 06, 2025 11:57:43 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] SELECT * FROM User WHERE user_email = ?
Mar 06, 2025 11:57:43 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] DELETE FROM Student WHERE user_id = ? 
Mar 06, 2025 11:57:48 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] SELECT User.user_id, User.first_name, User.last_name, User.user_email, Student.student_id, Student.study_subject From Student JOIN User ON Student.user_id = User.user_id
Mar 06, 2025 11:58:26 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] SELECT * FROM User WHERE user_email = ?
Mar 06, 2025 11:58:26 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] UPDATE User SET first_name = ?, last_name = ? WHERE user_email = ?
Mar 06, 2025 11:58:26 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] UPDATE Student SET study_subject = ? WHERE user_id = ?
Mar 06, 2025 11:58:29 AM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] SELECT User.user_id, User.first_name, User.last_name, User.user_email, Student.student_id, Student.study_subject From Student JOIN User ON Student.user_id = User.user_id
Mar 06, 2025 12:04:31 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] pragma busy_timeout=3000
Mar 06, 2025 12:04:31 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] pragma busy_timeout=3000
Mar 06, 2025 12:04:31 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS User(user_id INTEGER PRIMARY KEY AUTOINCREMENT, first_name VARCHAR(100) NOT NULL, last_name VARCHAR(100) NOT NULL, user_email VARCHAR(200) UNIQUE NOT NULL)
Mar 06, 2025 12:04:31 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] begin;
Mar 06, 2025 12:04:31 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] commit;
Mar 06, 2025 12:04:31 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS Student(student_id INTEGER PRIMARY KEY AUTOINCREMENT, user_id INTEGER NOT NULL, study_subject TEXT NOT NULL, FOREIGN KEY (user_id) REFERENCES User(user_id) ON DELETE CASCADE)
Mar 06, 2025 12:04:31 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS Course(course_id INTEGER PRIMARY KEY AUTOINCREMENT, serial_number TEXT UNIQUE NOT NULL, course_title VARCHAR(100) NOT NULL, course_description TEXT, category VARCHAR(100), difficulty_level VARCHAR(100), price REAL NOT NULL)
Mar 06, 2025 12:04:31 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS Lesson(lesson_id INTEGER PRIMARY KEY AUTOINCREMENT, course_id INTEGER NOT NULL, lesson_title TEXT NOT NULL, lesson_content TEXT, FOREIGN KEY (course_id) REFERENCES Course(course_id) ON DELETE CASCADE)
Mar 06, 2025 12:04:31 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS Enrollment(enrollment_id INTEGER PRIMARY KEY AUTOINCREMENT, enrollment_dateTime TEXT NOT NULL, student_id INTEGER NOT NULL, course_id INTEGER NOT NULL, rating DOUBLE CHECK (rating BETWEEN 1 AND 5), FOREIGN KEY (student_id) REFERENCES Student(student_id) ON DELETE CASCADE, FOREIGN KEY (course_id) REFERENCES Course(course_id) ON DELETE CASCADE, UNIQUE(student_id, course_id))
Mar 06, 2025 12:04:31 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS CompletedLessons(enrollment_id INTEGER NOT NULL, lesson_id INTEGER NOT NULL, PRIMARY KEY (enrollment_id, lesson_id), FOREIGN KEY (enrollment_id) REFERENCES Enrollment(enrollment_id) ON DELETE CASCADE, FOREIGN KEY (lesson_id) REFERENCES Lesson(lesson_id) ON DELETE CASCADE)
Mar 06, 2025 12:04:31 PM com.lms.db.TableCreator createTables
FINE: tables created successfully!
Mar 06, 2025 12:04:31 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] pragma busy_timeout=3000
Mar 06, 2025 12:04:31 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] pragma busy_timeout=3000
Mar 06, 2025 12:04:31 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] pragma busy_timeout=3000
Mar 06, 2025 12:04:38 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] SELECT User.user_id, User.first_name, User.last_name, User.user_email, Student.student_id, Student.study_subject From Student JOIN User ON Student.user_id = User.user_id
Mar 06, 2025 12:05:00 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] INSERT INTO Course(serial_number, course_title, course_description, category, difficulty_level, price) VALUES(?, ?, ?, ?, ?, ?)
Mar 06, 2025 12:05:00 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] begin;
Mar 06, 2025 12:05:00 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] commit;
Mar 06, 2025 12:05:00 PM com.lms.managers.CourseManager addCourse
INFO: Course ik_test_123 added successfully!
Mar 06, 2025 12:05:00 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] SELECT * FROM Course
Mar 06, 2025 12:06:11 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] INSERT INTO Course(serial_number, course_title, course_description, category, difficulty_level, price) VALUES(?, ?, ?, ?, ?, ?)
Mar 06, 2025 12:06:11 PM com.lms.managers.CourseManager addCourse
INFO: Course ii added successfully!
Mar 06, 2025 12:06:11 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] SELECT * FROM Course
Mar 06, 2025 12:08:44 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] pragma busy_timeout=3000
Mar 06, 2025 12:08:44 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] pragma busy_timeout=3000
Mar 06, 2025 12:08:44 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS User(user_id INTEGER PRIMARY KEY AUTOINCREMENT, first_name VARCHAR(100) NOT NULL, last_name VARCHAR(100) NOT NULL, user_email VARCHAR(200) UNIQUE NOT NULL)
Mar 06, 2025 12:08:44 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] begin;
Mar 06, 2025 12:08:44 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] commit;
Mar 06, 2025 12:08:44 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS Student(student_id INTEGER PRIMARY KEY AUTOINCREMENT, user_id INTEGER NOT NULL, study_subject TEXT NOT NULL, FOREIGN KEY (user_id) REFERENCES User(user_id) ON DELETE CASCADE)
Mar 06, 2025 12:08:44 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS Course(course_id INTEGER PRIMARY KEY AUTOINCREMENT, serial_number TEXT UNIQUE NOT NULL, course_title VARCHAR(100) NOT NULL, course_description TEXT, category VARCHAR(100), difficulty_level VARCHAR(100), price REAL NOT NULL)
Mar 06, 2025 12:08:44 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS Lesson(lesson_id INTEGER PRIMARY KEY AUTOINCREMENT, course_id INTEGER NOT NULL, lesson_title TEXT NOT NULL, lesson_content TEXT, FOREIGN KEY (course_id) REFERENCES Course(course_id) ON DELETE CASCADE)
Mar 06, 2025 12:08:44 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS Enrollment(enrollment_id INTEGER PRIMARY KEY AUTOINCREMENT, enrollment_dateTime TEXT NOT NULL, student_id INTEGER NOT NULL, course_id INTEGER NOT NULL, rating DOUBLE CHECK (rating BETWEEN 1 AND 5), FOREIGN KEY (student_id) REFERENCES Student(student_id) ON DELETE CASCADE, FOREIGN KEY (course_id) REFERENCES Course(course_id) ON DELETE CASCADE, UNIQUE(student_id, course_id))
Mar 06, 2025 12:08:44 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS CompletedLessons(enrollment_id INTEGER NOT NULL, lesson_id INTEGER NOT NULL, PRIMARY KEY (enrollment_id, lesson_id), FOREIGN KEY (enrollment_id) REFERENCES Enrollment(enrollment_id) ON DELETE CASCADE, FOREIGN KEY (lesson_id) REFERENCES Lesson(lesson_id) ON DELETE CASCADE)
Mar 06, 2025 12:08:44 PM com.lms.db.TableCreator createTables
FINE: tables created successfully!
Mar 06, 2025 12:08:44 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] pragma busy_timeout=3000
Mar 06, 2025 12:08:44 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] pragma busy_timeout=3000
Mar 06, 2025 12:08:44 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] pragma busy_timeout=3000
Mar 06, 2025 12:08:48 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] SELECT * FROM Course
Mar 06, 2025 1:56:10 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] pragma busy_timeout=3000
Mar 06, 2025 1:56:10 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] pragma busy_timeout=3000
Mar 06, 2025 1:56:10 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS User(user_id INTEGER PRIMARY KEY AUTOINCREMENT, first_name VARCHAR(100) NOT NULL, last_name VARCHAR(100) NOT NULL, user_email VARCHAR(200) UNIQUE NOT NULL)
Mar 06, 2025 1:56:10 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] begin;
Mar 06, 2025 1:56:10 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] commit;
Mar 06, 2025 1:56:10 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS Student(student_id INTEGER PRIMARY KEY AUTOINCREMENT, user_id INTEGER NOT NULL, study_subject TEXT NOT NULL, FOREIGN KEY (user_id) REFERENCES User(user_id) ON DELETE CASCADE)
Mar 06, 2025 1:56:10 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS Course(course_id INTEGER PRIMARY KEY AUTOINCREMENT, serial_number TEXT UNIQUE NOT NULL, course_title VARCHAR(100) NOT NULL, course_description TEXT, category VARCHAR(100), difficulty_level VARCHAR(100), price REAL NOT NULL)
Mar 06, 2025 1:56:10 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS Lesson(lesson_id INTEGER PRIMARY KEY AUTOINCREMENT, course_id INTEGER NOT NULL, lesson_title TEXT NOT NULL, lesson_content TEXT, FOREIGN KEY (course_id) REFERENCES Course(course_id) ON DELETE CASCADE)
Mar 06, 2025 1:56:10 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS Enrollment(enrollment_id INTEGER PRIMARY KEY AUTOINCREMENT, enrollment_dateTime TEXT NOT NULL, student_id INTEGER NOT NULL, course_id INTEGER NOT NULL, rating DOUBLE CHECK (rating BETWEEN 1 AND 5), FOREIGN KEY (student_id) REFERENCES Student(student_id) ON DELETE CASCADE, FOREIGN KEY (course_id) REFERENCES Course(course_id) ON DELETE CASCADE, UNIQUE(student_id, course_id))
Mar 06, 2025 1:56:10 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS CompletedLessons(enrollment_id INTEGER NOT NULL, lesson_id INTEGER NOT NULL, PRIMARY KEY (enrollment_id, lesson_id), FOREIGN KEY (enrollment_id) REFERENCES Enrollment(enrollment_id) ON DELETE CASCADE, FOREIGN KEY (lesson_id) REFERENCES Lesson(lesson_id) ON DELETE CASCADE)
Mar 06, 2025 1:56:10 PM com.lms.db.TableCreator createTables
FINE: tables created successfully!
Mar 06, 2025 1:56:10 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] pragma busy_timeout=3000
Mar 06, 2025 1:56:10 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] pragma busy_timeout=3000
Mar 06, 2025 1:56:10 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] pragma busy_timeout=3000
Mar 06, 2025 1:56:27 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] SELECT course_id, course_title From Course
Mar 06, 2025 1:56:27 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] SELECT AVG(rating) AS avg_rating FROM Enrollment WHERE course_id = ? AND rating IS NOT NULL
Mar 06, 2025 1:56:27 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] SELECT AVG(rating) AS avg_rating FROM Enrollment WHERE course_id = ? AND rating IS NOT NULL
Mar 06, 2025 1:56:27 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] SELECT AVG(rating) AS avg_rating FROM Enrollment WHERE course_id = ? AND rating IS NOT NULL
Mar 06, 2025 1:56:27 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] SELECT AVG(rating) AS avg_rating FROM Enrollment WHERE course_id = ? AND rating IS NOT NULL
Mar 06, 2025 1:56:27 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] SELECT AVG(rating) AS avg_rating FROM Enrollment WHERE course_id = ? AND rating IS NOT NULL
Mar 06, 2025 1:56:27 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] SELECT AVG(rating) AS avg_rating FROM Enrollment WHERE course_id = ? AND rating IS NOT NULL
Mar 06, 2025 1:56:27 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] SELECT AVG(rating) AS avg_rating FROM Enrollment WHERE course_id = ? AND rating IS NOT NULL
Mar 06, 2025 1:56:39 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] SELECT * FROM Course
Mar 06, 2025 1:57:03 PM com.lms.managers.CourseManager searchByTitleOrDescription
INFO: 3 courses found matching the search criteria
Mar 06, 2025 2:02:37 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] pragma busy_timeout=3000
Mar 06, 2025 2:02:37 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] pragma busy_timeout=3000
Mar 06, 2025 2:02:37 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS User(user_id INTEGER PRIMARY KEY AUTOINCREMENT, first_name VARCHAR(100) NOT NULL, last_name VARCHAR(100) NOT NULL, user_email VARCHAR(200) UNIQUE NOT NULL)
Mar 06, 2025 2:02:37 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] begin;
Mar 06, 2025 2:02:37 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] commit;
Mar 06, 2025 2:02:37 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS Student(student_id INTEGER PRIMARY KEY AUTOINCREMENT, user_id INTEGER NOT NULL, study_subject TEXT NOT NULL, FOREIGN KEY (user_id) REFERENCES User(user_id) ON DELETE CASCADE)
Mar 06, 2025 2:02:37 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS Course(course_id INTEGER PRIMARY KEY AUTOINCREMENT, serial_number TEXT UNIQUE NOT NULL, course_title VARCHAR(100) NOT NULL, course_description TEXT, category VARCHAR(100), difficulty_level VARCHAR(100), price REAL NOT NULL)
Mar 06, 2025 2:02:37 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS Lesson(lesson_id INTEGER PRIMARY KEY AUTOINCREMENT, course_id INTEGER NOT NULL, lesson_title TEXT NOT NULL, lesson_content TEXT, FOREIGN KEY (course_id) REFERENCES Course(course_id) ON DELETE CASCADE)
Mar 06, 2025 2:02:37 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS Enrollment(enrollment_id INTEGER PRIMARY KEY AUTOINCREMENT, enrollment_dateTime TEXT NOT NULL, student_id INTEGER NOT NULL, course_id INTEGER NOT NULL, rating DOUBLE CHECK (rating BETWEEN 1 AND 5), FOREIGN KEY (student_id) REFERENCES Student(student_id) ON DELETE CASCADE, FOREIGN KEY (course_id) REFERENCES Course(course_id) ON DELETE CASCADE, UNIQUE(student_id, course_id))
Mar 06, 2025 2:02:37 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS CompletedLessons(enrollment_id INTEGER NOT NULL, lesson_id INTEGER NOT NULL, PRIMARY KEY (enrollment_id, lesson_id), FOREIGN KEY (enrollment_id) REFERENCES Enrollment(enrollment_id) ON DELETE CASCADE, FOREIGN KEY (lesson_id) REFERENCES Lesson(lesson_id) ON DELETE CASCADE)
Mar 06, 2025 2:02:37 PM com.lms.db.TableCreator createTables
FINE: tables created successfully!
Mar 06, 2025 2:02:37 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] pragma busy_timeout=3000
Mar 06, 2025 2:02:37 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] pragma busy_timeout=3000
Mar 06, 2025 2:02:37 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] pragma busy_timeout=3000
Mar 06, 2025 2:02:43 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] SELECT * FROM Course
Mar 06, 2025 2:04:23 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] pragma busy_timeout=3000
Mar 06, 2025 2:04:23 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] pragma busy_timeout=3000
Mar 06, 2025 2:04:23 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS User(user_id INTEGER PRIMARY KEY AUTOINCREMENT, first_name VARCHAR(100) NOT NULL, last_name VARCHAR(100) NOT NULL, user_email VARCHAR(200) UNIQUE NOT NULL)
Mar 06, 2025 2:04:23 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] begin;
Mar 06, 2025 2:04:23 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] commit;
Mar 06, 2025 2:04:23 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS Student(student_id INTEGER PRIMARY KEY AUTOINCREMENT, user_id INTEGER NOT NULL, study_subject TEXT NOT NULL, FOREIGN KEY (user_id) REFERENCES User(user_id) ON DELETE CASCADE)
Mar 06, 2025 2:04:23 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS Course(course_id INTEGER PRIMARY KEY AUTOINCREMENT, serial_number TEXT UNIQUE NOT NULL, course_title VARCHAR(100) NOT NULL, course_description TEXT, category VARCHAR(100), difficulty_level VARCHAR(100), price REAL NOT NULL)
Mar 06, 2025 2:04:23 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS Lesson(lesson_id INTEGER PRIMARY KEY AUTOINCREMENT, course_id INTEGER NOT NULL, lesson_title TEXT NOT NULL, lesson_content TEXT, FOREIGN KEY (course_id) REFERENCES Course(course_id) ON DELETE CASCADE)
Mar 06, 2025 2:04:23 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS Enrollment(enrollment_id INTEGER PRIMARY KEY AUTOINCREMENT, enrollment_dateTime TEXT NOT NULL, student_id INTEGER NOT NULL, course_id INTEGER NOT NULL, rating DOUBLE CHECK (rating BETWEEN 1 AND 5), FOREIGN KEY (student_id) REFERENCES Student(student_id) ON DELETE CASCADE, FOREIGN KEY (course_id) REFERENCES Course(course_id) ON DELETE CASCADE, UNIQUE(student_id, course_id))
Mar 06, 2025 2:04:23 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] CREATE TABLE IF NOT EXISTS CompletedLessons(enrollment_id INTEGER NOT NULL, lesson_id INTEGER NOT NULL, PRIMARY KEY (enrollment_id, lesson_id), FOREIGN KEY (enrollment_id) REFERENCES Enrollment(enrollment_id) ON DELETE CASCADE, FOREIGN KEY (lesson_id) REFERENCES Lesson(lesson_id) ON DELETE CASCADE)
Mar 06, 2025 2:04:23 PM com.lms.db.TableCreator createTables
FINE: tables created successfully!
Mar 06, 2025 2:04:23 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] pragma busy_timeout=3000
Mar 06, 2025 2:04:23 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] pragma busy_timeout=3000
Mar 06, 2025 2:04:23 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] pragma busy_timeout=3000
Mar 06, 2025 2:04:25 PM org.sqlite.core.NativeDB prepare
FINEST: DriverManager [main] [SQLite EXEC] SELECT * FROM Course
Mar 06, 2025 2:05:58 PM com.lms.managers.CourseManager searchByTitleOrDescription
INFO: 1 courses found matching the search criteria
